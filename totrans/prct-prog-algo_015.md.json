["```\nColor red      = new Color(255,   0,   0);\nColor bookBlue = new Color(  9,  90, 166);\n\n```", "```\n    Picture a = new Picture(\"mandrill.jpg\");\n    Picture b = a;\n    a.set(col, row, color1);   // a updated\n    b.set(col, row, color2);   // a updated again\n\n    ```", "```\n    Color[] a = new Color[2];\n    a[0] = new Color(255, 255, 0);\n    a[1] = new Color(160, 82, 45);\n\n    ```", "```\n    Color a, b;\n    a = new Color(160, 82, 45);  // sienna\n    b = new Color(255, 255, 0);  // yellow\n    b = a;\n\n    ```", "```\n    public static boolean isValidDNA(String s) {\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (c != 'A' && c != 'T' && c != 'C' && c != 'G')\n                return false;\n        }\n\n    ```", "```\n    public static String complementWatsonCrick(String s) {\n        s = s.replaceAll(\"A\", \"t\");\n        s = s.replaceAll(\"T\", \"a\");\n        s = s.replaceAll(\"C\", \"g\");\n        s = s.replaceAll(\"G\", \"c\");\n        return s.toUpperCase();\n    }\n\n    ```", "```\n    String string1 = \"hello\";\n    String string2 = string1;\n    string1 = \"world\";\n    System.out.println(string2);\n\n    ```", "```\n    String s = \"Hello World\";\n    s.toUpperCase();\n    s.substring(6, 11);\n    StdOut.println(s);\n\n    ```", "```\n    public boolean isCircularShift(String s, String t) {\n        String s2 = s + s;\n        return s2.contains(t);\n    }\n\n    ```", "```\n    public static String mystery(String s) {\n        int n = s.length();\n        if (n <= 1) return s;\n        String a = s.substring(0, n/2);\n        String b = s.substring(n/2, N);\n        return mystery(b) + mystery(a);\n    }\n\n    ```", "```\n    int[] temp = a;\n    a = b;\n    b = temp;\n\n    ```", "```\n    public void swap(Color a, Color b) {\n        Color temp = a;\n        a = b;\n        b = temp;\n    }\n\n    ```", "```\n    T H E Q U I C K B R O W N\n    F X J M P S V L A Z Y D G\n\n    ```", "```\n\n    public static void main(String[] args) {\n        String[] months = {\n            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n        };\n        int[] days = {\n            31, 28, 31, 30, 31, 30,\n            31, 31, 30, 31, 30, 31\n        };\n        String name = args[0];\n        for (int i = 0; i < months.length; i++)\n           if (name.equalsIgnoreCase(months[i]))\n              System.out.println(name + \" has \" + days[i] + \" days\");\n    }\n\n    ```", "```\n    for (int i = 0; i < a.length; i++) {\n       String s = a[i];\n       s = s.toUpperCase();\n    }\n\n    for (int i = 0; i < a.length; i++) {\n       a[i].toUpperCase();\n    }\n\n    for (int i = 0; i < a.length; i++) {\n       a[i] = a[i].toUpperCase();\n    }\n\n    ```", "```\n    public static String mystery(int n) {\n       String s = \"\";\n       while (n > 0) {\n           if (n % 2 == 1) s = s + s + \"x\";\n           else            s = s + s;\n           n = n / 2;\n       }\n       return s;\n    }\n\n    ```", "```\n    public static String mystery(String s, String t) {\n       int n = s.length();\n       if (n <= 1) return s + t;\n       String a = mystery(s.substring(0, n/2), t.substring(0, n/2));\n       String b = mystery(s.substring(n/2, n), t.substring(n/2, n));\n       return a + b;\n    }\n\n    ```", "```\n    String extension = s.substring(s.lastIndexOf('.') + 1);\n\n    ```", "```\n    String alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for (int i = 0; i < N; i++) {\n       for (int j = 0; j < N; j++) {\n          char c = alphabet.charAt((i + j) % N);\n          System.out.print(c + \" \");\n       }\n       System.out.println();\n    }\n\n    ```", "```\n    String s = \"Hello World\";\n    s.toUpperCase();\n    s.substring(6, 11);\n    System.out.println(s);\n\n    ```", "```\n    String s = null;\n    int length = s.length();\n\n    ```", "```\n    int x = '-'-'-';\n    int y = '/'/'/';\n\n    ```", "```\n    System.out.println((c >= 'a' && c <= 'z') ||\n                       (c >= 'A' && c <= 'Z'));\n\n    ```", "```\n    boolean isDigit = ('0' <= c && c <= '9');\n\n    ```", "```\n    TTT Phe    TCT Ser    TAT Tyr    TGT Cys\n    TTC Phe    TCC Ser    TAC Tyr    TGC Cys\n    TTA Leu    TCA Ser    TAA ter    TGA ter\n    TTG Leu    TCG Ser    TAG ter    TGG Trp\n\n    CTT Leu    CCT Pro    CAT His    CGT Arg\n    CTC Leu    CCC Pro    CAC His    CGC Arg\n    CTA Leu    CCA Pro    CAA Gln    CGA Arg\n    CTG Leu    CCG Pro    CAG Gln    CGG Arg\n\n    ATT Ile    ACT Thr    AAT Asn    AGT Ser\n    ATC Ile    ACC Thr    AAC Asn    AGC Ser\n    ATA Ile    ACA Thr    AAA Lys    AGA Arg\n    ATG Met    ACG Thr    AAG Lys    AGG Arg\n\n    GTT Val    GCT Ala    GAT Asp    GGT Gly\n    GTC Val    GCC Ala    GAC Asp    GGC Gly\n    GTA Val    GCA Ala    GAA Glu    GGA Gly\n    GTG Val    GCG Ala    GAG Glu    GGG Gly\n\n    ```", "```\n    FORIXB MOQABJ GURILW SETUPL CMPDAE ACITAO SLCRAE ROMASH\n    NODESW HEFIYE ONUDTK TEVIGN ANEDVZ PINESH ABILYT GKYLEU\n\n    ```", "```\n    a b c d  e f g h i j k l m n o p q r s t u v w x y z -\n    9 2 2 4 12 2 3 2 9 1 1 4 2 6 8 2 1 6 4 6 4 2 2 1 2 1 2\n\n    ```", "```\n        1:  B, F, P, V\n        2:  C, G, J, K, Q, S, X, Z\n        3:  D, T\n        4:  L\n        5:  M, N\n        6:  R\n\n        ```", "```\n    0:  No corresponding letters\n    1:  No corresponding letters\n    2:  A B C\n    3:  D E F\n    4:  G H I\n    5:  J K L\n    6:  M N O\n    7:  P Q R S\n    8:  T U V\n    9:  W X Y Z\n\n    ```", "```\n    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n    1 2 3 4 5 6 7 8 - 1 2 3 4 5 - 7 - 9 2 3 4 5 6 7 8 9\n\n    1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10  11  12  13  14  15  16  17\n     8   7   6   5   4   3   2  10   0   9   8   7   6   5   4   3   2\n\n    ```", "```\n     1   F   A   C   P   4   5   E   X   L   F   1   9   2   9   4   4\n     1   6   1   3   7   4   5   5   -   3   6   1   9   2   9   4   4\n     8   7   6   5   4   3   2  10   -   9   8   7   6   5   4   3   2\n    ------------------------------------------------------------------\n     8  42   6  15  28  12  10  50   -  27  48   7  54  10  36  12   8\n\n    ```", "```\n    -1 0 +1      +1 +2 +1\n    -2 0 +2       0  0  0\n    -1 0 +1      -1 -2 -1\n\n    ```"]