["```\n    public boolean contains(Key key) {\n        return get(key) != null;\n    } \n\n    ```", "```\n    ST st = new ST<string double=\"\">();\n    ...\n    for (String key : st.keys())\n        StdOut.println(key + \" \" + st.get(key));</string> \n    ```", "```\n    private int hash(Key key) {\n        return Math.abs(key.hashCode() % m);\n    } \n\n    ```", "```\n    private class Node {\n       private Key   key;\n       private Value val;\n       private Node  left, right;\n    }\n\n    ```", "```\nprivate static void traverse(Node x) { \n    if (x == null) return; \n    traverse(x.left); \n    eStdOut.println(x.key); \n    traverse(x.right); \n} \n\n```", "```\n     A+   A    A-   B+   B    B-   C+   C    C-   D    F \n    4.33 4.00 3.67 3.33 3.00 2.67 2.33 2.00 1.67 1.00 0.00 \n\n    ```", "```\n    public static boolean isomorphic(Node x, Node y) {\n        if (x == null && y == null) return true;   // both null\n        if (x == null || y == null) return false;  // exactly one null\n        return isomorphic(x.left, y.left) && isomorphic(x.right, y.right);\n    }\n\n    ```", "```\n\n    public int mystery(Node x) {\n        if (x == null) return 0;\n        else return mystery(x.left) + mystery(x.right);\n    }  \n\n    ```", "```\n    public static int count(TwoNode x) {\n       if (x == null) return 0;\n       return 1 + count(x.left) + count(x.right);\n    }\n\n    ```", "```\n    It was the best of times,\n    it was the worst of times,\n    it was the age of wisdom,\n    it was the age of foolishness,\n\n    age 3-4\n    best 1\n    foolishness 4\n    it 1-4\n    of 1-4\n    the 1-4\n    times 1-2\n    was 1-4\n    wisdom 4\n    worst 2\n\n    ```", "```\n    Name      Dept ID       Dept     Dept ID\n    -----------------       ----------------\n    Smith       34          Sales        31\n    Jones       33          Engineering  33\n    Robinson    34          Clerical     34\n    Jasper      36          Marketing    35\n    Steinberg   33\n    Rafferty    31\n\n    ```", "```\n    Name      Dept ID   Dept\n    -------------------------------\n    Smith       34      Clerical\n    Jones       33      Engineering\n    Robinson    34      Clerical\n    Steinberg   33      Engineering\n    Rafferty    31      Sales\n\n    ```"]