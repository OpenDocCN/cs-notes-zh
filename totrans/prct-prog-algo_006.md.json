["```\ndouble[] a;                    // declare the array\na = new double[n];             // create the array\nfor (int i = 0; i < n; i++)    // elements are indexed from 0 to n-1\n   a[i] = 0.0;                 // initialize all elements to 0.0\n\n```", "```\n    double[] a = new double[n]; \n\n    ```", "```\n    String[] SUITS = {\n        \"Clubs\", \"Diamonds\", \"Hearts\", \"Spades\"\n    }; \n\n    String[] RANKS = {\n        \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\",\n        \"Jack\", \"Queen\", \"King\", \"Ace\"\n    };\n\n    ```", "```\n    int i = (int) (Math.random() * RANKS.length); \n    int j = (int) (Math.random() * SUITS.length); \n    System.out.println(RANKS[i] + \" of \" + SUITS[j]); \n\n    ```", "```\n    String[] deck = new String[RANKS.length * SUITS.length];\n    for (int i = 0; i < RANKS.length; i++) \n        for (int j = 0; j < SUITS.length; j++) \n            deck[SUITS.length*i + j] = RANKS[i] + \" of \" + SUITS[j]; \n    System.out.println(RANKS[i] + \" of \" + SUITS[j]); \n\n    ```", "```\n    String temp = deck[i]; \n    deck[i] = deck[j]; \n    deck[j] = temp; \n\n    ```", "```\n    int n = deck.length; \n    for (int i = 0; i < n; i++) { \n       int r = i + (int) (Math.random() * (n-i)); \n       String temp = deck[r];\n       deck[r] = deck[i];\n       deck[i] = temp;\n    } \n\n    ```", "```\ndouble[] harmonic = new double[n]; \nfor (int i = 1; i < n; i++) \n    harmonic[i] = harmonic[i-1] + 1.0/i; \n\n```", "```\nif      (m ==  1) System.out.println(\"Jan\");\nelse if (m ==  2) System.out.println(\"Feb\");\nelse if (m ==  3) System.out.println(\"Mar\");\nelse if (m ==  4) System.out.println(\"Apr\");\nelse if (m ==  5) System.out.println(\"May\");\nelse if (m ==  6) System.out.println(\"Jun\");\nelse if (m ==  7) System.out.println(\"Jul\");\nelse if (m ==  8) System.out.println(\"Aug\");\nelse if (m ==  9) System.out.println(\"Sep\");\nelse if (m == 10) System.out.println(\"Oct\");\nelse if (m == 11) System.out.println(\"Nov\");\nelse if (m == 12) System.out.println(\"Dec\");\n\n```", "```\nString[] MONTHS = {\n    \"\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n};\n...\nSystem.out.println(MONTHS[m]);\n\n```", "```\n    double[][] a = new double[m][n]; \n\n    ```", "```\n    double[][] a; \n    a = new double[m][n]; \n    for (int i = 0; i < m; i++) \n       for (int j = 0; j < n; j++) \n          a[i][j] = 0; \n\n    ```", "```\n    double[][] a = { \n        { 99.0, 85.0, 98.0, 0.0 }, \n        { 98.0, 57.0, 79.0, 0.0 }, \n        { 92.0, 77.0, 74.0, 0.0 }, \n        { 94.0, 62.0, 81.0, 0.0 }, \n        { 99.0, 94.0, 92.0, 0.0 }, \n        { 80.0, 76.5, 67.0, 0.0 }, \n        { 76.0, 58.5, 90.5, 0.0 }, \n        { 92.0, 66.0, 91.0, 0.0 }, \n        { 97.0, 70.5, 66.5, 0.0 }, \n        { 89.0, 89.5, 81.0, 0.0 },\n        {  0.0,  0.0,  0.0, 0.0 }\n    };\n\n    ```", "```\n    for (int i = 0; i < a.length; i++) { \n        for (int j = 0; j < a[i].length; j++) {\n            System.out.print(a[i][j] + \" \");\n        }\n        System.out.println();\n    }\n\n    ```", "```\n    double[][][] a = new double[n][n][n];\n\n    ```", "```\ndouble[][] c = new double[n][n];\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n        c[i][j] = a[i][j] + b[i][j];\n    }\n}\n\n```", "```\ndouble[][] c = new double[n][n];\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++)  {\n        for (int k = 0; k < n; k++)  {\n            c[i][j] += a[i][k]*b[k][j];\n        }\n    }\n}\n\n```", "```\n    int n = 1000;\n    int[] a = new int[n*n*n*n];\n\n    ```", "```\n    int n = a.length;\n    for (int i = 0; i < n/2; i++) {\n        String temp = a[n-i-1];\n        a[n-i-1] = a[i];\n        a[i] = temp;\n    }\n\n    ```", "```\n    int[] a;\n    for (int i = 0; i < 10; i++)\n       a[i] = i * i;\n\n    ```", "```\n    int[] a = { 1, 2, 3 };\n    int[] b = { 1, 2, 3 };\n    System.out.println(a == b);\n\n    ```", "```\n    H(1)  H(2)    H(4)\n    -------------------\n     T    T T   T T T T\n          T 0   T 0 T 0\n                T T 0 0\n                T 0 0 T \n\n    ```", "```\n    Pascal's triangle   Binomial distribution\n    --------------------------------------------\n    1                   1 \n    1 1                 1/2  1/2 \n    1 2 1               1/4  1/2  1/4 \n    1 3 3 1             1/8  3/8  3/8  1/8 \n    1 4 6 4 1           1/16 1/4  3/8  1/4  1/16\n\n    ```", "```\n    4 1 3 0 2\n    * * * Q * \n    * Q * * * \n    * * * * Q \n    * * Q * * \n    Q * * * * \n\n    ```", "```\n    * * * Q * \n    * Q * * * \n    * * * * Q \n    * * Q * * \n    Q * * * * \n\n    ```", "```\n    weight class              from    to\n    ------------------------------------\n    Fly Weight                   0   112\n    Super Fly Weight           112   115\n    Bantam Weight\",            115   118\n    Super Bantam Weight        118   122\n    Feather Weight             122   126\n    Super Feather Weight       126   130\n    Light Weight               130   135\n    Super Light Weight         135   140\n    Welter Weight              140   147\n    Super Welter Weight        147   154\n    Middle Weight              154   160\n    Super Middle Weight        160   167\n    Light Heavy Weight         167   174\n    Super Light Heavy Weight   174   183\n    Cruiser Weight             183   189\n    Super Cruiser Weight       189   198\n    Heavy Weight               198   209\n    Super Heavy Weight         209\n\n    ```", "```\n    4  9  2    11 18 25  2  9\n    3  5  7    10 12 19 21  3\n    8  1  6     4  6 13 20 22\n               23  5  7 14 16\n               17 24  1  8 15\n\n    ```", "```\n    % java Banner \"Kevin\"\n     #    #  ######  #    #     #    #    #\n     #   #   #       #    #     #    ##   #\n     ####    #####   #    #     #    # #  #\n     #  #    #       #    #     #    #  # #\n     #   #   #        #  #      #    #   ##\n     #    #  ######    ##       #    #    #\n\n    ```", "```\n    int footrule = 0;\n    for (int i = 0; i < N; i++)\n        footrule = footrule + Math.abs(p[i] - q[i]);\n\n    ```", "```\n    *****\n    *****\n    *****\n    **\n    **\n    **\n    *****\n    **\n    **\n    *****\n    **\n    **\n    *****\n    **\n    *****\n    **\n    **\n    *****\n    **\n    **\n    *****\n    *****\n    *****\n    **\n    **\n    **\n    *****\n    **\n    **\n    **\n    *****\n    *****\n\n    ```", "```\n     1  2  3  4\n     5  6  7  8\n     9 10 11 12\n    13 14 15 16\n\n    1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10\n\n    ```", "```\n     5 3 4 | 6 7 8 | 9 1 2 \n     6 7 2 | 1 9 5 | 3 4 8 \n     1 9 8 | 3 4 2 | 5 6 7\n    -------+-------+------ \n     8 5 9 | 7 6 1 | 4 2 3 \n     4 2 6 | 8 5 3 | 7 9 1 \n     7 1 3 | 9 2 4 | 8 5 6 \n    -------+-------+------ \n     9 6 1 | 5 3 7 | 2 8 4 \n     2 8 7 | 4 1 9 | 6 3 5 \n     3 4 5 | 2 8 6 | 1 7 9\n\n    ```", "```\n     448  768  704  640 1280 1408 1600 1600  (original)\n     608  672 1344 1600 -160   32  -64    0  (step 1)\n     640 1472  -32 -128 -160   32  -64    0  (step 2)\n    1056 -416  -32 -128 -160   32  -64    0  (step 3)\n\n    ```", "```\n    int[] a = new int[-17];\n\n    ```", "```\n    for (j = 0; j < N; j++)\n       b[a[j]]++;\n\n    ```"]