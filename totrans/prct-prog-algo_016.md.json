["```\n    public void Complex(double real) {\n        re = real;\n        im = 0.0;\n    }\n\n    ```", "```\n    public class Bug1 { \n       private String s;\n       public void Bug1()       { s = \"hello\"; }\n       public String toString() { return s.toUpperCase(); }\n       public static void main(String[] args) {\n          Bug1 x = new Bug1();\n          StdOut.println(x);\n       }\n    }\n\n    ```", "```\n    Student x;\n    StdOut.println(x);\n\n    ```", "```\n    Student[] students = new Student[10];\n    StdOut.println(students[5]);\n\n    ```", "```\n    int n = 17;\n    Dog[] dogs = new Dog[n];\n    for (int i = 0; i < n; i++) {\n       dogs[i].bark();\n       dogs[i].eat();\n    }\n\n    ```", "```\n    for (int i = 0; i < n; i++)\n       dogs[i] = new Dog();\n\n    ```", "```\n    Complex c = new Complex(2.0, 0.0);\n    StdOut.println(c);\n    StdOut.println(c.mul(c).mul(c).mul(c));\n    StdOut.println(c);\n\n    ```", "```\n    Student swap = new Student();\n    swap = x;\n    x = y;\n    y = swap;\n\n    ```", "```\n    Student swap = x;\n    x = y;\n    y = swap;\n\n    ```", "```\n    Color[] colors = new Color[ITERS];\n    for (int t = 0; t < ITERS; t++) {\n        // or some other primes\n        int r = 13*(256-t) % 256;\n        int g =  7*(256-t) % 256;\n        int b = 11*(256-t) % 256;\n        colors[t] = new Color(r, g, b);\n    }\n\n    ```"]