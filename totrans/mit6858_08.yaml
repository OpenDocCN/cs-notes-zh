- en: Web security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络安全
- en: '**Note:** These lecture notes were slightly modified from the ones posted on
    the 6.858 [course website](http://css.csail.mit.edu/6.858/2014/schedule.html)
    from 2014.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 这些讲座笔记是从2014年[课程网站](http://css.csail.mit.edu/6.858/2014/schedule.html)上稍作修改的。'
- en: What is the web?
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是网络？
- en: In the old days, it was a simple client/server architecture (client was your
    web browser, server was a machine on the network that could deliver static text
    and images to your browser).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在旧时代，它是一个简单的客户端/服务器架构（客户端是您的Web浏览器，服务器是网络上的一台机器，可以向您的浏览器提供静态文本和图像）。
- en: 'In the old days, the server-side was much more complex than the client-side:
    browsers didn''t support rich interactivity, but the server might interface with
    databases, other servers, etc.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在旧时代，服务器端比客户端复杂得多：浏览器不支持丰富的交互性，但服务器可能与数据库，其他服务器等进行接口。
- en: Because the server was so much more complicated, "web security" focused on the
    server-side. Up to this point, this class has largely focused on the server-side
    as well (e.g., buffer overflows on web servers, privilege separation in the OKWS
    server).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为服务器非常复杂，“网络安全”侧重于服务器端。到目前为止，这门课程主要也侧重于服务器端（例如，Web服务器上的缓冲区溢出，OKWS服务器中的权限分离）。
- en: 'The **web has changed**: now the **browser is very complicated**.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在**网络已经改变**：现在**浏览器非常复杂**。
- en: '**JavaScript**: Allows a page to execute client-side code.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JavaScript**：允许页面执行客户端代码。'
- en: '**DOM model**: Provides a JavaScript interface to the page''s HTML, allowing
    the page to add/remove tags, change their styling, etc.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DOM模型**：提供页面的HTML的JavaScript接口，允许页面添加/删除标签，更改它们的样式等。'
- en: '**XMLHttpRequests (AJAX)**: Asynchronous HTTP requests.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**XMLHttpRequests（AJAX）**：异步HTTP请求。'
- en: '**Web sockets**: Full-duplex client-server communication over TCP.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web套接字**：全双工客户端-服务器通信通过TCP。'
- en: '**Web workers**: Multi-threading support.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web工作者**：多线程支持。'
- en: '**Multimedia support**: `<video>`, web cams, screen-sharing.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多媒体支持**：`<video>`，网络摄像头，屏幕共享。'
- en: '**Geolocation**: Browser can determine your location by examining GPS units.
    Firefox can also locate you by passing your WiFi information to the Google Location
    Service.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地理位置信息**：浏览器可以通过检查GPS单元来确定您的位置。Firefox还可以通过将您的WiFi信息传递给Google位置服务来定位您。'
- en: '**`<canvas>` and WebGL**: Bitmap manipulation and interactive 2D/3D graphics.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`<canvas>`和WebGL**：位图处理和交互式2D/3D图形。'
- en: '**Native Client (NaCl)**: Allows browsers to run native code!'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原生客户端（NaCl）**：允许浏览器运行本机代码！'
- en: The web is now a complex platform for distributed computation! But what does
    this mean for security?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在网络是一个用于分布式计算的复杂平台！但这对安全性意味着什么？
- en: The threat surface is huge!
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁面非常广！
- en: It's over 9000!!
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它超过9000了！
- en: A single web application now spans multiple programming languages, OSes, hardware
    platforms. I might be running Firefox on Windows interacting with a Linux server
    running Apache and interfacing with memcached and MySQL).
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个Web应用程序现在跨越多种编程语言，操作系统，硬件平台。我可能在Windows上运行Firefox，与运行Apache并与memcached和MySQL进行交互的Linux服务器进行交互）。
- en: 'All of this composition makes it difficult to verify end-to-end correctness,
    or even understand what the system is doing. Ex: Parsing contexts and content
    sanitization.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有这些组合使得验证端到端的正确性变得困难，甚至理解系统在做什么也变得困难。例如：解析上下文和内容消毒。
- en: '[PRE0]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The web specs are incredibly long, very complex, occasionally contradictory,
    and constantly evolving.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络规范非常长，非常复杂，偶尔矛盾，并且不断发展。
- en: So, browser vendors do something that roughly resembles the specs and then laugh
    about it with their friends.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，浏览器供应商会做一些与规范大致相似的事情，然后和朋友们一起开玩笑。
- en: If you want to understand the horror, go to [QuirksMode](http://quirksmode.org)
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想了解恐怖，可以去[QuirksMode](http://quirksmode.org)
- en: Client-side web applications
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端Web应用程序
- en: In this lecture, we're going to **focus on the client-side of a web application**.
    In particular, we're going to focus on how to isolate content from different providers
    that has to reside within the same browser.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本讲座中，我们将**专注于Web应用程序的客户端**。特别是，我们将专注于如何隔离来自不同提供者的内容，这些内容必须存在于同一个浏览器中。
- en: 'Big difference between a web application and a traditional desktop application:
    the bits in a desktop application typically come from a single vendor (e.g., Microsoft
    or Apple or TurboTax), but a single web application contains content from a bunch
    of different principals!'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web应用程序和传统桌面应用程序之间有很大的区别：桌面应用程序中的位通常来自单个供应商（例如，Microsoft或Apple或TurboTax），但单个Web应用程序包含来自许多不同主体的内容！
- en: '[PRE1]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Question:** Which pieces of JavaScript code can access which pieces of state?
    For example . . .'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问题：** 哪些 JavaScript 代码可以访问哪些状态？例如...'
- en: Can the analytics code from google.com access state in the jQuery code from
    cdn.foo.com? [Seems maybe bad since different principals wrote the code, but they
    are included in the same frame ...]
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 google.com 的分析代码能否访问来自 cdn.foo.com 的 jQuery 代码中的状态？[似乎可能不好，因为不同的负责人编写了代码，但它们包含在同一个框架中...]
- en: Yes, they can! They will get the same origin.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是的，它们可以！它们将获得相同的起源。
- en: Can the jQuery code from cdn.foo.com access state in the inline JavaScript code
    defined by foo.com? [They're *almost* from the same place ...]
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 cdn.foo.com 的 jQuery 代码能否访问由 foo.com 定义的内联 JavaScript 代码中的状态？[它们几乎来自同一个地方...]
- en: Yes, they can. They get the same origin.
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是的，它们可以。它们具有相同的起源。
- en: Can the analytics code or jQuery access the HTML text inputs? [We've got to
    make that content interactive somehow.]
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析代码或 jQuery 能够访问 HTML 文本输入吗？[我们必须以某种方式使内容交互。]
- en: Yes, JS code included in frame can interact with frame's DOM.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是的，包含在框架中的 JS 代码可以与框架的 DOM 交互。
- en: Can JavaScript in the Facebook frame touch any state in the foo.com frame? Does
    it matter that the Facebook frame is https://, but the foo.com frame is regular
    http://?
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Facebook 框架中的 JavaScript 能否触及 foo.com 框架中的任何状态？Facebook 框架是 https://，但 foo.com
    框架是常规的 http://，这有关系吗？
- en: Can only talk to it using `postMessage`
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只能使用 `postMessage` 与其通信
- en: Cannot issue AJAX requests to foo.com
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不能向 foo.com 发出 AJAX 请求
- en: Cannot do anything to the frame
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不能对框架执行任何操作
- en: To answer these questions, browsers use a security model called the **same-origin
    policy**.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要回答这些问题，浏览器使用一种称为**同源策略**的安全模型。
- en: Same-origin policy
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同源策略
- en: '*Vague goal:* Two different websites should not be able to tamper with each
    other''s content.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模糊的目标：* 两个不同的网站不应该能够篡改彼此的内容。'
- en: Easy to state, but tricky to implement.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于陈述，但难以实现。
- en: 'Obviously bad: If I have two different web sites open, the first site should
    not be able to overwrite the visual display of the second site.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显然不好：如果我打开两个不同的网站，第一个网站不应该能够覆盖第二个网站的视觉显示。
- en: 'Obviously good: Developers should be able to create mash-up sites that combine
    content from mutually cooperative web sites.'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显然好：开发人员应该能够创建结合来自相互合作的网站的内容的混搭网站。
- en: 'Ex: A site that combines Google Map data with real estate data.'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：一个将 Google 地图数据与房地产数据结合的网站。
- en: 'Ex: Advertistements.'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：广告。
- en: 'Ex: Social media widgets (e.g., the Facebook "like" button).'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：社交媒体小部件（例如 Facebook 的“赞”按钮）。
- en: 'Hard to say: If a page from web server X downloads a JavaScript library from
    a different server Y, what capabilities should that script have?'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难以说：如果来自 Web 服务器 X 的页面从不同服务器 Y 下载 JavaScript 库，那么该脚本应该具有什么功能？
- en: '**Basic strategy of same-origin policy:** The browser assigns an origin to
    every resource in a page, including JavaScript libraries. JavaScript code can
    only access resources that belong to its origin.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**同源策略的基本策略：** 浏览器为页面中的每个资源分配一个起源，包括 JavaScript 库。JavaScript 代码只能访问属于其起源的资源。'
- en: '**Definition of an origin:** `scheme + hostname + port`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个起源的定义：** `scheme + hostname + port`'
- en: 'For example:'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：
- en: http://foo.com/index.html (http, foo.com, 80 [implicit])
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: http://foo.com/index.html（http，foo.com，80 [隐式]）
- en: https://foo.com/index.html (https, foo.com, 443 [implicit])
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: https://foo.com/index.html（https，foo.com，443 [隐式]）
- en: http://bar.com:8181/index.html (http, bar.com, 8181)
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: http://bar.com:8181/index.html（http，bar.com，8181）
- en: Schemes can be `http, https, ftp, file`, etc.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方案可以是 `http, https, ftp, file` 等。
- en: 'Four **main ideas**:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四个**主要思想**：
- en: Each origin is associated with client-side resources (e.g., cookies, DOM storage,
    a JavaScript namespace, a DOM tree, windows, a visual display area, network addresses).
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个起源都与客户端资源相关联（例如 cookies、DOM 存储、JavaScript 命名空间、DOM 树、窗口、视觉显示区域、网络地址）。
- en: '*An origin is the moral equivalent of a UID in the Unix world.*'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*一个起源在 Unix 世界中是 UID 的道德等价物。*'
- en: Each frame gets the origin of its URL.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个框架都获得其 URL 的起源。
- en: '*A frame is the moral equivalent of a process in Unix.*'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*一个框架在 Unix 中是一个进程的道德等价物。*'
- en: Scripts included by a frame execute with the authority of that HTML file's origin.
    This is true for both inline scripts *and* ones that are pulled from external
    domains!
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由框架包含的脚本以该 HTML 文件起源的权限执行。这对内联脚本和从外部域拉取的脚本都是正确的！
- en: 'Unix analogy: Running a binary that''s stored in somebody else''s home directory.'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unix 类比：运行存储在别人家目录中的二进制文件。
- en: Passive content (e.g., images and CSS) can't execute code, so this content is
    given zero authority.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 被动内容（例如图片和 CSS）不能执行代码，因此此内容被赋予零权限。
- en: 'Returning to our example:'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回到我们的例子：
- en: The Google analytics script and the jQuery script can access all the resources
    belonging to foo.com (e.g., they can read and write cookies, attach event handlers
    to buttons, manipulate the DOM tree, access JavaScript variables, etc.).
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google分析脚本和jQuery脚本可以访问属于foo.com的所有资源（例如，它们可以读取和写入cookie，附加事件处理程序到按钮，操作DOM树，访问JavaScript变量等）。
- en: JavaScript code in the Facebook frame has no access to resources in the foo.com
    frame, because the two frames have different origins. The two frames can only
    talk via postMessage(), a JavaScript API that allows domains to exchange immutable
    strings.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Facebook框架中的JavaScript代码无法访问foo.com框架中的资源，因为这两个框架具有不同的来源。这两个框架只能通过postMessage()进行通信，这是一个允许域交换不可变字符串的JavaScript
    API。
- en: If the two frames *were* in the same origin, they could use window.parent and
    window.frames[] to directly interact with each other's JavaScript state!
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果两个框架*在相同的来源中*，它们可以使用window.parent和window.frames[]直接与彼此的JavaScript状态交互！
- en: JavaScript code in the Facebook frame cannot issue an XMLHttpRequest to foo.com's
    server [the network is a resource with an origin!] ...
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Facebook框架中的JavaScript代码不能向foo.com的服务器发出XMLHttpRequest [网络是一个具有来源的资源！] ...
- en: '... however, the Facebook frame *can* import scripts, CSS, or images from foo.com
    (although that content can only update the Facebook frame, since the content inherits
    the authority of the Facebook origin, not foo.com origin).'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '... 然而，Facebook框架*可以*从foo.com导入脚本、CSS或图像（尽管该内容只能更新Facebook框架，因为内容继承了Facebook来源的权限，而不是foo.com来源）。'
- en: The browser checks the type of ad.gif, determines that ad.gif is a image, and
    concludes that the image should receive no authority at all.
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器检查ad.gif的类型，确定ad.gif是一个图像，并得出结论该图像根本不应具有任何权限。
- en: What happens if the browser mistakenly identifies the MIME type of an object?
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果浏览器错误地识别对象的MIME类型会发生什么？
- en: Old versions of IE used to do MIME sniffing.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧版本的IE曾经进行MIME嗅探。
- en: 'Goal: Detect when a web server has given an incorrect file extension to an
    object (e.g., foo.jpg should actually be foo.html).'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标：检测当web服务器给对象分配了错误的文件扩展名时（例如，foo.jpg实际上应该是foo.html）。
- en: 'Mechanism: IE looks at the first 256 bytes of the file and looks for magic
    values which indicate a file type. If there''s a disagreement between the magic
    values and the file extension, IE trusts the file extension.'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机制：IE查看文件的前256个字节，并查找指示文件类型的魔术值。如果魔术值与文件扩展名不一致，IE会信任文件扩展名。
- en: 'Problem: Suppose that a page includes some passive content (e.g., an image)
    from an attacker-controlled domain. The victim page thinks that it''s safe to
    import passive content, but the attacker can intentionally put HTML+JavaScript
    in the image and execute code in the victim page!'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：假设一个页面包含来自受攻击者控制的域的一些被动内容（例如，一个图像）。受害页面认为安全导入被动内容，但攻击者可以故意在图像中放入HTML+JavaScript并在受害页面中执行代码！
- en: 'Moral: Browsers are complex---adding a well-intentioned feature may cause subtle
    and unexpected security bugs.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结论：浏览器是复杂的---添加一个出于善意的功能可能会导致微妙且意想不到的安全漏洞。
- en: Let's take a deeper look at how the browser secures various resources.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更深入地了解浏览器如何保护各种资源。
- en: Frame/window objects
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 框架/窗口对象
- en: 'Note: A frame object is a DOM node of type HTMLIFrameElement, whereas the window
    object is the alias for the global JavaScript namespace.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意：框架对象是HTMLIFrameElement类型的DOM节点，而window对象是全局JavaScript命名空间的别名。
- en: Both objects have references to each other.
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个对象相互引用。
- en: Get the origin of their frame's URLs
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取它们框架URL的来源
- en: '**-OR-**'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**-或-**'
- en: Get the origin of the **adjusted `document.domain`**
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获取**调整后的`document.domain`**的来源
- en: A frame's `document.domain` is originally derived from the URL in the normal
    way.
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个框架的`document.domain`最初是从URL中正常派生的。
- en: 'A frame can set `document.domain` to be a suffix of the full domain. Ex:'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个框架可以将`document.domain`设置为完整域的后缀。例如：
- en: x.y.z.com `// Original value`
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: x.y.z.com `// 原始值`
- en: y.z.com `// Allowable new value`
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: y.z.com `// 允许的新值`
- en: z.com `// Allowable new value`
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: z.com `// 允许的新值`
- en: a.y.z.com **`// Disallowed`**
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: a.y.z.com **`// 不允许`**
- en: .com **`// Disallowed`**
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: .com **`// 不允许`**
- en: Browsers distinguish between a `document.domain` that has been written, and
    one that has not, even if both have the same value!
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器区分已写入的`document.domain`和未写入的`document.domain`，即使两者的值相同！
- en: '**Two frames can access each other if:**'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**两个框架可以相互访问，如果：**'
- en: They have both set `document.domain` to the same value, or
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他们都将`document.domain`设置为相同的值，或者
- en: Neither has changed `document.domain` (and those values are equal in both frames)
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两者都没有更改`document.domain`（并且这些值在两个框架中是相等的）
- en: These rules help protect a site from being attacked by a buggy/malicious subdomain,
    e.g., `x.y.z.com` trying to attack `y.z.com` by shortening its `document.domain`.
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些规则有助于保护网站免受由有缺陷/恶意子域名攻击的风险，例如，`x.y.z.com`试图通过缩短其`document.domain`来攻击`y.z.com`。
- en: DOM nodes
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DOM节点
- en: Get the origin of their surrounding frame
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取其周围框架的来源
- en: Cookies
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cookies
- en: 'A cookie **has a domain AND a path**. Ex: `*.mit.edu/6.858/`'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个cookie**有一个域和一个路径**。例如：`*.mit.edu/6.858/`
- en: Domain can only be a (possibly full) suffix of a page's current domain.
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域名只能是页面当前域名的（可能是完整的）后缀。
- en: Path can be "/" to indicate that all paths in the domain should have access
    to the cookie.
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路径可以是“/”，表示该域中的所有路径都可以访问该cookie。
- en: Whoever sets cookie gets to specify the domain and path.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置cookie的人可以指定域和路径。
- en: Can be set by the server using a header, or by JavaScript code that writes to
    `document.cookie.`
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过服务器使用标头设置，也可以通过写入`document.cookie`的JavaScript代码设置。
- en: There's also a **"secure" flag** to indicate HTTPS-only cookies.
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**"secure"标志**也可以表示仅限HTTPS的cookie。'
- en: Browser keeps cookies on client-side disk (modulo cookie expiration, ephemeral
    cookies, etc.).
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器将cookie保存在客户端磁盘上（除了cookie过期、临时cookie等）。
- en: When generating an HTTP request, the browser sends all matching cookies in the
    request.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在生成HTTP请求时，浏览器会在请求中发送所有匹配的cookie。
- en: Secure cookies only sent for HTTPS requests.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅为HTTPS请求发送安全cookie。
- en: '**JavaScript code can access any cookie that match the code''s origin, but
    note that the cookie''s path and the origin''s port are ignored!**'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JavaScript代码可以访问与代码来源匹配的任何cookie，但请注意，cookie的路径和来源的端口将被忽略！**'
- en: The protocol matters, because HTTP JavaScript cannot access HTTPS cookies (although
    HTTPS JavaScript can access both kinds of cookies).
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议很重要，因为HTTP JavaScript无法访问HTTPS cookie（尽管HTTPS JavaScript可以访问两种类型的cookie）。
- en: '*Caveat:* There are also **http-only cookies**, that JS code cannot access
    directly. Those cookies just get sent by the browser with matching HTTP requests.'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*注意：*还有**http-only cookies**，JS代码无法直接访问。这些cookie只会随着匹配的HTTP请求由浏览器发送。'
- en: '**Q:** Why is it important to protect cookies from arbitrary overwriting?'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问：**为什么重要保护cookie免受任意覆写？'
- en: '**A:** If an attacker controls a cookie, the attacker can force the user to
    use an account that''s controlled by an attacker!'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**A：**如果攻击者控制了一个cookie，攻击者可以强制用户使用受攻击者控制的帐户！'
- en: 'Ex: By controlling a Gmail cookie, an attacker can redirect a user to an attacker
    controlled account and read any emails that are sent from that account.'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：通过控制Gmail的cookie，攻击者可以重定向用户到一个受攻击者控制的帐户，并读取从该帐户发送的任何电子邮件。
- en: '**Q:** Is it valid for foo.co.uk to set a cookie''s domain to co.uk?'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**问：**foo.co.uk设置cookie的域为co.uk有效吗？'
- en: '**A:** This is valid according to the rules that we''ve discussed so far, but
    in practice, we should disallow such a thing, since ".co.uk" is semantically a
    single, "atomic" domain like ".com".'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**A：**根据我们迄今讨论的规则，这是有效的，但实际上，我们应该禁止这样做，因为“.co.uk”在语义上类似于“.com”这样的单一“原子”域。'
- en: Mozilla maintains a public list which allows browsers to determine the appropriate
    suffix rules for top-level domains. See [PublicSuffix](https://publicsuffix.org).
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mozilla维护一个公共列表，允许浏览器确定顶级域的适当后缀规则。请参阅[PublicSuffix](https://publicsuffix.org)。
- en: 'HTTP responses: Many exceptions and half-exceptions to same-origin policy'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTTP响应：对同源策略有许多例外和半例外
- en: 'XMLHttpRequests: By default, JavaScript can only send XMLHttpRequests to its
    origin server ... unless the remote server has enabled **Cross-origin Resource
    Sharing (CORS).** The scheme defines some new HTTP response headers:'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XMLHttpRequests：默认情况下，JavaScript只能向其来源服务器发送XMLHttpRequests...除非远程服务器启用了**跨域资源共享（CORS）**。该方案定义了一些新的HTTP响应头：
- en: Access-Control-Allow-Origin specifies which origins can see HTTP response.
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Access-Control-Allow-Origin指定哪些来源可以查看HTTP响应。
- en: Access-Control-Allow-Credentials specifies if browser should accept cookies
    in HTTP request from the foreign origin.
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Access-Control-Allow-Credentials指定浏览器是否应接受来自外部来源的HTTP请求中的cookie。
- en: '**Images:** A frame can load an image from any origin'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图片：**一个框架可以从任何来源加载图像'
- en: '... but it can''t look at the image pixels ...'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '... 但它不能查看图像像素...'
- en: '... but it can determine the image''s size.'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '... 但它可以确定图像的大小。'
- en: '**CSS:** Similar story to images--a frame can''t directly read the content
    of external CSS files, but can infer some of its properties.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CSS：**与图像类似--一个框架不能直接读取外部CSS文件的内容，但可以推断出一些属性。'
- en: '**JavaScript:** A frame can load JavaScript from any origin, but it can''t
    directly examine the source code in a `<script>` tag/XMLHttpRequest reponse body,
    but all JavaScript functions have a public `toString()` method which reveals source
    code and a page''s home server can always fetch the source code directly and then
    pass it to the page!'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JavaScript：** 一个框架可以从任何来源加载JavaScript，但它不能直接检查`<script>`标签/XMLHttpRequest响应主体中的源代码，但所有JavaScript函数都有一个公共的`toString()`方法，可以显示源代码，页面的主服务器始终可以直接获取源代码然后传递给页面！'
- en: To prevent reverse-engineering, many sites minify and obfuscate their JavaScript.
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了防止逆向工程，许多网站都会对其JavaScript进行缩小和混淆。
- en: 'Plugins: A frame can run a plugin from any origin.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件：一个框架可以运行来自任何来源的插件。
- en: 'Example:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: '[PRE2]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Cross-Site Request Forgery attacks
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跨站点请求伪造攻击
- en: Remember that, when the browser generates an HTTP request, it automatically
    includes the relevant cookies.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，当浏览器生成HTTP请求时，它会自动包含相关的cookie。
- en: What happens if an attacker gets the user to click on a URL like this? * `http://bank.com/xfer?amount=500&to=attacker`
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者让用户点击这样的URL会发生什么？* `http://bank.com/xfer?amount=500&to=attacker`
- en: This attack is called a cross-site request forgery (CSRF).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击被称为跨站点请求伪造（CSRF）。
- en: 'Solution: Include some random data in URLs that is difficult for the attacker
    to guess. Ex:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：在URL中包含一些对攻击者难以猜测的随机数据。例如：
- en: '[PRE3]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Each time a user requests the page, the server generates HTML with new random
    tokens. When the user submits a request, the server validates the token before
    actually processing the request.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每当用户请求页面时，服务器都会生成带有新随机令牌的HTML。当用户提交请求时，服务器会在实际处理请求之前验证令牌。
- en: 'Drawback: If each URL to the same object is unique, it''s difficult to cache
    that object!'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺点：如果指向同一对象的每个URL都是唯一的，那么缓存该对象就会变得困难！
- en: DNS rebinding attacks
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DNS重绑定攻击
- en: Network addresses almost have an origin.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 网络地址几乎都有一个来源。
- en: A frame can send HTTP *and* HTTPS requests to a host+port that match its origin.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个框架可以向与其来源匹配的主机+端口发送HTTP *和* HTTPS请求。
- en: Note that the security of the same-origin policy depends on the **integrity
    of the DNS infrastructure!**
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意，同源策略的安全性取决于**DNS基础设施的完整性！**
- en: DNS rebinding attack
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS重绑定攻击
- en: '**Goal:** Attacker wants to run attacker-controlled JavaScript code with the
    authority of an origin that he does not control (victim.com).'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标：** 攻击者希望以他不控制的来源（victim.com）的权限运行受攻击者控制的JavaScript代码。'
- en: 'Approach:'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法：
- en: Attacker registers a domain name (e.g., attacker.com) and creates a DNS server
    to respond to the relevant queries.
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者注册一个域名（例如，attacker.com）并创建一个DNS服务器来响应相关查询。
- en: User visits the attacker.com website, e.g., by clicking on an advertisement.
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户访问attacker.com网站，例如，通过点击广告。
- en: The attacker website wants to download a single object, but first, the browser
    must issue a DNS request for attacker.com. The attacker's DNS server responds
    with a DNS record to the attacker's IP address. However, *the record has a short
    time-to-live.*
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者网站希望下载一个对象，但首先，浏览器必须为attacker.com发出DNS请求。攻击者的DNS服务器会响应一个指向攻击者IP地址的DNS记录。然而，*记录的生存时间很短*。
- en: The attacker rebinds attacker.com to the IP address of victim.com.
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者将attacker.com重新绑定到victim.com的IP地址。
- en: A bit later, the attacker website creates an XMLHttpRequest that connects to
    attacker.com. **That request will actually be sent to the IP address of victim.com!**
    The browser won't complain because it will revalidate the DNS record and see the
    new binding.
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一会儿，攻击者网站创建一个连接到attacker.com的XMLHttpRequest。**该请求实际上将被发送到victim.com的IP地址！**
    浏览器不会抱怨，因为它会重新验证DNS记录并看到新的绑定。
- en: Okay, but the request will not have the right cookies for victim.com because
    the browser still thinks they are interacting with attacker.com, right?
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好吧，但是请求将不会携带正确的cookie给victim.com，因为浏览器仍然认为它们正在与attacker.com交互，对吧？
- en: And won't the `Host:` header in the HTTP request indicate attacker.com, so the
    victim.com webserver can reject the request.
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那么HTTP请求中的`Host:`头部不会指示attacker.com吗，所以victim.com的web服务器可以拒绝请求。
- en: Attacker page can now exfiltrate data, e.g., using CORS XMLHttpRequest to the
    attacker domain.
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者页面现在可以窃取数据，例如，使用CORS XMLHttpRequest发送到攻击者域。
- en: 'Solutions:'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Modify DNS resolvers so that external hostnames can never resolve to internal
    IP addreses.
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改DNS解析器，使外部主机名永远不能解析为内部IP地址。
- en: Browsers can pin DNS bindings, regardless of their TTL settings. However, this
    may break web applications that use dynamic DNS (e.g., for load-balancing).
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器可以固定DNS绑定，而不考虑其TTL设置。但是，这可能会破坏使用动态DNS（例如，用于负载平衡）的Web应用程序。
- en: What about the pixels on a screen?
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上的像素怎么办？
- en: They don't have an origin! A frame can draw anywhere within its bounding box.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们没有来源！框架可以在其边界框内的任何地方绘制。
- en: 'Problem: A parent frame can overlay content atop the pixels of its child frames.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：父框架可以在其子框架的像素上方叠加内容。
- en: 'Ex: At attacker creates a page which has an enticing button like "Click here
    for a free iPad!" Atop that button, the page creates a child frame that contains
    the Facebook "Like" button. The attacker places that button atop the "free iPad"
    button, but makes it transparent! So, if the user clicks on the "free iPad" button,
    he''ll actually "Like" the attackers page on Facebook.'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：攻击者创建了一个页面，上面有一个诱人的按钮，如“点击这里领取免费iPad！”在该按钮上方，页面创建了一个包含Facebook“赞”按钮的子框架。攻击者将该按钮放在“免费iPad”按钮上方，但使其透明！因此，如果用户点击“免费iPad”按钮，实际上会在Facebook上“赞”攻击者的页面。
- en: Solutions
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案
- en: '**Frame-busting code:** Include JavaScript that prevents your page from being
    included as a frame:'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**防框架代码：**包含阻止您的页面被包含为框架的JavaScript：'
- en: '`if(top != self)`'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`if(top != self)`'
- en: Have your web server send the `X-Frame-Options` HTTP response header. This will
    instruct the browser not to put your content in a child frame.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让你的网络服务器发送`X-Frame-Options` HTTP响应头。这将指示浏览器不将您的内容放在子框架中。
- en: 'What about frame URLs that don''t have an origin? * Example: + file://foo.txt
    + about:blank + javascript:document.cookie="x" * Sometimes the frame is only accessible
    to other frames with that protocol (e.g., file://). [This can be irritating if
    you''re debugging a site and you want to mix file:// and http:// content]. * Sometimes
    the frame is just inaccessible to all other origins (e.g., "about:"). * Sometimes
    the origin is inherited from whoever created the URL (e.g., "javascript:"). This
    prevents attacks in which a attacker.com creates a frame belonging to victim.com,
    and then navigates the victim frame to a javascript: URL--we don''t want the JavaScript
    to execute in the context of victim.com!'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '那些没有来源的框架URL怎么办？*例如：+ file://foo.txt + about:blank + javascript:document.cookie="x"
    *有时框架只能被具有该协议的其他框架访问（例如，file://）。[如果您正在调试一个站点并且想要混合使用file://和http://内容，这可能会很烦人]。*有时框架对所有其他来源都是不可访问的（例如，“about:”）。*有时来源是从创建URL的人那里继承的（例如，“javascript:”）。这可以防止攻击者.com创建属于victim.com的框架，然后将victim框架导航到javascript:
    URL--我们不希望JavaScript在victim.com的上下文中执行！'
- en: DNS names can be used as an attack vector
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DNS名称可以被用作攻击向量
- en: 'IDN: internationalized domain names (non-latin letters).'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IDN：国际化域名（非拉丁字母）。
- en: Supporting more languages is good, but now, it can be difficult for users to
    distinguish two domain names from each other.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持更多语言是好事，但现在，用户很难区分两个域名。
- en: 'Ex: The Cyrillic "C" character looks like the Latin "C" character! So, an attacker
    can buy a domain like "cats.com" (with a Cyrillic "C") and trick users who thought
    that they were going to "cats.com" (Latin "C").'
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：西里尔字母“C”字符看起来像拉丁字母“C”字符！因此，攻击者可以购买一个类似于“cats.com”的域名（带有西里尔字母“C”），并欺骗那些认为他们要访问“cats.com”（拉丁字母“C”）的用户。
- en: Good example of how new features can undermine security assumptions.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很好的例子说明了新功能如何破坏了安全假设。
- en: Browser vendors thought registrars will prohibit ambiguous names.
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器供应商认为注册商将禁止模糊名称。
- en: Registrars throught browser vendors will change browser to do something.
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册商认为浏览器供应商将更改浏览器以执行某些操作。
- en: Plugins
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 插件
- en: Often have subtly-different security policies.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 通常具有略有不同的安全策略。
- en: 'Java: Sort of uses the same-origin policy, but Java code can set HTTP headers
    (bad! see "Content-Length" discussion), and in some cases, different hostnames
    with the same IP address are considered to share the same origin.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java：有点使用同源策略，但Java代码可以设置HTTP头（不好！参见“Content-Length”讨论），在某些情况下，具有相同IP地址的不同主机名被认为共享相同的来源。
- en: 'Flash: Developers place a file called `crossdomain.xml` on their web servers.
    That file specifies which origins can talk to the server via Flash.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flash：开发人员在其网络服务器上放置一个名为`crossdomain.xml`的文件。该文件指定哪些来源可以通过Flash与服务器通信。
- en: 'HTML5 introduces a new screen-sharing API: Once the user gives permission,
    a site can capture the entire visible screen area and transmit it back to the
    site''s origin.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5引入了一个新的屏幕共享API：一旦用户授予权限，站点就可以捕获整个可见屏幕区域并将其传输回站点的来源。
- en: So, if an attacker page can convince the user to grant screen-sharing permission,
    the attacker page can open an iframe to a sensitive site (e.g., banking, Facebook,
    email), and capture the screen contents!
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，如果攻击者页面能说服用户授予屏幕共享权限，攻击者页面可以打开一个到敏感站点（例如银行、Facebook、电子邮件）的iframe，并捕获屏幕内容！
- en: The iframe will send cookies, so the user will automatically be logged in, allowing
    the attacker to see "real" information, not boring login page stuff.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iframe将发送cookie，因此用户将自动登录，使攻击者能够查看“真实”信息，而不是无聊的登录页面内容。
- en: Attacker can make the iframe flash only briefly to prevent the user from noticing
    the mischief.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击者可以使iframe仅短暂闪烁，以防止用户注意到恶作剧。
- en: 'Possible defenses:'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能的防御措施：
- en: Allow users to only screen-share part of the DOM tree? It seems like this will
    be tedious and error-prone.
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许用户只共享DOM树的一部分？这似乎会很繁琐且容易出错。
- en: Only allow an origin to screen-capture content from its own origin? Seems like
    a more reasonable approach, although it prevents mash-ups.
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只允许一个来源从自己的来源中截取内容？这似乎是一个更合理的方法，尽管它阻止了混搭。
- en: 'More discussion: http://www.ieee-security.org/TC/SP2014/papers/AllYourScreensareBelongtoUs*c*AttacksExploitingtheHTML5ScreenSharingAPI.pdf'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多讨论：[攻击利用HTML5屏幕共享API的论文](http://www.ieee-security.org/TC/SP2014/papers/AllYourScreensareBelongtoUs*c*AttacksExploitingtheHTML5ScreenSharingAPI.pdf)
- en: Conclusions
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Since "The Tangled Web," there have been various modifications and additions
    to the aggregate web stack.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 自从《混乱的网络》以来，对整体网络堆栈进行了各种修改和添加。
- en: In general, things have gotten more complicated, which is typically bad for
    security.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，事情变得更加复杂，这通常对安全性不利。
- en: 'For reference, here are some of the new features:'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是一些新功能的参考：
- en: http://en.wikipedia.org/wiki/Content*Security*Policy
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[内容安全策略](http://en.wikipedia.org/wiki/Content*Security*Policy)'
- en: http://en.wikipedia.org/wiki/Strict*Transport*Security
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[严格传输安全](http://en.wikipedia.org/wiki/Strict*Transport*Security)'
- en: http://en.wikipedia.org/wiki/Cross-origin*resource*sharing
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[跨域资源共享](http://en.wikipedia.org/wiki/Cross-origin*resource*sharing)'
- en: HTML5 iframe sandbox attribute [http://msdn.microsoft.com/en-us/hh563496.aspx]
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML5 iframe沙盒属性 [http://msdn.microsoft.com/en-us/hh563496.aspx]
- en: The browser security model is obviously a mess. It's very complex and contains
    a lot of subtleties and inconsistencies.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器安全模型显然一团糟。它非常复杂，包含许多微妙和不一致之处。
- en: '**Q:** Why not rewrite the security model from scratch?'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Q:** 为什么不从头开始重写安全模型？'
- en: '**A1:** Backwards compatibility! There''s a huge amount of preexisting web
    infrastructure that people rely on.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**A1:** 向后兼容性！有大量现有的网络基础设施供人们依赖。'
- en: '**A2:** How do we know that a new security model would be expressive enough?
    Users typically do not accept a reduction of features in exchange for an increase
    in security.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**A2:** 我们如何知道新的安全模型是否足够表达？用户通常不会接受为了增加安全性而减少功能。'
- en: '**A3:** Any security model may be intrinsically doomed---perhaps all popular
    systems are destined to accumulate a ton of features as time progresses. [Ex:
    Word processing programs, smartphones.]'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**A3:** 任何安全模型都可能注定失败---也许所有流行的系统都注定会随着时间的推移积累大量功能。[例如：文字处理程序，智能手机。]'
- en: What might a better design look like?
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的设计可能是什么样子？
- en: Strict isolation Embassies---everything is a network message, even locally [https://www.usenix.org/system/files/conference/nsdi13/nsdi13-final85.pdf]
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 严格隔离大使馆---即使在本地，一切都是网络消息 [https://www.usenix.org/system/files/conference/nsdi13/nsdi13-final85.pdf]
- en: Don't make policy extraction and enforcement dependent on complex parsing rules
    (remember our sanitization example)
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要让策略提取和执行依赖于复杂的解析规则（记住我们的消毒示例）
- en: Only add features in small, clearly-defined quanta with minimal room for implementation
    error or interpretation mistakes---remove ambiguity and the need for guessing.
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只以小的、明确定义的量增加功能，最小化实现错误或解释错误的空间---消除歧义和猜测的需要。
