["```\nprivate static boolean less(Comparable v, Comparable w) {\n   return (v.compareTo(w) < 0);\n}\n\nprivate static void exch(Comparable[] a, int i, int j) {\n   Comparable swap = a[i];\n   a[i] = a[j];\n   a[j] = swap;\n} \n\n```", "```\nInsertion.java:73: warning: [unchecked] unchecked call to compareTo(T)\n                   as a member of the raw type java.lang.Comparable\n        return (v.compareTo(w) < 0);\n\n```", "```\n    E A S Y Q U E S T I O N\n\n    ```", "```\n    E A S Y Q U E S T I O N\n\n    ```", "```\n    E A S Y S H E L L S O R T Q U E S T I O N\n\n    ```", "```\n    if (a > b) swap a and b\n    if (a > c) swap a and c\n    if (b > c) swap b and c\n\n    ```", "```\n    if (A > B) { t = A; A = B; B = t; }\n    if (B > C) { t = B; B = C; C = t; }\n    if (A > B) { t = A; A = B; B = t; }\n    if (C > D) { t = C; C = D; D = t; }\n    if (B > C) { t = B; B = C; C = t; }\n    if (A > B) { t = A; A = B; B = t; }\n    if (D > E) { t = D; D = E; E = t; }\n    if (C > D) { t = C; C = D; D = t; }\n    if (B > C) { t = B; B = C; C = t; }\n    if (A > B) { t = A; A = B; B = t; }\n\n    ```", "```\n    for (int i = 1; i < N; i++) {\n       if (less(a[i], a[i-1])) {\n          exch(i, i-1);\n          i = 0;\n       }\n    }\n\n    ```", "```\n    public static void sort(Comparable[] a) {\n       for (int i = 1; i < a.length; i++) {\n          if (less(a[i], a[i-1])) {\n             exch(i, i-1);\n             sort(a);\n          }\n       }\n    }\n\n    ```"]