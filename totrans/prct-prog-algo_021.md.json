["```\npublic static void sort(String[] a) {\n    int n = a.length;\n    for (int i = 1; i < n; i++) {\n        for (int j = i; j > 0; j--) {\n            if (a[j-1].compareTo(a[j]) > 0)\n                exch(a, j, j-1);\n            else break;\n        }\n    }\n}\n\n```", "```\n    to be or not to be to \n\n    ```", "```\n    be be not or to to to \n\n    ```", "```\n    98 2 3 1 0 0 0 3 98 98 2 2 2 0 0 0 2\n\n    ```", "```\n    0 0 0 0 0 0 1 2 2 2 2 2 3 3 98 98 98\n\n    ```", "```\n    // precondition array a in ascending order\n    public static int binarySearch(long[] a, long key) {\n       int bot = -1;\n       int top = a.length;\n       while (top - bot > 1) {\n          int mid = bot + (top - bot) / 2;\n          if (key > a[mid]) bot = mid;\n          else              top = mid;\n       }\n       if (a[top] == key) return  top;\n       else               return -top - 1;\n    } \n\n    ```", "```\n    public static int binarySearch(long[] a, long key) {\n       int bot = 0;\n       int top = a.length - 1;\n       while (bot <= top) {\n          int mid = bot + (top - bot) / 2;\n          if      (key < a[mid]) top = mid - 1;\n          else if (key > a[mid]) bot = mid + 1;\n          else return mid;\n       }\n       return -1;\n    } \n\n    ```"]