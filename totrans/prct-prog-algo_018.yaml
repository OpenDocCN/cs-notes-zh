- en: '3.4   Case Study:   N-body Simulation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3.4   案例研究:   N体模拟'
- en: 原文：[https://introcs.cs.princeton.edu/java/34nbody](https://introcs.cs.princeton.edu/java/34nbody)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://introcs.cs.princeton.edu/java/34nbody](https://introcs.cs.princeton.edu/java/34nbody)
- en: In this section, we write an object-oriented program that dynamically simulates
    the motion of *n* bodies under the influence of mutual gravitational attraction.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们编写一个面向对象的程序，动态模拟 *n* 个身体在相互引力影响下的运动。
- en: Bouncing balls.
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹跳球。
- en: The data type [Ball.java](Ball.java.html) represents a ball with a given position
    \((r_x, r_y)\) that moves with a fixed velocity \((v_x, v_y)\) in the box with
    coordinates between −1 and +1. When it collides with the boundary, it bounces
    according to the law of elastic collision.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型 [Ball.java](Ball.java.html) 表示具有给定位置 \((r_x, r_y)\) 的球，它以固定速度 \((v_x, v_y)\)
    在坐标为 −1 到 +1 的盒子中移动。当它与边界碰撞时，根据弹性碰撞定律反弹。
- en: '![adding vectors to move a ball](../Images/0a74711369e2da400dd552c6b1a0997f.png)'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![添加矢量以移动球](../Images/0a74711369e2da400dd552c6b1a0997f.png)'
- en: The client [BouncingBalls.java](BouncingBalls.java.html) takes a command-line
    argument *n* and creates *n* random bouncing balls.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端 [BouncingBalls.java](BouncingBalls.java.html) 接受一个命令行参数 *n* 并创建 *n* 个随机弹跳球。
- en: N-body simulation.
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: N体模拟。
- en: 'The bouncing ball simulation is based on *Newton''s first law of motion*: a
    body in motion remains in motion at the same velocity unless acted on by an outside
    force. Embellishing that example to incorporate gravity leads us to a basic problem
    that has fascinated scientists for ages. Given a system of *n* bodies, mutually
    affected by gravitational forces, the problem is to describe their motion.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 弹跳球模拟基于 *牛顿第一定律*：运动中的物体保持相同速度的运动，除非受到外力的作用。将该示例装饰以包含重力导致我们进入一个迷住科学家多年的基本问题。给定一个由相互影响的
    *n* 个身体组成的系统，受到引力作用，问题是描述它们的运动。
- en: '*Body data type.* The data type [Body.java](Body.java.html) represents a body
    with a given position \((r_x, r_y)\), velocity \((v_x, v_y)\), and mass \(m\).
    It applies *Newton''s third law of motion* (which explains the gravitational force
    between two bodies) to determine the net force acting on a body:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Body 数据类型.* 数据类型 [Body.java](Body.java.html) 表示具有给定位置 \((r_x, r_y)\), 速度 \((v_x,
    v_y)\), 和质量 \(m\) 的身体。它应用 *牛顿第三定律*（解释了两个身体之间的引力）来确定作用在身体上的净力：'
- en: $$ \boldsymbol{F} = G \frac{m_1 m_2}{r^2} $$
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: $$ \boldsymbol{F} = G \frac{m_1 m_2}{r^2} $$
- en: and *Newton's second law of motion* (which explains how outside forces directly
    affect acceleration and velocity).
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 和 *牛顿第二定律*（解释外力如何直接影响加速度和速度）。
- en: $$ \boldsymbol{F} = m \boldsymbol{a} $$
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: $$ \boldsymbol{F} = m \boldsymbol{a} $$
- en: It uses the [Vector.java](Vector.java.html) data type to represent displacement,
    velocity, and force as vector quantities.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它使用 [Vector.java](Vector.java.html) 数据类型来表示位移、速度和力作为矢量量。
- en: '![Body data type API](../Images/4a3db88c0c4f95460fd93a35352e2586.png)'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![Body 数据类型 API](../Images/4a3db88c0c4f95460fd93a35352e2586.png)'
- en: '*Universe data type.* [Universe.java](Universe.java.html) takes a command-line
    argument `dt`, reads in a universe from standard input, and simulates the universe
    using time quantum `dt`. Here is an example of the data file format:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Universe 数据类型.* [Universe.java](Universe.java.html) 接受一个命令行参数 `dt`，从标准输入读取一个宇宙，并使用时间量子
    `dt` 模拟宇宙。以下是数据文件格式的示例：'
- en: '![data file format for n-body simulation](../Images/ae222ac7b21fbaf4ef22ec2e15af3439.png)'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![n体模拟的数据文件格式](../Images/ae222ac7b21fbaf4ef22ec2e15af3439.png)'
- en: The following static images for [2body.txt](2body.txt), [3body.txt](3body.txt),
    and [4body.txt](4body.txt) are made by modifying [Universe.java](Universe.java.html)
    and [Body.java](Body.java.html) to draw the bodies in white, and then black on
    a gray background.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下静态图像 [2body.txt](2body.txt), [3body.txt](3body.txt), 和 [4body.txt](4body.txt)
    是通过修改 [Universe.java](Universe.java.html) 和 [Body.java](Body.java.html) 来绘制白色身体，然后在灰色背景上绘制黑色身体而制作的。
- en: '![Simulation of 2-, 3-, and 4-body systems](../Images/239e0e02a08d33b7c892b0e9e1e07e2a.png)'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![2-, 3-, 和 4-体系的模拟](../Images/239e0e02a08d33b7c892b0e9e1e07e2a.png)'
- en: Exercises
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习
- en: Develop an object-oriented version of [BouncingBall.java](../15inout/BouncingBall.java.html)
    from Section 1.5. Include a constructor for that starts each ball moving in a
    random direction at a random velocity (within reasonable limits) and a test client
    that takes an integer *n* from the command line and simulates the motion of *n*
    bouncing balls.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从第 1.5 节开发一个面向对象的版本的 [BouncingBall.java](../15inout/BouncingBall.java.html)。包括一个构造函数，该构造函数以随机方向和随机速度（在合理范围内）开始每个球的运动，并且一个测试客户端，从命令行接受一个整数
    *n* 并模拟 *n* 个弹跳球的运动。
- en: '*Solution*: [Ball.java](Ball.java.html) and [BouncingBalls.java](BouncingBalls.java.html).'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*解决方案*: [Ball.java](Ball.java.html) 和 [BouncingBalls.java](BouncingBalls.java.html).'
- en: What happens in a universe where Newton's second law does not apply? This situation
    would correspond to `forceTo()` in `Body` always returning the zero vector.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个不适用牛顿第二定律的宇宙中会发生什么？这种情况对应于 `Body` 中的 `forceTo()` 总是返回零矢量。
- en: '*Solution*: The bodies will move in straight lines, according to their initial
    velocities.'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*解决方案*: 身体将沿着直线运动，根据它们的初始速度。'
- en: Creative Exercises
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创意练习
- en: '**N-body simulation trace.** Write a client [UniverseTrace.java](UniverseTrace.java.html)
    that produces traces of the n-body simulation system like the static images in
    the book.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**N体模拟跟踪.** 编写一个客户端 [UniverseTrace.java](UniverseTrace.java.html) 产生类似书中静态图像的
    n体模拟系统的跟踪。'
- en: Web Exercises
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 网页练习
- en: '**Colored bouncing balls.** Modify [Ball.java](Ball.java.html) and [BouncingBalls.java](BouncingBalls.java.html)
    to associate a color with each ball. Name your programs [ColoredBall.java](ColoredBall.java.html)
    and [BouncingColoredBalls.java](BouncingColoredBalls.java.html).'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**彩色弹跳球.** 修改 [Ball.java](Ball.java.html) 和 [BouncingBalls.java](BouncingBalls.java.html)
    以将每个球与颜色关联起来。将你的程序命名为 [ColoredBall.java](ColoredBall.java.html) 和 [BouncingColoredBalls.java](BouncingColoredBalls.java.html).'
- en: '**Friction and drag.** Modify [Ball.java](Ball.java.html) to incorporate friction
    and drag. Name your data type [DeluxeBall.java](DeluxeBall.java.html).'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**摩擦和阻力.** 修改 [Ball.java](Ball.java.html) 以包含摩擦和阻力。将你的数据类型命名为 [DeluxeBall.java](DeluxeBall.java.html).'
- en: '**Generative music based on a gravity simulator.** Generate music based on
    an n-body simulation where bodies makes notes when they collide. Simran Gleason''s
    [website](http://www.art.net/~simran/GenerativeMusic/kepler.html) describes the
    process and includes example videos.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基于重力模拟器的生成音乐。** 根据 n 体模拟生成音乐，其中当物体碰撞时发出音符。Simran Gleason的[网站](http://www.art.net/~simran/GenerativeMusic/kepler.html)描述了这一过程，并包括示例视频。'
