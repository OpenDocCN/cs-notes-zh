- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '**Note:** These lecture notes were slightly modified from the ones posted on
    the 6.858 [course website](http://css.csail.mit.edu/6.858/2014/schedule.html)
    from 2014.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**这些讲座笔记略有修改，来源于2014年6.858课程网站上发布的内容[课程网站](http://css.csail.mit.edu/6.858/2014/schedule.html)。'
- en: What is security?
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是安全性？
- en: Achieving some goal in the presence of an adversary.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在对手存在的情况下实现某个目标。
- en: Many systems are connected to the internet, which has adversaries.
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多系统连接到互联网，而互联网上存在对手。
- en: Thus, design of many systems might need to address security.
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，许多系统的设计可能需要考虑安全性。
- en: i.e., will the system work when there's an adversary?
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即，在有对手的情况下系统是否能正常工作？
- en: 'High-level plan for thinking about security:'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高层次的安全性思考计划：
- en: '**Policy:** the goal you want to achieve.'
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**政策：**您想要实现的目标。'
- en: e.g. only Alice should read file `F`.
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，只有艾丽丝应该读取文件`F`。
- en: '*Common goals:* confidentiality, integrity, availability.'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*常见目标：*保密性，完整性，可用性。'
- en: '**Threat model:** assumptions about what the attacker could do.'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**威胁模型：**对攻击者可能做什么的假设。'
- en: e.g. can guess passwords, cannot physically grab file server.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如可以猜测密码，但无法物理抓取文件服务器。
- en: Better to err on the side of assuming attacker can do something.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最好假设攻击者可以做某事。
- en: '**Mechanism:** knobs that your system provides to help uphold policy.'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机制：**系统提供的旋钮，帮助维护政策。'
- en: e.g. user accounts, passwords, file permissions, encryption.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，用户帐户，密码，文件权限，加密。
- en: '**Resulting goal:** no way for adversary within threat model to violate policy.'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最终目标：**在威胁模型内部，对手无法违反政策。'
- en: Note that goal has nothing to say about mechanism.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，目标与机制无关。
- en: Why is security hard? **It's a negative goal.**
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么安全性很难？**这是一个负面目标。**
- en: 'Contrast: easy to check whether a positive goal is upheld, e.g., Alice can
    actually read file `F`. Harder to check that *there''s no possible way Alice can
    read file `F`*.'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对比：检查是否实现了积极目标很容易，例如，艾丽丝实际上可以读取文件`F`。更难的是检查*没有可能的方式让艾丽丝读取文件`F`*。
- en: How would you even begin to enumerate all the possible ways Alice could go about
    reading the file? Too many layers at which Alice could exploit bugs to gain access
    to file `F`.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你甚至如何开始列举艾丽丝可能读取文件的所有可能方式？艾丽丝可以利用多少层次的漏洞来获取文件`F`的访问权限。
- en: Need to guarantee policy, assuming the threat model.
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要保证政策，假设威胁模型。
- en: Difficult to think of all possible ways that attacker might break in.
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很难想象攻击者可能如何入侵的所有可能方式。
- en: Realistic threat models are open-ended (almost negative models).
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现实的威胁模型是开放式的（几乎是负面模型）。
- en: Weakest link matters.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最弱的环节很重要。
- en: 'Iterative process: design, update threat model as necessary, etc.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迭代过程：设计，根据需要更新威胁模型等。
- en: What's the point if we can't achieve perfect security?
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果我们无法实现完美的安全性，那有什么意义呢？
- en: In this class, we'll push the boundary of each system to see when it breaks.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这门课程中，我们将推动每个系统的边界，看看它何时会崩溃。
- en: Each system will likely have some breaking point leading to compromise.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个系统可能都会有一些导致妥协的破坏点。
- en: 'Doesn''t necessarily mean the system is not useful: depends on context.'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这并不一定意味着系统没有用：这取决于上下文。
- en: Important to understand what a system can do, and what a system cannot.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重要的是了解系统能做什么，以及系统不能做什么。
- en: In reality, must manage security risk vs benefit.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上，必须管理安全风险与收益。
- en: More secure systems means less risk (or consequence) of some compromises.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更安全的系统意味着某些妥协的风险（或后果）更小。
- en: Insecure system may require manual auditing to check for attacks, etc.
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不安全的系统可能需要手动审计以检查攻击等。
- en: Higher cost of attack means more adversaries will be deterred.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击成本越高，将有更多的对手被阻止。
- en: Better security often makes new functionality practical and safe.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的安全性通常使新功能变得实用和安全。
- en: Suppose you want to run some application on your system.
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设你想在系统上运行某些应用程序。
- en: Large companies sometimes prohibit users from installing software that hasn't
    been approved on their desktops, partly due to security.
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大公司有时会禁止用户在其台式机上安装未经批准的软件，部分原因是出于安全考虑。
- en: Javascript in the browser is isolated, making it ok (for the most part) to run
    new code/applications without manual inspection/approval. (or virtual machines,
    or Native Client, or better OS isolation mechanisms)
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器中的Javascript是隔离的，这使得运行新代码/应用程序而无需手动检查/批准变得可以接受（或虚拟机，或本地客户端，或更好的操作系统隔离机制）。
- en: Similarly, VPNs make it practical to mitigate risk of allowing employees to
    connect to a corporate network from anywhere on the Internet.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同样，VPN使得减轻允许员工从互联网的任何地方连接到公司网络的风险变得实际可行。
- en: 'What goes wrong #1: Problems with the policy'
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 出现问题的原因之一：政策问题
- en: '*Example:* [Sarah Palin''s email account](http://en.wikipedia.org/wiki/Sarah_Palin_email_hack
    "Sarah Palin''s email hack").'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* [萨拉·佩林的电子邮件账户](http://en.wikipedia.org/wiki/Sarah_Palin_email_hack "萨拉·佩林的电子邮件被盗")。'
- en: Yahoo email accounts have a username, password, and security questions.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雅虎电子邮件账户有用户名、密码和安全问题。
- en: User can log in by supplying username and password.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以通过提供用户名和密码登录。
- en: If user forgets password, can reset by answering security questions.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户忘记密码，可以通过回答安全问题来重置。
- en: Security questions can sometimes be easier to guess than password.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全问题有时比密码更容易猜到。
- en: Some adversary guessed Sarah Palin's high school, birthday, etc.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些对手猜到了萨拉·佩林的高中、生日等信息。
- en: 'Policy amounts to: can log in with either password or security questions.'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 政策总结为：可以使用密码或安全问题登录。
- en: (no way to enforce *"Only if user forgets password, then ..."*)
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: （无法强制执行“只有用户忘记密码，然后...”）
- en: '*Example:* [Mat Honan''s accounts at Amazon, Apple, Google, etc.](http://www.wired.com/gadgetlab/2012/08/apple-amazon-mat-honan-hacking/all/)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* [马特·霍南在亚马逊、苹果、谷歌等处的账户](http://www.wired.com/gadgetlab/2012/08/apple-amazon-mat-honan-hacking/all/)'
- en: 'Gmail password reset: send a verification link to a backup email address.'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gmail密码重置：向备用电子邮件地址发送验证链接。
- en: Google helpfully prints part of the backup email address.
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌贴心地打印了备用电子邮件地址的一部分。
- en: Mat Honan's backup address was his Apple `@me.com` account.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 马特·霍南的备用地址是他的苹果`@me.com`账户。
- en: 'Apple password reset: need billing address, last 4 digits of credit card.'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果密码重置：需要账单地址，信用卡的最后4位数字。
- en: Address can be easy to get, but how to get 4 digits of user's credit card number?
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地址可能很容易获取，但如何获取用户信用卡号的4位数字？
- en: 'Amazon: can add a credit card to an account, no password required.'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊：可以向账户添加信用卡，无需密码。
- en: 'Amazon password reset: provide any one of user''s credit card numbers.'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊密码重置：提供用户的任意一张信用卡号。
- en: LOL.
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈哈。
- en: 'Amazon: will not print credit card numbers.. But will print last 4 digits!'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊：不会打印信用卡号... 但会打印最后4位数字！
- en: '*Example:* [Twitter''s `@N` account hijacking.](https://medium.com/p/24eb09e026dd)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* [Twitter的`@N`账户劫持。](https://medium.com/p/24eb09e026dd)'
- en: Can be hard for legitimate user to prove they own an account!
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于合法用户来说，有时很难证明他们拥有一个账户！
- en: How to solve?
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何解决？
- en: Think hard about implications of policy statements.
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仔细思考政策声明的含义。
- en: Some policy checking tools can help, but need a way to specify what's bad.
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些政策检查工具可以帮助，但需要一种指定不良内容的方法。
- en: 'Difficult in distributed systems: don''t know what everyone is doing.'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在分布式系统中很困难：不知道每个人在做什么。
- en: 'What goes wrong #2: Problems with threat model / assumptions'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '出了什么问题 #2：威胁模型/假设问题'
- en: '*Example:* human factors not accounted for.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* 未考虑人为因素。'
- en: Phishing attacks.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 钓鱼攻击。
- en: User gets email asking to renew email account, transfer money, or ...
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户收到一封要求续订电子邮件账户、转账或...的电子邮件。
- en: Tech support gets call from convincing-sounding user to reset password.
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术支持接到一个声音很像用户的电话要求重置密码。
- en: '["Rubberhose cryptanalysis"](https://en.wikipedia.org/wiki/Rubber-hose_cryptanalysis)'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '["橡皮管解密"](https://en.wikipedia.org/wiki/Rubber-hose_cryptanalysis)'
- en: '*Example:* computational assumptions change over time.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* 计算假设随时间变化。'
- en: MIT's Kerberos system used 56-bit DES keys, since mid-1980's.
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 麻省理工学院的Kerberos系统使用56位DES密钥，自20世纪80年代中期以来。
- en: At the time, seemed fine to assume adversary can't check all 2^56 keys.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当时，似乎可以假设对手无法检查所有2^56个密钥。
- en: 'No longer reasonable: [now costs about $100](https://www.cloudcracker.com/dictionaries.html).'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不再合理：[现在大约需要100美元](https://www.cloudcracker.com/dictionaries.html)。
- en: Several years ago, 6.858 final project showed can get any key in a day.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几年前，6.858期末项目表明可以在一天内获取任何密钥。
- en: '*Example:* all SSL certificate CAs are fully trusted.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* 所有SSL证书CA都是完全受信任的。'
- en: To connect to an SSL-enabled web site, web browser verifies certificate.
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要连接到启用SSL的网站，Web浏览器会验证证书。
- en: Certificate is a combination of server's host name and cryptographic key,
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书是服务器主机名和加密密钥的组合，
- en: signed by some trusted certificate authority (CA).
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由某些受信任的证书颁发机构（CA）签名。
- en: Long list (hundreds) of certificate authorities trusted by most browsers.
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器信任的证书颁发机构（CA）长列表（数百个）。
- en: If any CA is compromised, adversary can intercept SSL connections with
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果任何CA受到损害，对手可以拦截SSL连接。
- en: a "fake" certificate for any server host name.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为任何服务器主机名创建一个“伪造”证书。
- en: In 2011, two CAs were compromised, issued fake certs for many domains (Google,
    Yahoo, Tor, ...), apparently used in Iran (?).
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2011年，两个CA受到损害，为许多域（谷歌、雅虎、Tor等）签发了伪造证书，显然在伊朗使用。
- en: '[http://en.wikipedia.org/wiki/DigiNotar](http://en.wikipedia.org/wiki/DigiNotar)'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/DigiNotar](http://en.wikipedia.org/wiki/DigiNotar)'
- en: '[http://en.wikipedia.org/wiki/Comodo_Group](http://en.wikipedia.org/wiki/Comodo_Group)'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/Comodo_Group](http://en.wikipedia.org/wiki/Comodo_Group)'
- en: In 2012, a CA inadvertently issued a root certificate valid for any domain.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2012年，一家CA无意中签发了一个适用于任何域的根证书。
- en: '[http://www.h-online.com/security/news/item/Trustwave-issued-a-man-in-the-middle-certificate-1429982.html](http://www.h-online.com/security/news/item/Trustwave-issued-a-man-in-the-middle-certificate-1429982.html)'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.h-online.com/security/news/item/Trustwave-issued-a-man-in-the-middle-certificate-1429982.html](http://www.h-online.com/security/news/item/Trustwave-issued-a-man-in-the-middle-certificate-1429982.html)'
- en: '*Example:* assuming your hardware is trustworthy.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：*假设你的硬件是可信的。'
- en: If NSA is your adversary, turns out to not be a good assumption.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果NSA是你的对手，结果可能并不是一个好的假设。
- en: '[https://www.schneier.com/blog/archives/2013/12/more_about_the.html](https://www.schneier.com/blog/archives/2013/12/more_about_the.html)'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.schneier.com/blog/archives/2013/12/more_about_the.html](https://www.schneier.com/blog/archives/2013/12/more_about_the.html)'
- en: '*Example:* assuming good randomness for cryptography.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：*假设密码学中有良好的随机性。'
- en: Need high-quality randomness to generate the keys that can't be guessed.
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要高质量的随机性来生成无法被猜测的密钥。
- en: 'Problem: embedded devices, virtual machines may not have much randomness.'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：嵌入式设备、虚拟机可能没有太多的随机性。
- en: As a result, many keys are similar or susceptible to guessing attacks.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果，许多密钥相似或容易被猜测攻击。
- en: '[Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices](https://factorable.net/weakkeys12.extended.pdf)'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[挖掘你的P和Q：检测网络设备中普遍存在的弱密钥](https://factorable.net/weakkeys12.extended.pdf)'
- en: '*Example:* subverting military OS security.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：*颠覆军事操作系统安全。'
- en: In the 80's, military encouraged research into secure OS'es.
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在80年代，军方鼓励研究安全操作系统。
- en: 'One unexpected way in which OS''es were compromised:'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统被破坏的一个意想不到的方式：
- en: adversary gained access to development systems, modified OS code.
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手获取了开发系统的访问权限，修改了操作系统代码。
- en: '*Example:* subverting firewalls.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：*颠覆防火墙。'
- en: Adversaries can connect to an unsecured wireless behind firewall
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以连接到防火墙后面的不安全无线网络。
- en: Adversaries can trick user behind firewall to disable firewall
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以欺骗防火墙后面的用户来禁用防火墙。
- en: Might suffice just to click on link `http://firewall/?action=disable`
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能只需点击链接`http://firewall/?action=disable`就足够了。
- en: Or maybe buy an ad on CNN.com pointing to that URL (effectively)?
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者也许在CNN.com购买广告，指向那个URL（有效）？
- en: '*Example:* machines disconnected from the Internet are secure?'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：*断开与互联网连接的机器安全吗？'
- en: Stuxnet worm spread via specially-constructed files on USB drives.
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stuxnet蠕虫通过USB驱动器上的特制文件传播。
- en: How to solve?
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何解决？
- en: More explicit threat models, to understand possible weaknesses.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更明确的威胁模型，以了解可能存在的弱点。
- en: Simpler, more general threat models.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更简单、更通用的威胁模型。
- en: Better designs may eliminate / lessen reliance on certain assumptions.
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的设计可能会消除/减少对某些假设的依赖。
- en: E.g., alternative trust models that don't have fully-trusted CAs.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，不依赖完全信任CA的替代信任模型。
- en: E.g., authentication mechanisms that aren't susceptible to phishing.
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，不容易受到钓鱼攻击的身份验证机制。
- en: 'What goes wrong #3: problems with the mechanism -- bugs'
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '问题出在哪里 #3：机制问题--漏洞'
- en: Bugs in the security mechanism (e.g., OS kernel) lead to vulnerabilities.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全机制中的漏洞（例如，操作系统内核）会导致漏洞。
- en: If application is enforcing security, app-level bugs lead to vulnerabilities.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用程序正在执行安全性，应用程序级别的错误会导致漏洞。
- en: '*Example:* [Apple''s iCloud password-guessing rate limits.](https://github.com/hackappcom/ibrute)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：*[苹果的iCloud密码猜测速率限制。](https://github.com/hackappcom/ibrute)'
- en: People often pick weak passwords; can often guess w/ few attempts (1K-1M).
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人们经常选择弱密码；通常可以在几次尝试（1K-1M）后猜中。
- en: Most services, including Apple's iCloud, rate-limit login attempts.
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数服务，包括苹果的iCloud，会对登录尝试进行速率限制。
- en: Apple's iCloud service has many APIs.
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果的iCloud服务有许多API。
- en: One API (the *"Find my iPhone"* service) forgot to implement rate-limiting.
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个API（“查找我的iPhone”服务）忘记实现速率限制。
- en: Adversary could make many attempts at guessing passwords.
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以多次尝试猜测密码。
- en: 'Probably as fast as they can send packets: `>> M/day.`'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能和他们发送数据包的速度一样快：`>> M/day.`
- en: '*Example:* [Missing access control checks in Citigroup''s credit card web site.](http://www.nytimes.com/2011/06/14/technology/14security.html)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：*[花旗集团信用卡网站缺失访问控制检查。](http://www.nytimes.com/2011/06/14/technology/14security.html)'
- en: Citigroup allowed credit card users to access their accounts online.
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 花旗银行允许信用卡用户在线访问他们的账户。
- en: Login page asks for username and password.
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录页面要求输入用户名和密码。
- en: If username and password OK, redirected to account info page.
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户名和密码正确，将重定向到账户信息页面。
- en: The URL of the account info page included some numbers.
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账户信息页面的URL包含一些数字。
- en: Turns out the numbers were (related to) the user's account number.
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果这些数字与用户的账号相关。
- en: Worse yet, server didn't check that you were logged into that account.
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更糟糕的是，服务器没有检查您是否已登录到该帐户。
- en: Adversary tried different numbers, got different people's account info.
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手尝试不同的数字，获取不同人的账户信息。
- en: 'Possibly a wrong threat model: doesn''t match the real world?'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能是错误的威胁模型：与现实世界不匹配？
- en: System is secure if adversary browses the web site through browser.
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果对手通过浏览器浏览网站，系统是安全的。
- en: System not secure if adversary synthesizes new URLs on their own.
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果对手自己合成新的URL，系统就不安全了。
- en: Hard to say if developers had wrong threat model, or buggy mechanism.
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很难说开发人员是否有错误的威胁模型，或者有错误的机制。
- en: '*Example:* [Android''s Java `SecureRandom` weakness leads to Bitcoin theft.](https://bitcoin.org/en/alert/2013-08-11-android)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* [安卓的Java `SecureRandom`弱点导致比特币被盗。](https://bitcoin.org/en/alert/2013-08-11-android)'
- en: Bitcoins can be spent by anyone that knows the owner's private key.
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有所有者私钥的任何人都可以花费比特币。
- en: Many Bitcoin wallet apps on Android used Java's `SecureRandom` API.
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多安卓上的比特币钱包应用使用了Java的`SecureRandom` API。
- en: Turns out the system was sometimes forgetting to seed the PRNG!
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果系统有时忘记了给PRNG种子！
- en: As a result, some Bitcoin keys turned out to be easy to guess.
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果，一些比特币密钥很容易被猜到。
- en: Adversaries searched for guessable keys, spent any corresponding bitcoins.
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手搜索可猜测的密钥，花费任何相应的比特币。
- en: '*Example:* bugs in sandbox ([NaCl](https://developer.chrome.com/native-client),
    Javascript, Java runtime).'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* 沙箱中的漏洞（[NaCl](https://developer.chrome.com/native-client)，Javascript，Java运行时）。'
- en: Allows adversary to escape isolation, do operations they weren't supposed to.
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许对手逃离隔离，执行他们本不应执行的操作。
- en: '*Example:* Moxie''s SSL certificate name checking bug'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* Moxie的SSL证书名称检查漏洞'
- en: Null byte vs. length-encoding.
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空字节与长度编码。
- en: '*Example:* buffer overflows (see below).'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*例子：* 缓冲区溢出（见下文）。'
- en: 'Case study: buffer overflows'
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 案例研究：缓冲区溢出
- en: Consider a web server.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑一个网络服务器。
- en: Often times, the web server's code is responsible for security.
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常情况下，网络服务器的代码负责安全性。
- en: E.g., checking which URLs can be accessed, checking SSL client certs, ..
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，检查可以访问哪些URL，检查SSL客户端证书，..
- en: Thus, bugs in the server's code can lead to security compromises.
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，服务器代码中的漏洞可能导致安全妥协。
- en: What's the threat model, policy?
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁模型是什么，策略是什么？
- en: Assume that adversary can connect to web server, supply any inputs.
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设对手可以连接到网络服务器，提供任何输入。
- en: 'Policy is a bit fuzzy: only perform operations intended by programmer?'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略有点模糊：只执行程序员意图的操作？
- en: E.g., don't want adversary to steal data, bypass checks, install backdoors.
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，不希望对手窃取数据，绕过检查，安装后门。
- en: 'Consider the following simplified example code from, say, a web server:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑来自某个网络服务器的简化示例代码：
- en: '`webserver.c:`'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`webserver.c:`'
- en: '[PRE0]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: What does the compiler generate in terms of memory layout?
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译器在内存布局方面生成了什么？
- en: 'x86 stack:'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: x86栈：
- en: Stack grows down.
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 栈向下增长。
- en: '`%esp` points to the last (bottom-most) valid thing on the stack.'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%esp`指向栈上最后（最底部）有效的内容。'
- en: '`%ebp` points to the caller''s %esp value.'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%ebp`指向调用者的`%esp`值。'
- en: '`read_req() stack layout:`'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_req() stack layout:`'
- en: '[PRE1]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Caller''s code (say, `main()`):'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用者的代码（比如，`main()`）：
- en: call `read_req()`
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用`read_req()`
- en: '`read_req()''s assembly code:`'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_req()`的汇编代码：'
- en: '[PRE2]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How does the adversary take advantage of this code?
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手如何利用这段代码？
- en: Supply long input, overwrite data on stack past buffer.
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供长输入，覆盖超出缓冲区的栈上数据。
- en: 'Interesting bit of data: return address, gets used by `ret`.'
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有趣的数据：返回地址，被`ret`使用。
- en: Can set return address to the buffer itself, include some code in there.
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以将返回地址设置为缓冲区本身，在其中包含一些代码。
- en: How does the adversary know the address of the buffer?
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手如何知道缓冲区的地址？
- en: What if one machine has twice as much memory?
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一台机器的内存是另一台的两倍会发生什么？
- en: Luckily for adversary, virtual memory makes things more deterministic.
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 幸运的是对手，虚拟内存使事情更加确定。
- en: For a given OS and program, addresses will often be the same.
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于给定的操作系统和程序，地址通常是相同的。
- en: What happens if stack grows up, instead of down?
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果栈向上增长，而不是向下，会发生什么？
- en: Look at the stack frame for `gets()`.
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看`gets()`的栈帧。
- en: What can the adversary do once they are executing code?
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦对手执行代码，他们可以做什么？
- en: Use any privileges of the process.
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用进程的任何权限。
- en: Often leverage overflow to gain easier access into system.
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经常利用溢出来更容易地进入系统。
- en: Originally on Unix, run shell `/bin/sh` (hence the term "shell code").
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最初在Unix上，运行shell `/bin/sh`（因此称为“shell代码”）。
- en: If the process is running as `root` or `Administrator`, can do anything.
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果进程以 `root` 或 `Administrator` 运行，可以做任何事情。
- en: Even if not, can still send spam, read files (web server, database), ..
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使不是，仍然可以发送垃圾邮件，读取文件（Web 服务器，数据库），..
- en: Can attack other machines behind a firewall.
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以攻击防火墙后面的其他机器。
- en: Why would programmers write such code?
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么程序员会写出这样的代码？
- en: Legacy code, wasn't exposed to the internet.
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧代码，未暴露在互联网上。
- en: Programmers were not thinking about security.
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序员没有考虑安全性。
- en: Many standard functions used to be unsafe (`strcpy`, `gets`, `sprintf`).
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多标准函数曾经是不安全的（`strcpy`，`gets`，`sprintf`）。
- en: Even safe versions have gotchas (`strncpy` does not null-terminate).
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使是安全版本也有陷阱（`strncpy` 不会在末尾加上空字符）。
- en: More generally, any memory errors can translate into a vulnerability.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更一般地说，任何内存错误都可能转化为漏洞。
- en: Using memory after it has been deallocated (*use-after-free*).
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在释放后继续使用内存（*释放后使用*）。
- en: If writing, overwrite new data structure, e.g. function pointer.
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果写入，覆盖新的数据结构，例如函数指针。
- en: If reading, might call a corrupted function pointer.
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果读取，可能会调用一个已损坏的函数指针。
- en: Freeing the same memory twice (*double-free*).
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两次释放相同的内存（*双重释放*）。
- en: Might cause `malloc()` to later return the same memory twice.
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会导致 `malloc()` 之后再次返回相同的内存。
- en: Decrementing the stack pointer past the end of stack, into some other memory.
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将栈指针递减到栈的末尾之外，进入其他内存。
- en: '[Exploiting large memory management vulnerabilities in Xorg server running
    on Linux](http://www.invisiblethingslab.com/resources/misc-2010/xorg-large-memory-attacks.pdf)'
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[利用运行在Linux上的Xorg服务器中的大内存管理漏洞](http://www.invisiblethingslab.com/resources/misc-2010/xorg-large-memory-attacks.pdf)'
- en: A one-byte stray write can lead to compromise.
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个字节的错误写入可能导致受损。
- en: '[glibc __gconv_translit_find() exploit](http://www.openwall.com/lists/oss-security/2014/08/26/2)'
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[glibc __gconv_translit_find() 漏洞](http://www.openwall.com/lists/oss-security/2014/08/26/2)'
- en: Might not even need to overwrite a return address or function pointer.
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 甚至可能不需要覆盖返回地址或函数指针。
- en: Can suffice to read sensitive data like an encryption key.
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以足以读取敏感数据，如加密密钥。
- en: Can suffice to change some bits (e.g. `int isLoggedIn`, `int isRoot`).
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过改变一些位来满足需求（例如`int isLoggedIn`，`int isRoot`）。
- en: How to avoid mechanism problems?
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何避免机制问题？
- en: Reduce the amount of security-critical code.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少安全关键代码的数量。
- en: Don't rely on the entire application to enforce security.
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要依赖整个应用程序来执行安全性。
- en: Will do in Lab 2.
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将在实验2中进行。
- en: Avoid bugs in security-critical code.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免安全关键代码中的错误。
- en: E.g., don't use `gets()`, use `fgets()` which can limit buffer length.
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，不要使用 `gets()`，而是使用 `fgets()` 可以限制缓冲区长度。
- en: Use common, well-tested security mechanisms (*"Economy of mechanism"*).
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用常见、经过充分测试的安全机制（*"机制的经济性"*）。
- en: Audit these common security mechanisms (lots of incentive to do so).
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审计这些常见的安全机制（有很多动力这样做）。
- en: Avoid developing new, one-off mechanisms that may have bugs.
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免开发可能存在错误的新的一次性机制。
- en: Good mechanism supports many uses, policies (more incentive to audit).
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 良好的机制支持多种用途、策略（更有动力进行审计）。
- en: 'Examples of common mechanisms:'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见机制的示例：
- en: OS-level access control (but, could often be better)
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统级别的访问控制（但是，通常可以更好）。
- en: network firewalls (but, could often be better)
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络防火墙（但是，通常可以更好）。
- en: cryptography, cryptographic protocols.
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密，加密协议。
