["```\n    00: 0005   5\n    01: 0008   8\n\n    10: 8A00   R[A] \n    ```", "```\n    00: 0005   5\n    01: 0008   8\n\n    10: 8A00   R[A] \n    ```", "```\n    10: 8AFF    read R[A] from stdin\n    11: 8BFF    read R[B] from stdin\n    12: 1CAB    R[C] \n    ```", "```\n    00: 0001   1\n\n    10: 8A00   RA  0) goto 11         }\n    14: 0000   halt\n\n    ```", "```\n    10: 1000   no-op                         \n    11: 1000   no-op                         \n    12: C010   goto 10                       \n\n    ```", "```\n    0A: 0003   3\n    0B: 0009   9\n    0C: 0000   0\n\n    0D: 0000   0\n    0E: 0001   1\n\n    10: 8A0A   RA \n    ```", "```\n    14: 1201    R[2] \n    ```", "```\nR[1] = 0000 0000 1011 0101 (binary) = 00B5 (hex)\nR[2] = 0000 0000 1110 0011 (binary) = 00E3 (hex)\nR[3] = 0000 0000 1010 0001 (binary) = 00A1 (hex)\n\n```", "```\n    R[2]      = 0000 0000 1011 0101 (binary) = 00B5 (hex)  = 181 (dec)\n    R[2] << 2 = 0000 0010 1101 0100 (binary) = 02D4 (hex)  = 724 (dec)\n\n    ```", "```\n    R[2]      = 0000 0000 1011 0101 (binary) = 00B5 (hex)  =  181 (dec)\n    R[2] >> 2 = 0000 0000 0010 1101 (binary) = 002D (hex)  =   45 (dec)\n\n    ```", "```\n    R[2]      = 1111 1111 0100 1011 (binary) = FF4B (hex)  = -181 (dec)\n    R[2] >> 2 = 1111 1111 1101 0010 (binary) = FFD2 (hex)  = - 46 (dec)\n\n    ```", "```\n11: 7A30    R[A] \n```", "```\n    10: 7101   R[1] \n    ```", "```\n    1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n    8888 8810 98FF C011\n\n    ```", "```\n// data\n01: 0001                           the constant 1\n02: 00D0                           memory address of first node of linked list\n\n// initialize\n10: 8101  R1  0) goto 12    } while (x != null) \n17: 0000  halt               \n\n// data\nD0: 0001    D4: 0004    D8: 0000    DC: 0000\nD1: 00D6    D5: 0000    D9: 0000    DD: 0000\nD2: 0000    D6: 0002    DA: 0003    DE: 0000\nD3: 0000    D7: 00DA    DB: 00D4    DF: 0000\n\n```", "```\n    0002\n    0008\n    0020\n    0100\n\n    ```", "```\n    (a)  10: 7211        (b)  10: 8211         (c)  10: 7211\n         11: 7110             11: 8110              11: A102\n         12: 2321             12: 2312              12: 2312\n         13: 0000             13: 0000              13: 0000\n\n    ```", "```\n    10: 7101\n    11: 7207\n    12: 7301\n    13: 1333\n    14: 2221\n    15: D213\n    16: 0000\n\n    ```", "```\n    10: 7100   R[1] \n    ```", "```\n    1112 1112\n\n    ```", "```\n    C011 C011 1112 1112\n\n    ```", "```\n    10: 8AFF   read R[A]\n    11: 7101   R[1] \n    ```", "```\n    30-37:  0001  0002  0003  0004  0004  0003  0002  0001\n\n    ```", "```\n    10: 7101  R[1] \n    ```", "```\n    for (int i = N;  i > ???? ;  i = i ????)\n        for (int j = 0;  j < ???? ;  j = j ????)\n            a[ ???? ] = ???? ;\n\n    ```", "```\n    0001  0002  0003  0004  0004  0003  0002  0001\n\n    ```", "```\n    1CAB EF00 0000 4321 1234\n\n    ```", "```\n    10: 7101   R[1] \n    ```", "```\n    2CAB EF00 0000 4321 1234\n\n    ```", "```\n    R0: 0000 0000 0000 0000 0000 0000 0000 0000\n    R8: 0000 0000 0000 0000 0000 0011 0000 0000\n\n    20: 0000 0000 0000 0000 0000 0000 0000 0000\n    28: 0000 005A 0000 0000 0000 0000 0000 0000\n    30: 7101 7200 8329 1221 1331 A303 D333 92FF\n    38: 0000 0000 0000 0000 0000 0000 0000 0000\n    40: 7101 7200 8329 A403 1224 1331 A303 D343\n    48: 92FF 0000 0000 0000 0000 0000 0000 0000\n    50: 0003 0000 0005 0000 0004 0052 0000 0000\n    58: 0001 0060 0000 0058 0000 0000 0000 0000\n    60: 0002 0050 0000 0000 0000 0000 0000 0000\n\n    ```", "```\n    while (b > 0) {\n       if (b > a) swap a and b\n       a = a - b\n    }\n    return a\n\n    ```"]