- en: SSL/TLS and HTTPS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL/TLS和HTTPS
- en: '**Note:** These lecture notes were slightly modified from the ones posted on
    the 6.858 [course website](http://css.csail.mit.edu/6.858/2014/schedule.html)
    from 2014.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**这些讲座笔记略有修改自2014年6.858 [课程网站](http://css.csail.mit.edu/6.858/2014/schedule.html)上发布的笔记。'
- en: 'This lecture is about two related topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这节课涉及两个相关主题：
- en: How to cryptographically protect network communications, at a larger scale than
    Kerberos?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在比Kerberos更大规模上加密保护网络通信？
- en: 'Technique: certificates'
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术：证书
- en: How to integrate cryptographic protection of network traffic into the web security
    model?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将网络流量的加密保护整合到Web安全模型中？
- en: HTTPS, Secure cookies, etc.
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTPS，安全cookie等。
- en: Symmetric vs. asymmetric encryption
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对称与非对称加密
- en: '**Recall:** two kinds of encryption schemes.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**回顾：**两种加密方案。'
- en: '`E` is encrypt, `D` is decrypt'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`E`是加密，`D`是解密'
- en: Symmetric key cryptography means *same key* is used to encrypt & decrypt
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对称密钥加密意味着*相同密钥*用于加密和解密
- en: '`ciphertext = E_k(plaintext)`'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`密文 = E_k(明文)`'
- en: '`plaintext = D_k(ciphertext)`'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`明文 = D_k(密文)`'
- en: 'Asymmetric key (public-key) cryptography: encrypt & decrypt keys differ'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非对称密钥（公钥）加密：加密和解密密钥不同
- en: '`ciphertext = E_PK(plaintext)`'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`密文 = E_PK(明文)`'
- en: '`plaintext = D_SK(ciphertext)`'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`明文 = D_SK(密文)`'
- en: '`PK` and `SK` are called public and secret (private) key, respectively'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PK`和`SK`分别称为公钥和私钥（秘密密钥）'
- en: Public-key cryptography is orders of magnitude slower than symmetric
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公钥加密比对称加密慢几个数量级
- en: Encryption provides data *secrecy*, however, we often also want *integrity*.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密提供数据*保密性*，但我们通常也希望*完整性*。
- en: '*Message authentication code (MAC)* with symmetric keys can provide integrity.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*消息认证码（MAC）*使用对称密钥可以提供完整性。'
- en: Look up *HMAC* if you're interested in more details.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你对更多细节感兴趣，请查看*HMAC*。
- en: 'Can use public-key crypto to sign and verify, almost the opposite:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用公钥加密进行签名和验证，几乎相反：
- en: Use secret key to generate signature (compute `D_SK`)
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用秘密密钥生成签名（计算`D_SK`）
- en: Use public key to check signature (compute `E_PK`)
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用公钥检查签名（计算`E_PK`）
- en: Kerberos
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kerberos
- en: Central KDC knows all principals and their keys.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中央KDC知道所有主体及其密钥。
- en: When `A` wants to talk to `B`, `A` asks the KDC to issue a ticket.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`A`想要与`B`交流时，`A`要求KDC发放一张票。
- en: Ticket contains a session key for `A` to talk to `B`, generated by KDC.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 票据包含一个由KDC生成的`A`与`B`通话的会话密钥。
- en: '*Why is Kerberos not enough?*'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '*为什么Kerberos不够？*'
- en: E.g., why isn't the web based on Kerberos?
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，为什么Web不基于Kerberos？
- en: Might not have a single KDC trusted to generate session keys.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能没有一个单一的KDC被信任生成会话密钥。
- en: Not everyone might have an account on this single KDC.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不是每个人都可能在这个单一KDC上有帐户。
- en: KDC might not scale if users contact it every time they went to a web site.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户每次访问网站都联系KDC，KDC可能无法扩展。
- en: Unfortunate that KDC knows what service each user is connecting to.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不幸的是，KDC知道每个用户连接到哪个服务。
- en: These limitations are largely inevitable with symmetric encryption.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些限制在对称加密中很大程度上是不可避免的。
- en: '*Alternative plan:* Use public key encryption'
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '*备选方案：*使用公钥加密'
- en: Suppose `A` knows the public key of `B`.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设`A`知道`B`的公钥。
- en: Don't want to use public-key encryption all the time (slow).
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不想一直使用公钥加密（速度慢）。
- en: 'Strawman protocol for establishing a secure connection between `A` and `B`:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于在`A`和`B`之间建立安全连接的草案协议：
- en: '`A` generates a random symmetric session key `S`.'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`A`生成一个随机对称会话密钥`S`。'
- en: '`A` encrypts `S` for `PK_B`, sends to `B`.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`A`为`PK_B`加密`S`，发送给`B`。'
- en: Now we have secret key `S` shared between `A` and `B`, can encrypt and
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在我们有`A`和`B`之间共享的秘密密钥`S`，可以加密和
- en: authenticate messages using symmetric encryption, much like Kerberos.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用对称加密验证消息，类似于Kerberos。
- en: 'Good properties of this strawman protocol:'
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这个草案协议的好处：
- en: '`A`''s data seen only by `B`.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`A`的数据只被`B`看到。'
- en: Only `B` (with `SK_B`) can decrypt `S`.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有`B`（具有`SK_B`）才能解密`S`。
- en: Only `B` can thus decrypt data encrypted under `S`.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有`B`才能解密使用`S`加密的数据。
- en: No need for a KDC-like central authority to hand out session keys.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要类似KDC的中央机构来分发会话密钥。
- en: What goes wrong with this strawman?
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这个草案有什么问题？
- en: Adversary can record and later replay `A`'s traffic; `B` would not notice.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以记录并稍后重放`A`的流量；`B`不会注意到。
- en: 'Solution: have `B` send a nonce (random value).'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：让`B`发送一个随机值（nonce）。
- en: Incorporate the nonce into the final master secret `S' = f(S, nonce)`.
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将nonce合并到最终主密钥`S' = f(S, nonce)`中。
- en: Often, `S` is called the *pre-master secret*, and `S'` is the *master secret*.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，`S`被称为*预主密钥*，`S'`被称为*主密钥*。
- en: This process to establish `S'` is called the "handshake".
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立`S'`的过程称为“握手”。
- en: Adversary can impersonate `A`, by sending another symmetric key to `B`.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以冒充`A`，发送另一个对`B`的对称密钥。
- en: Many possible solutions, if `B` cares who `A` is.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`B`在乎`A`是谁，有许多可能的解决方案。
- en: E.g., `B` also chooses and sends a symmetric key to `A`, encrypted with `PK_A`.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，`B`还选择并使用`PK_A`加密的对`A`发送对称密钥。
- en: Then both `A` and `B` use a hash of the two keys combined.
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后`A`和`B`都使用两个密钥组合的哈希。
- en: This is roughly how TLS client certificates work.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这大致是 TLS 客户端证书的工作原理。
- en: Adversary can later obtain `SK_B`, decrypt symmetric key and all messages.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手稍后可以获取`SK_B`，解密对称密钥和所有消息。
- en: 'Solution: use a key exchange protocol like Diffie-Hellman,'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：使用类似 Diffie-Hellman 的密钥交换协议，
- en: which provides *forward secrecy*, as discussed in last lecture.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供*前向保密*，如上次讲座中讨论的。
- en: '*Hard problem:* what if neither computer knows each other''s public key?'
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '*难题：* 如果两台计算机都不知道对方的公钥怎么办？'
- en: 'Common approach: use a trusted third party to generate certificates.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见方法：使用可信第三方生成证书。
- en: Certificate is tuple (name, pubkey), signed by certificate authority.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书是元组（名称，公钥），由证书颁发机构签名。
- en: 'Meaning: certificate authority claims that name''s public key is pubkey.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 含义：证书颁发机构声称名称的公钥是公钥。
- en: '`B` sends `A` a pubkey along with a certificate.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`B`除了发送证书外，还向`A`发送一个公钥。'
- en: If `A` trusts certificate authority, continue as above.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`A`信任证书颁发机构，继续如上操作。
- en: Why might certificates be better than Kerberos?
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么证书可能比 Kerberos 更好？
- en: No need to talk to KDC each time client connects to a new server.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端每次连接到新服务器时无需与 KDC 通信。
- en: Server can present certificate to client; client can verify signature.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可以向客户端呈现证书；客户端可以验证签名。
- en: KDC not involved in generating session keys.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KDC 不参与生成会话密钥。
- en: Can support "anonymous" clients that have no long-lived key / certificate.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以支持没有长期密钥/证书的“匿名”客户端。
- en: 'Plan for securing web browsers: HTTPS'
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保护 Web 浏览器的计划：HTTPS
- en: 'New protocol: *https* instead of *http* (e.g., [https://www.paypal.com/](https://www.paypal.com/)).'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新协议：*https* 而不是 *http*（例如，[https://www.paypal.com/](https://www.paypal.com/)）。
- en: 'Need to protect several things:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要保护几样东西：
- en: '**(A)** Data sent over the network.'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**(A)** 数据在网络上传输。'
- en: '**(B)** Code/data in user''s browser.'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**(B)** 用户浏览器中的代码/数据。'
- en: '**(C)** UI seen by the user.'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**(C)** 用户看到的 UI。'
- en: '**(A)** *How to ensure data is not sniffed or tampered with on the network?*'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**(A)** *如何确保数据在网络上不被窃听或篡改？*'
- en: Use TLS (a cryptographic protocol that uses certificates).
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 TLS（一种使用证书的加密协议）。
- en: TLS encrypts and authenticates network traffic.
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS 加密和认证网络流量。
- en: 'Negotiate ciphers (and other features: compression, extensions).'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协商密码（和其他功能：压缩，扩展）。
- en: Negotiation is done in clear.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协商是明文进行的。
- en: Include a MAC of all handshake messages to authenticate.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括对所有握手消息进行 MAC 认证。
- en: '**(B)** *How to protect data and code in the user''s browser?*'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**(B)** *如何保护用户浏览器中的数据和代码？*'
- en: '**Goal:** connect browser security mechanisms to whatever TLS provides.'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标：** 将浏览器安全机制与 TLS 提供的内容连接起来。'
- en: 'Recall that browser has two main security mechanisms:'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记住浏览器有两个主要的安全机制：
- en: Same-origin policy.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同源策略。
- en: Cookie policy (slightly different).
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cookie 策略（略有不同）。
- en: Same-origin policy with HTTPS/TLS.
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 HTTPS/TLS 的同源策略。
- en: TLS certificate name must match hostname in the URL
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS 证书名称必须与 URL 中的主机名匹配。
- en: In our example, certificate name must be www.paypal.com.
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们的示例中，证书名称必须是 www.paypal.com。
- en: One level of wildcard is also allowed (*.paypal.com)
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 也允许一级通配符（*.paypal.com）。
- en: Browsers trust a number of certificate authorities.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器信任多个证书颁发机构。
- en: Origin (from the same-origin policy) includes the protocol.
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来源（来自同源策略）包括协议。
- en: http://www.paypal.com/ is different from https://www.paypal.com/
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: http://www.paypal.com/ 与 https://www.paypal.com/ 不同。
- en: Here, we care about integrity of data (e.g., JavaScript code).
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这里，我们关心数据的完整性（例如 JavaScript 代码）。
- en: '*Result:* non-HTTPS pages cannot tamper with HTTPS pages.'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*结果：* 非 HTTPS 页面无法篡改 HTTPS 页面。'
- en: '*Rationale:* non-HTTPS pages could have been modified by adversary.'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*原因：* 非 HTTPS 页面可能已被对手修改。'
- en: Cookies with HTTPS/TLS.
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 HTTPS/TLS 的 Cookie。
- en: Server certificates help clients differentiate between servers.
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器证书帮助客户端区分服务器。
- en: Cookies (common form of user credentials) have a "Secure" flag.
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cookie（用户凭证的常见形式）有一个“安全”标志。
- en: Secure cookies can only be sent with HTTPS requests.
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全的 Cookie 只能随 HTTPS 请求发送。
- en: Non-Secure cookies can be sent with HTTP and HTTPS requests.
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非安全的 Cookie 可以随 HTTP 和 HTTPS 请求发送。
- en: What happens if adversary tampers with DNS records?
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果对手篡改 DNS 记录会发生什么？
- en: 'Good news: security doesn''t depend on DNS.'
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 好消息：安全性不依赖于DNS。
- en: We already assumed adversary can tamper with network packets.
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们已经假设对手可以篡改网络数据包。
- en: Wrong server will not know correct private key matching certificate.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误的服务器将不知道与证书匹配的正确私钥。
- en: '**(C)** *Finally, users can enter credentials directly. How to secure that?*'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**(C)** *最后，用户可以直接输入凭据。如何确保安全？*'
- en: Lock icon in the browser tells user they're interacting with HTTPS site.
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器中的锁图标告诉用户他们正在与HTTPS站点交互。
- en: Browser should indicate to the user the name in the site's certificate.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器应该向用户指示站点证书中的名称。
- en: User should verify site name they intend to give credentials to.
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户应验证他们打算提供凭据的站点名称。
- en: How can this plan go wrong?
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个计划怎么会出错？
- en: As you might expect, every step above can go wrong.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正如你所料，上述每一步都可能出错。
- en: Not an exhaustive list, but gets at problems that ForceHTTPS wants to solve.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不是详尽的列表，但涉及ForceHTTPS想要解决的问题。
- en: '**1 (A)** Cryptography'
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**1 (A)** 密码学'
- en: There have been some attacks on the cryptographic parts of SSL/TLS.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: SSL/TLS的密码部分曾受到一些攻击。
- en: Attack by Rizzo and Duong can allow adversary to learn some plaintext by issuing
    many carefully-chosen requests over a single connection. [Ref](http://www.educatedguesswork.org/2011/09/security_impact_of_the_rizzodu.html)
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rizzo和Duong的攻击可以让对手通过在单个连接上发出许多精心选择的请求来学习一些明文。[参考](http://www.educatedguesswork.org/2011/09/security_impact_of_the_rizzodu.html)
- en: Recent attack by same people using compression, mentioned in iSEC lecture. [Ref](http://en.wikipedia.org/wiki/CRIME)
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同一人使用压缩进行最近的攻击，在iSEC讲座中提到。[参考](http://en.wikipedia.org/wiki/CRIME)
- en: Most recently, more padding oracle attacks. [Ref](https://www.openssl.org/~bodo/ssl-poodle.pdf)
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最近，更多的填充预言攻击。[参考](https://www.openssl.org/~bodo/ssl-poodle.pdf)
- en: Some servers/CAs use weak crypto, e.g. certificates using MD5.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些服务器/CA使用弱加密，例如使用MD5的证书。
- en: Some clients choose weak crypto (e.g., SSL/TLS on Android). [Ref](http://op-co.de/blog/posts/android_ssl_downgrade/)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些客户端选择弱加密（例如，Android上的SSL/TLS）。[参考](http://op-co.de/blog/posts/android_ssl_downgrade/)
- en: But, cryptography is rarely the weakest part of a system.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是，密码学很少是系统中最薄弱的部分。
- en: '**2 (B)** Authenticating the server'
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**2 (B)** 服务器认证'
- en: Adversary may be able to obtain a certificate for someone else's name.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 对手可能能够为他人的名字获得证书。
- en: Used to require a faxed request on company letterhead (but how to check?)
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以前需要在公司抬头纸上传真请求（但如何检查？）
- en: Now often requires receiving secret token at root@domain.com or similar
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在通常需要在root@domain.com或类似位置接收秘密令牌
- en: Security depends on the policy of least secure certificate authority
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全性取决于最不安全证书颁发机构的政策
- en: There are 100's of trusted certificate authorities in most browsers
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数浏览器中有数百个受信任的证书颁发机构
- en: Several CA compromises in 2011 (certs for gmail, facebook, ..) [Ref](http://dankaminsky.com/2011/08/31/notnotar/)
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2011年发生了几起CA被破坏的事件（gmail、facebook等的证书）。[参考](http://dankaminsky.com/2011/08/31/notnotar/)
- en: Servers may be compromised and the corresponding private key stolen.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可能被入侵，相应的私钥被盗。
- en: How to deal with compromised certificate (e.g., invalid cert or stolen key)?
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如何处理受损的证书（例如，无效证书或被盗私钥）？
- en: Certificates have expiration dates.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书有到期日期。
- en: Checking certificate status with CA on every request is hard to scale.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次请求都要与CA检查证书状态很难扩展。
- en: Certificate Revocation List (CRL) published by some CA's, but relatively
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些CA发布的证书吊销列表（CRL），但其中的证书相对较少
- en: 'few certificates in them (spot-checking: most have zero revoked certs).'
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其中一些（抽查：大多数没有被吊销的证书）。
- en: CRL must be periodically downloaded by client.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端必须定期下载CRL。
- en: Could be slow, if many certs are revoked.
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果许多证书被吊销，可能会很慢。
- en: Not a problem if few or zero certs are revoked, but not too useful.
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果很少或零个证书被吊销，则不是问题，但并不太有用。
- en: 'OCSP: online certificate status protocol.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OCSP：在线证书状态协议。
- en: Query whether a certificate is valid or not.
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询证书是否有效。
- en: 'One issue: OCSP protocol didn''t require signing "try later" messages. [Ref](http://www.thoughtcrime.org/papers/ocsp-attack.pdf)'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个问题：OCSP协议不要求签署“稍后再试”消息。[参考](http://www.thoughtcrime.org/papers/ocsp-attack.pdf)
- en: Various heuristics for guessing whether certificate is OK or not.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于猜测证书是否正常的各种启发式方法。
- en: CertPatrol, EFF's SSL Observatory, ..
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CertPatrol，EFF的SSL Observatory等。
- en: Not as easy as "did the cert change?". Websites sometimes test new CAs.
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不像“证书是否更改那么容易”。网站有时会测试新的CA。
- en: 'Problem: online revocation checks are soft-fail.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：在线吊销检查是软失败。
- en: An active network attacker can just make the checks unavailable.
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动网络攻击者可以使检查不可用。
- en: Browsers don't like blocking on a side channel.
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器不喜欢在侧通道上阻塞。
- en: 'Performance, single point of failure, captive portals, etc. [ Ref: https://www.imperialviolet.org/2011/03/18/revocation.html
    ]'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能、单点故障、强制门户等问题。[ 参考：https://www.imperialviolet.org/2011/03/18/revocation.html
    ]
- en: 'In practice browsers push updates with blacklist after major breaches. [ Ref:
    https://www.imperialviolet.org/2012/02/05/crlsets.html ]'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上，浏览器在重大违规事件后会推送黑名单更新。[ 参考：https://www.imperialviolet.org/2012/02/05/crlsets.html
    ]
- en: Users ignore certificate mismatch errors.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 用户忽略证书不匹配错误。
- en: Despite certificates being easy to obtain, many sites misconfigure them.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管证书很容易获得，但许多网站配置错误。
- en: Some don't want to deal with (non-zero) cost of getting certificates.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些人不想处理获得证书的（非零）成本。
- en: Others forget to renew them (certificates have expiration dates).
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他人忘记更新它们（证书有到期日期）。
- en: 'End result: browsers allow users to override mismatched certificates.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最终结果：浏览器允许用户覆盖不匹配的证书。
- en: 'Problematic: human is now part of the process in deciding if cert is valid.'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题在于：人现在成为决定证书是否有效的过程的一部分。
- en: Hard for developers to exactly know what certs will be accepted by browsers.
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员很难确切知道浏览器将接受哪些证书。
- en: Empirically, about 60% of bypass buttons shown by Chrome are clicked through.
    (Though this data might be stale at this point..)
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据经验，Chrome 显示的约 60% 的绕过按钮被点击通过。（尽管这些数据可能已经过时..）
- en: What's the risk of a user accepting an invalid certificate?
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 用户接受无效证书的风险是什么？
- en: Might be benign (expired cert, server operator forgot to renew).
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能是良性的（过期证书，服务器操作员忘记续订）。
- en: Might be a man-in-the-middle attack, connecting to adversary's server.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能是中间人攻击，连接到对手的服务器。
- en: Why is this bad?
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么这是不好的？
- en: User's browser will send user's cookies to the adversary.
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户的浏览器将用户的 cookie 发送给对手。
- en: User might enter sensitive data into adversary's website.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可能会将敏感数据输入对手的网站。
- en: User might assume data on the page is coming from the right site.
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可能会认为页面上的数据来自正确的网站。
- en: '**3 (B)** Mixing HTTP and HTTPS content'
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**3 (B)** 混合 HTTP 和 HTTPS 内容'
- en: Web page origin is determined by the URL of the page itself.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网页的来源由页面本身的 URL 确定。
- en: 'Page can have many embedded elements:'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面可以有许多嵌入元素：
- en: Javascript via `<SCRIPT>` tags
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Javascript 通过 `<SCRIPT>` 标签
- en: CSS style sheets via `<STYLE>` tags
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS 样式表通过 `<STYLE>` 标签
- en: Flash code via `<EMBED>` tags
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flash 代码通过 `<EMBED>` 标签
- en: Images via `<IMG>` tags
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像通过 `<IMG>` 标签
- en: If adversary can tamper with these elements, could control the page.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果对手能够篡改这些元素，可能控制页面。
- en: In particular, Javascript and Flash code give control over page.
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特别是，Javascript 和 Flash 代码可以控制页面。
- en: 'CSS: less control, but still abusable, esp w/ complex attribute selectors.'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS：控制较少，但仍然可滥用，尤其是使用复杂的属性选择器。
- en: Probably the developer wouldn't include Javascript from attacker's site.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员可能不会包含来自攻击者网站的 Javascript。
- en: But, if the URL is non-HTTPS, adversary can tamper with HTTP response.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是，如果 URL 不是 HTTPS，对手可以篡改 HTTP 响应。
- en: 'Alternative approach: explicitly authenticate embedded elements.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一种方法：明确验证嵌入元素。
- en: E.g., could include a hash of the Javascript code being loaded.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，可以包含正在加载的 Javascript 代码的哈希值。
- en: Prevents an adversary from tampering with response.
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止对手篡改响应。
- en: Does not require full HTTPS.
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要完整的 HTTPS。
- en: Might be deployed in browsers in the near future. [Ref](http://www.w3.org/TR/SRI/)
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会在不久的将来在浏览器中部署。[参考](http://www.w3.org/TR/SRI/)
- en: '**4 (B)** Protecting cookies'
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**4 (B)** 保护 cookie'
- en: Web application developer could make a mistake, forgets the Secure flag.
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 应用程序开发人员可能会犯错误，忘记了 Secure 标志。
- en: User visits http://bank.com/ instead of https://bank.com/, leaks cookie.
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户访问 http://bank.com/ 而不是 https://bank.com/，泄漏 cookie。
- en: Suppose the user only visits https://bank.com/.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设用户只访问 https://bank.com/。
- en: Why is this still a problem?
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么这仍然是一个问题？
- en: Adversary can cause another HTTP site to redirect to http://bank.com/.
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以导致另一个 HTTP 网站重定向到 http://bank.com/。
- en: Even if user never visits any HTTP site, application code might be buggy.
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使用户从未访问任何 HTTP 网站，应用程序代码可能存在错误。
- en: Some sites serve login forms over HTTPS and serve other content over HTTP.
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些网站通过 HTTPS 提供登录表单，并通过 HTTP 提供其他内容。
- en: Be careful when serving over both HTTP and HTTPS.
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在同时使用 HTTP 和 HTTPS 时要小心。
- en: E.g., Google's login service creates new cookies on request.
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，Google 的登录服务在请求时创建新的 cookie。
- en: Login service has its own (Secure) cookie.
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录服务有自己的（安全的）cookie。
- en: Can request login to a Google site by loading login's HTTPS URL.
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过加载登录的 HTTPS URL 请求登录到 Google 网站。
- en: Used to be able to also login via cookie that wasn't Secure.
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以前还可以通过不安全的 cookie 登录。
- en: ForceHTTPS solves problem by redirecting HTTP URLs to HTTPS. [Ref](http://blog.icir.org/2008/02/sidejacking-forced-sidejacking-and.html)
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: ForceHTTPS 通过将 HTTP URL 重定向到 HTTPS 来解决问题。[参考](http://blog.icir.org/2008/02/sidejacking-forced-sidejacking-and.html)
- en: Cookie integrity problems.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cookie 完整性问题。
- en: Non-Secure cookies set on http://bank.com still sent to https://bank.com.
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 http://bank.com 上设置的非 Secure cookie 仍然发送到 https://bank.com。
- en: No way to determine who set the cookie.
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法确定是谁设置了 cookie。
- en: '**5 (C)** Users directly entering credentials'
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**5（C）** 用户直接输入凭据'
- en: Phishing attacks.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 钓鱼攻击。
- en: Users don't check for lock icon.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户不检查锁图标。
- en: Users don't carefully check domain name, don't know what to look for.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户不仔细检查域名，不知道要查找什么。
- en: E.g., typo domains (paypa1.com), unicode
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，拼写错误的域名（paypa1.com），unicode
- en: Web developers put login forms on HTTP pages (target login script is HTTPS).
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 开发人员将登录表单放在 HTTP 页面上（目标登录脚本是 HTTPS）。
- en: Adversary can modify login form to point to another URL.
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以修改登录表单以指向另一个 URL。
- en: Login form not protected from tampering, user has no way to tell.
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录表单没有受到篡改的保护，用户无法辨别。
- en: ForceHTTPS
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ForceHTTPS
- en: How does ForceHTTPS (this paper) address some of these problems?
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ForceHTTPS（本文）如何解决这些问题？
- en: Server can set a flag for its own hostname in the user's browser.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可以在用户的浏览器中为自己的主机名设置标志。
- en: Makes SSL/TLS certificate misconfigurations into a fatal error.
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 SSL/TLS 证书配置错误变成致命错误。
- en: Redirects HTTP requests to HTTPS.
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 HTTP 请求重定向到 HTTPS。
- en: Prohibits non-HTTPS embedding (+ performs ForceHTTPS for them).
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁止非 HTTPS 嵌入（+ 为它们执行 ForceHTTPS）。
- en: What problems does ForceHTTPS solve?
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ForceHTTPS 解决了哪些问题？
- en: Mostly 2, 3, and to some extent 4 (see list above)
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要是 2、3，某种程度上是 4（见上面的列表）
- en: Users accepting invalid certificates.
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户接受无效证书。
- en: 'Developer mistakes: embedding insecure content.'
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员错误：嵌入不安全的内容。
- en: 'Developer mistakes: forgetting to flag cookie as Secure.'
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员错误：忘记将 cookie 标记为 Secure。
- en: Adversary injecting cookies via HTTP.
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手通过 HTTP 注入 cookie。
- en: Is this really necessary? Can we just only use HTTPS, set Secure cookies, etc?
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这真的有必要吗？我们只能使用 HTTPS，设置 Secure cookie 等吗？
- en: 'Users can still click-through errors, so it still helps for #2.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户仍然可以点击错误，因此对于＃2仍然有帮助。
- en: 'Not necessary for #3 assuming the web developer never makes a mistake.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于＃3来说并不是必要的，假设 Web 开发人员永远不会犯错误。
- en: 'Still helpful for #4.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于＃4仍然有帮助。
- en: Marking cookies as Secure gives confidentiality, but not integrity.
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 cookie 标记为 Secure 可以确保保密性，但不能保证完整性。
- en: Active attacker can serve fake set at http://bank.com, and set cookies
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动攻击者可以在 http://bank.com 上提供虚假设置，并设置 cookie。
- en: for https://bank.com. (https://bank.com cannot distinguish)
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于 https://bank.com。 （https://bank.com 无法区分）
- en: Why not just turn on ForceHTTPS for everyone?
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么不为所有人打开 ForceHTTPS？
- en: HTTPS site might not exist.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTPS 站点可能不存在。
- en: If it does, might not be the same site (https://web.mit.edu is
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果是这样，可能不是同一个站点（https://web.mit.edu 是
- en: authenticated, but http://web.mit.edu isn't).
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证，但 http://web.mit.edu 不是）。
- en: HTTPS page may expect users to click through (self-signed certs).
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTPS 页面可能期望用户点击通过（自签名证书）。
- en: Implementing ForceHTTPS
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施 ForceHTTPS
- en: The ForceHTTPS bit is stored in a cookie.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ForceHTTPS 位存储在 cookie 中。
- en: 'Interesting issues:'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有趣的问题：
- en: State exhaustion (the ForceHTTPS cookie getting evicted).
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 状态耗尽（ForceHTTPS cookie 被驱逐）。
- en: Denial of service (force entire domain; force via JS; force via HTTP).
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝服务（强制整个域；通过 JS 强制；通过 HTTP 强制）。
- en: Why does ForceHTTPS only allow specific hosts, instead of entire domain?
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么 ForceHTTPS 只允许特定主机，而不是整个域？
- en: Why does ForceHTTPS require cookie to be set via headers and not via JS?
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么 ForceHTTPS 要求通过标头设置 cookie，而不是通过 JS？
- en: Why does ForceHTTPS require cookie to be set via HTTPS, not HTTP?
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么 ForceHTTPS 要求通过 HTTPS 设置 cookie，而不是 HTTP？
- en: Bootstrapping (how to get ForceHTTPS bit; how to avoid privacy leaks).
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引导（如何获取 ForceHTTPS 位；如何避免隐私泄漏）。
- en: 'Possible solution 1: DNSSEC.'
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能的解决方案1：DNSSEC。
- en: 'Possible solution 2: embed ForceHTTPS bit in URL name (if possible).'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能的解决方案2：在 URL 名称中嵌入 ForceHTTPS 位（如果可能）。
- en: If there's a way to get some authenticated bits from server owner (DNSSEC, URL
    name, etc), should we just get the public key directly?
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有一种方法可以从服务器所有者那里获取一些经过身份验证的位（DNSSEC、URL 名称等），我们是否应该直接获取公钥？
- en: 'Difficulties: users have unreliable networks. Browsers are unwilling to block
    the handshake on a side-channel request.'
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 困难：用户网络不可靠。浏览器不愿意在侧通道请求上阻止握手。
- en: Current status of ForceHTTPS
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ForceHTTPS 的当前状态
- en: Some ideas from ForceHTTPS have been adopted into standards.
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些 ForceHTTPS 的想法已被采纳为标准。
- en: 'HTTP Strict-Transport-Security header is similar to a ForceHTTPS cookie. [Ref:
    RFC6797](http://tools.ietf.org/html/rfc6797), [Ref: HTTP Strict Transport Security](http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security)'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP Strict-Transport-Security头部类似于ForceHTTPS cookie。[参考：RFC6797](http://tools.ietf.org/html/rfc6797)，[参考：HTTP
    Strict Transport Security](http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security)
- en: 'Uses header instead of magic cookie:'
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标题而不是魔术Cookie：
- en: 'Strict-Transport-Security: max-age=7884000; includeSubDomains'
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Strict-Transport-Security：max-age=7884000；includeSubDomains
- en: Turns HTTP links into HTTPS links.
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将HTTP链接转换为HTTPS链接。
- en: Prohibits user from overriding SSL/TLS errors (e.g., bad certificate).
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁止用户覆盖SSL/TLS错误（例如，错误的证书）。
- en: Optionally applies to all subdomains.
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选择应用于所有子域。
- en: Why is this useful? Non-secure and forged cookies can be leaked or set on subdomains.
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这有什么用？非安全和伪造的cookie可能会泄漏或设置在子域上。
- en: Optionally provides an interface for users to manually enable it.
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选择为用户提供手动启用的界面。
- en: Implemented in Chrome, Firefox, and Opera.
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Chrome、Firefox和Opera中实施。
- en: Bootstrapping largely unsolved.
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引导程序在很大程度上尚未解决。
- en: Chrome has a hard-coded list of preloads.
  id: totrans-257
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chrome有一个硬编码的预加载列表。
- en: IE9, Firefox 23, and Chrome now block mixed scripting by default.
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IE9，Firefox 23和Chrome现在默认阻止混合脚本。
- en: '[Ref: Ending mixed scripting vulnerabilities](http://blog.chromium.org/2012/08/ending-mixed-scripting-vulnerabilities.html),'
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参考：结束混合脚本漏洞](http://blog.chromium.org/2012/08/ending-mixed-scripting-vulnerabilities.html)，'
- en: '[Ref: Mixed content blocking enabled in Firefox](https://blog.mozilla.org/tanvi/2013/04/10/mixed-content-blocking-enabled-in-firefox-23/),'
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参考：Firefox中启用混合内容阻止](https://blog.mozilla.org/tanvi/2013/04/10/mixed-content-blocking-enabled-in-firefox-23/)，'
- en: '[Ref: Protecting consumers from malicious mixed content](http://blogs.msdn.com/b/ie/archive/2011/06/23/internet-explorer-9-security-part-4-protecting-consumers-from-malicious-mixed-content.aspx)'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参考：保护消费者免受恶意混合内容](http://blogs.msdn.com/b/ie/archive/2011/06/23/internet-explorer-9-security-part-4-protecting-consumers-from-malicious-mixed-content.aspx)'
- en: 'Another recent experiment in this space: HTTPS-Everywhere.'
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在这个领域的另一个最近的实验：HTTPS-Everywhere。
- en: Focuses on the "power user" aspect of ForceHTTPS.
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专注于ForceHTTPS的“高级用户”方面。
- en: Allows users to force the use of HTTPS for some domains.
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许用户强制某些域名使用HTTPS。
- en: Collaboration between Tor and EFF.
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor和EFF之间的合作。
- en: Add-on for Firefox and Chrome.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于Firefox和Chrome的附加组件。
- en: Comes with rules to rewrite URLs for popular web sites.
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附带用于重写流行网站URL的规则。
- en: Other ways to address problems in SSL/TLS
  id: totrans-268
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SSL/TLS中解决问题的其他方法
- en: Better tools / better developers to avoid programming mistakes.
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的工具/更好的开发人员以避免编程错误。
- en: Mark all sensitive cookies as Secure (#4).
  id: totrans-270
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有敏感cookie标记为Secure（#4）。
- en: Avoid any insecure embedding (#3).
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免任何不安全的嵌入（#3）。
- en: Unfortunately, seems error-prone..
  id: totrans-272
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不幸的是，似乎容易出错。
- en: Does not help end-users (requires developer involvement).
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不帮助最终用户（需要开发者参与）。
- en: EV certificates.
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EV证书。
- en: 'Trying to address problem 5: users don''t know what to look for in cert.'
  id: totrans-275
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试解决问题5：用户不知道在证书中寻找什么。
- en: In addition to URL, embed the company name (e.g., "PayPal, Inc.")
  id: totrans-276
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了URL，还嵌入公司名称（例如，“PayPal, Inc.”）
- en: Typically shows up as a green box next to the URL bar.
  id: totrans-277
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常显示为URL栏旁边的绿色框。
- en: Why would this be more secure?
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么这样更安全？
- en: When would it actually improve security?
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么情况下实际上会提高安全性？
- en: 'Might indirectly help solve #2, if users come to expect EV certificates.'
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户开始期望EV证书，可能间接有助于解决问题2。
- en: Blacklist weak crypto.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 黑名单弱加密。
- en: Browsers are starting to reject MD5 signatures on certificates (iOS 5, Chrome
    18, Firefox 16)
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器开始拒绝证书上的MD5签名（iOS 5，Chrome 18，Firefox 16）
- en: and RSA keys with `< 1024` bits. (Chrome 18, OS X 10.7.4, Windows XP+ after
    a recent update)
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及Chrome 18、OS X 10.7.4、Windows XP+最近更新后的RSA密钥`< 1024`位。
- en: 'and even SHA-1 by Chrome. [Ref: Gradually sunsetting SHA1](http://googleonlinesecurity.blogspot.com/2014/09/gradually-sunsetting-sha-1.html)'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 甚至被Chrome淘汰的SHA-1。[参考：逐步淘汰SHA1](http://googleonlinesecurity.blogspot.com/2014/09/gradually-sunsetting-sha-1.html)
- en: OCSP stapling.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OCSP装订。
- en: OCSP responses are signed by CA.
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OCSP响应由CA签名。
- en: Server sends OCSP response in handshake instead of querying online (#2).
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器在握手中发送OCSP响应，而不是在线查询（#2）。
- en: Effectively a short-lived certificate.
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上是一个短暂的证书。
- en: 'Problems:'
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：
- en: Not widely deployed.
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尚未广泛部署。
- en: Only possible to staple one OCSP response.
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只能装订一个OCSP响应。
- en: Key pinning.
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥固定。
- en: Only accept certificates signed by per-site whitelist of CAs.
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅接受由每个站点白名单的CA签名的证书。
- en: Remove reliance on least secure CA (#2).
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除对最不安全CA的依赖（#2）。
- en: Currently a hard-coded list of sites in Chrome.
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目前在Chrome中有一个硬编码的站点列表。
- en: Diginotar compromise caught in 2011 because of key pinning.
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2011年Diginotar妥协是因为密钥固定。
- en: Plans to add mechanism for sites to advertise pins.
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划添加站点广告固定的机制。
- en: '[Ref: IETF draft on websec key pinning](http://tools.ietf.org/html/draft-ietf-websec-key-pinning-21)'
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参考：IETF关于websec关键固定的草案](http://tools.ietf.org/html/draft-ietf-websec-key-pinning-21)'
- en: '[Ref: tack.io](http://tack.io/)'
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参考：tack.io](http://tack.io/)'
- en: Same bootstrapping difficulty as in ForceHTTPS.
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与ForceHTTPS中的引导困难相同。
- en: Other references
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他参考资料
- en: '[http://www.imperialviolet.org/2012/07/19/hope9talk.html](http://www.imperialviolet.org/2012/07/19/hope9talk.html)'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.imperialviolet.org/2012/07/19/hope9talk.html](http://www.imperialviolet.org/2012/07/19/hope9talk.html)'
