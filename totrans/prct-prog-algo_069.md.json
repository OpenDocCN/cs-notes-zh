["```\ndef factorial(n):\n    if n == 1:\n        return 1\n   return n * factorial(n-1)\n\n```", "```\nfactorial(5)\n   factorial(4)\n      factorial(3)\n         factorial(2)\n            factorial(1)\n               return 1\n            return 2*1 = 2\n         return 3*2 = 6\n      return 4*6 = 24\n   return 5*24 = 120\n\n```", "```\ngcd(1440, 408)\n   gcd(408, 216)\n      gcd(216, 24)\n         gcd(192, 24)\n            gcd(24, 0)\n               return 24\n            return 24\n         return 24\n      return 24\n   return 24\n\n```", "```\ndef H(n):\n   return H(n-1) + 1.0/n;\n\n```", "```\ndef H(n):\n    if n == 1:\n        return 1.0\n    return H(n) + 1.0/n\n\n```", "```\ndef H(n):\n    if n == 0:\n        return 0.0\n    return H(n-1) + 1.0/n\n\n```", "```\n0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 ...\n\n```", "```\ndef fib(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return fib(n-1) + fib(n-2)\n\n```", "```\n    def ex233(n):\n        if n <= 0:\n            return\n        stdio.writeln(n)\n        ex233(n-2)\n        ex233(n-3)\n        stdio.writeln(n)\n\n    ```", "```\n    def ex234(n):\n        if n <= 0:\n            return ''\n        return ex234(n-3) + str(n) + ex234(n-2) + str(n)\n\n    ```", "```\n    def ex235(n):\n        s = ex233(n-3) + str(n) + ex235(n-2) + str(n)\n        if n <= 0:\n            return ''\n        return s\n\n    ```", "```\n    def gcdlike(p, q):\n        if q == 0:\n            return p == 1\n        return gcdlike(q, p % q)\n\n    ```", "```\n    def mystery(a, b):\n        if b == 0:\n            return 0\n        if b % 2 == 0:\n            return mystery(a+a, b//2)\n        return mystery(a+a, b//2) + a\n\n    ```", "```\n    bca cba cab acb bac abc\n\n    ```", "```\n    ab ac ad ba bc bd ca cb cd da db dc\n\n    ```", "```\n     a ab abc ac b bc c\n\n    ```", "```\n    abc abd abe acd ace ade bcd bce bde cde\n\n    ```", "```\n    0011 0101 0110 1001 1010 1100\n\n    ```", "```\n    def binomial(n, k):\n        if (n == 0) or (k < 0):\n            return 1.0\n        return (binomial(n-1, k) + binomial(n-1, k-1)) / 2.0\n\n    ```", "```\n    def mcCarthy(n):\n        if n > 100: return n - 10\n        return mcCarthy(mcCarthy(n+11))\n\n    ```", "```\n    def collatz(n):\n        stdio.write(str(n) + ' ')\n        if n == 1:\n            return\n        elif n % 2 == 0:\n            collatz(n // 2)\n        else:\n            collatz(3*n + 1)\n\n    ```", "```\n    7 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1\n\n    ```"]