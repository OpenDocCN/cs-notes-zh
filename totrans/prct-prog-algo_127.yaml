- en: 8\.   Strings
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\.   字符串
- en: 原文：[https://aofa.cs.princeton.edu/80strings](https://aofa.cs.princeton.edu/80strings)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://aofa.cs.princeton.edu/80strings](https://aofa.cs.princeton.edu/80strings)
- en: This chapter studies basic combinatorial properties of *strings*, sequences
    of characters or letters drawn from a fixed alphabet, and introduces algorithms
    that process strings ranging from fundamental methods at the heart of the theory
    of computation to practical text-processing methods with a host of important applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章研究*字符串*的基本组合特性，即从固定字母表中提取的字符或字母序列，并介绍处理字符串的算法，从计算理论核心的基本方法到具有许多重要应用的实用文本处理方法。
- en: 8.1 String Searching
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.1 字符串搜索
- en: 8.2 Combinatorial properties of bitstrings
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.2 比特串的组合特性
- en: 8.3 Regular expressions
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.3 正则表达式
- en: 8.4 Finite-State Automata and the Knuth-Morris-Pratt Algorithm
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.4 有限状态自动机和Knuth-Morris-Pratt算法
- en: 8.5 Context-Free Grammars
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.5 上下文无关文法
- en: 8.6 Tries
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.6 前缀树
- en: 8.7 Trie Algorithms
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.7 前缀树算法
- en: 8.8 Combinatorial Properties of Tries
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.8 前缀树的组合特性
- en: 8.9 Larger alphabets
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.9 更大的字母表
- en: Selected Exercises
  id: totrans-12
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 选定练习
- en: '8.1'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.1'
- en: Give two recurrences satisfied by $[z^N]B_P(z)$.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 给出满足$[z^N]B_P(z)$的两个递归。
- en: '8.2'
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.2'
- en: How long a string of random bits should be taken to be 99% sure that there are
    at least three consecutive 0s?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 随机比特串应该有多长才能确保至少有三个连续的0的概率为99%？
- en: '8.3'
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.3'
- en: How long a string of random bits should be taken to be 50% sure that there are
    at least 32 consecutive 0s?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 随机比特串应该有多长才能确保至少有32个连续的0的概率为50%？
- en: '8.6'
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.6'
- en: 'By considering bitstrings with no runs of two consecutive 0s, evaluate the
    following sum involving Fibonacci numbers: $\sum_{j\ge0} F_j/2^j$.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 通过考虑没有连续两个0的比特串，评估涉及斐波那契数的以下和：$\sum_{j\ge0} F_j/2^j$。
- en: '8.14'
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.14'
- en: Suppose that a monkey types randomly at a 32-key keyboard. What is the expected
    number of characters typed before the monkey hits upon the phrase `THE QUICK BROWN
    FOX JUMPED OVER THE LAZY DOG`?
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一只猴子在一个有32个键的键盘上随机输入。在猴子找到短语`THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG`之前，预期输入的字符数是多少？
- en: '8.15'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.15'
- en: Suppose that a monkey types randomly at a 32-key keyboard. What is the expected
    number of characters typed before the monkey hits upon the phrase `TO BE OR NOT
    TO BE`?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一只猴子在一个有32个键的键盘上随机输入。在猴子找到短语`TO BE OR NOT TO BE`之前，预期输入的字符数是多少？
- en: '8.22'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.22'
- en: Suppose that a monkey types randomly at a 2-key keyboard. What is the expected
    number of bits typed before the monkey hits upon a string of $2k$ alternating
    0s and 1s?
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一只猴子在一个有2个键的键盘上随机输入。在猴子找到一个包含$2k$个交替0和1的字符串之前，预期输入的位数是多少？
- en: '8.40'
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.40'
- en: Suppose that a monkey types randomly at a 32-key keyboard that has 26 letters
    `A` through `Z`, the symbols `+`, `*`, `(`, and `)`, a space key, and a period.
    What is the expected number of characters typed before the monkey hits upon a
    legal regular expression? Assume that spaces can appear anywhere in a regular
    expression and that a legal regular expression must be enclosed in parentheses
    and have exactly one period, at the end.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一只猴子在一个有26个字母`A`到`Z`、符号`+`、`*`、`(`和`)`、一个空格键和一个句号的32键键盘上随机输入。在猴子找到一个合法的正则表达式之前，预期输入的字符数是多少？假设空格可以出现在正则表达式的任何位置，并且合法的正则表达式必须被括号括起来，并且在末尾只有一个句号。
- en: '8.42'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.42'
- en: There are ${8\choose5}=56$ different sets of five three-bit bitstrings. Which
    trie is associated with the most of these sets? The least?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有${8\choose5}=56$种不同的五个三位比特串集合。哪个前缀树与这些集合中的大多数相关联？哪个与最少相关联？
- en: '8.44'
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.44'
- en: How many different tries are there with $N$ external nodes?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有多少不同的前缀树有$N$个外部节点？
- en: '8.45'
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.45'
- en: What proportion of the external nodes are void in a "random" trie (assuming
    each different trie structure to be equally likely to occur)?
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在“随机”前缀树中，外部节点中有多少比例是空的（假设每个不同的前缀树结构出现的可能性相等）？
- en: '8.52'
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.52'
- en: Show that $A_N/N$ is equal to $1/\ln 2$ plus a fluctuating term.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 证明$A_N/N$等于$1/\ln 2$加上一个波动项。
- en: '8.53'
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.53'
- en: Write a program to compute $A_N$ to within $10^{-9}$ for $N<10^6$ and explore
    the oscillatory nature of $A_N/N$.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个计算$A_N$在$N<10^6$时精确到$10^{-9}$的程序，并探索$A_N/N$的振荡特性。
- en: '8.57'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '8.57'
- en: Solve the recurrence for $p_N$ given in the proof of Theorem 8.9, to within
    the oscillating term. $$p_N= {1\over 2^{N}} \sum_k{N\choose k}p_k\quad \hbox{for}\
    N>1\quad \hbox{with}\ p_0=0\ \hbox{and}\ p_1 = 1$$
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 解决定理8.9证明中给出的$p_N$的递归，直到振荡项。$$p_N= {1\over 2^{N}} \sum_k{N\choose k}p_k\quad
    \hbox{for}\ N>1\quad \hbox{with}\ p_0=0\ \hbox{and}\ p_1 = 1$$
- en: Review Questions
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 复习问题
- en: Q8.1
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q8.1
- en: Rank these patterns by expected wait time in a random bit string (lowest to
    highest). (*a*) 00000 (*b*) 00001 (*c*) 01000 (*d*) 01010 (*e*) 10101
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 按照在随机比特串中等待时间的期望值对这些模式进行排名（从低到高）。(*a*) 00000 (*b*) 00001 (*c*) 01000 (*d*) 01010
    (*e*) 10101
- en: Q8.2
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q8.2
- en: Give the OGF for the number of bitstrings not containing the pattern 01010.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 给出不包含模式01010的比特串的OGF。
- en: Q8.3
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q8.3
- en: Give the OGF for the number of bitstrings not containing the pattern 1011.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 给出不包含模式1011的比特串的OGF。
- en: Q8.4
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q8.4
- en: (J. Chen) Use BGFs to count the expected number of occurrences of 00 in a random
    binary string of length $N$. (By convention, a substring of $t$ consecutive 0s
    has $t-1$ occurrences of 00.)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: （J. Chen）使用BGFs计算长度为$N$的随机二进制字符串中00出现的预期次数。（按照惯例，具有$t$个连续0的子串有$t-1$个00出现次数。）
