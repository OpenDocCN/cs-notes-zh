- en: 8\.   Strings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://aofa.cs.princeton.edu/80strings](https://aofa.cs.princeton.edu/80strings)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This chapter studies basic combinatorial properties of *strings*, sequences
    of characters or letters drawn from a fixed alphabet, and introduces algorithms
    that process strings ranging from fundamental methods at the heart of the theory
    of computation to practical text-processing methods with a host of important applications.
  prefs: []
  type: TYPE_NORMAL
- en: 8.1 String Searching
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.2 Combinatorial properties of bitstrings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.3 Regular expressions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.4 Finite-State Automata and the Knuth-Morris-Pratt Algorithm
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.5 Context-Free Grammars
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.6 Tries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.7 Trie Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.8 Combinatorial Properties of Tries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.9 Larger alphabets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Selected Exercises
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '8.1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Give two recurrences satisfied by $[z^N]B_P(z)$.
  prefs: []
  type: TYPE_NORMAL
- en: '8.2'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How long a string of random bits should be taken to be 99% sure that there are
    at least three consecutive 0s?
  prefs: []
  type: TYPE_NORMAL
- en: '8.3'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How long a string of random bits should be taken to be 50% sure that there are
    at least 32 consecutive 0s?
  prefs: []
  type: TYPE_NORMAL
- en: '8.6'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'By considering bitstrings with no runs of two consecutive 0s, evaluate the
    following sum involving Fibonacci numbers: $\sum_{j\ge0} F_j/2^j$.'
  prefs: []
  type: TYPE_NORMAL
- en: '8.14'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Suppose that a monkey types randomly at a 32-key keyboard. What is the expected
    number of characters typed before the monkey hits upon the phrase `THE QUICK BROWN
    FOX JUMPED OVER THE LAZY DOG`?
  prefs: []
  type: TYPE_NORMAL
- en: '8.15'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Suppose that a monkey types randomly at a 32-key keyboard. What is the expected
    number of characters typed before the monkey hits upon the phrase `TO BE OR NOT
    TO BE`?
  prefs: []
  type: TYPE_NORMAL
- en: '8.22'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Suppose that a monkey types randomly at a 2-key keyboard. What is the expected
    number of bits typed before the monkey hits upon a string of $2k$ alternating
    0s and 1s?
  prefs: []
  type: TYPE_NORMAL
- en: '8.40'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Suppose that a monkey types randomly at a 32-key keyboard that has 26 letters
    `A` through `Z`, the symbols `+`, `*`, `(`, and `)`, a space key, and a period.
    What is the expected number of characters typed before the monkey hits upon a
    legal regular expression? Assume that spaces can appear anywhere in a regular
    expression and that a legal regular expression must be enclosed in parentheses
    and have exactly one period, at the end.
  prefs: []
  type: TYPE_NORMAL
- en: '8.42'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are ${8\choose5}=56$ different sets of five three-bit bitstrings. Which
    trie is associated with the most of these sets? The least?
  prefs: []
  type: TYPE_NORMAL
- en: '8.44'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How many different tries are there with $N$ external nodes?
  prefs: []
  type: TYPE_NORMAL
- en: '8.45'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What proportion of the external nodes are void in a "random" trie (assuming
    each different trie structure to be equally likely to occur)?
  prefs: []
  type: TYPE_NORMAL
- en: '8.52'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Show that $A_N/N$ is equal to $1/\ln 2$ plus a fluctuating term.
  prefs: []
  type: TYPE_NORMAL
- en: '8.53'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Write a program to compute $A_N$ to within $10^{-9}$ for $N<10^6$ and explore
    the oscillatory nature of $A_N/N$.
  prefs: []
  type: TYPE_NORMAL
- en: '8.57'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Solve the recurrence for $p_N$ given in the proof of Theorem 8.9, to within
    the oscillating term. $$p_N= {1\over 2^{N}} \sum_k{N\choose k}p_k\quad \hbox{for}\
    N>1\quad \hbox{with}\ p_0=0\ \hbox{and}\ p_1 = 1$$
  prefs: []
  type: TYPE_NORMAL
- en: Review Questions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Q8.1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Rank these patterns by expected wait time in a random bit string (lowest to
    highest). (*a*) 00000 (*b*) 00001 (*c*) 01000 (*d*) 01010 (*e*) 10101
  prefs: []
  type: TYPE_NORMAL
- en: Q8.2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Give the OGF for the number of bitstrings not containing the pattern 01010.
  prefs: []
  type: TYPE_NORMAL
- en: Q8.3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Give the OGF for the number of bitstrings not containing the pattern 1011.
  prefs: []
  type: TYPE_NORMAL
- en: Q8.4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: (J. Chen) Use BGFs to count the expected number of occurrences of 00 in a random
    binary string of length $N$. (By convention, a substring of $t$ consecutive 0s
    has $t-1$ occurrences of 00.)
  prefs: []
  type: TYPE_NORMAL
