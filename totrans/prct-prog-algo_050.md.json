["```\n(-1)s \u00d7 m \u00d7 2(e - 127)\n\n```", "```\n0.085:\nbits:    31   30-23           22-0\nbinary:   0 01111011 01011100001010001111011\ndecimal:  0    123           3019899\n\n```", "```\n    double x1 = 0.3;\n    double x2 = 0.1 + 0.1 + 0.1;\n    StdOut.println(x1 == x2);\n\n    double z1 = 0.5;\n    double z2 = 0.1 + 0.1 + 0.1 + 0.1 + 0.1;\n    StdOut.println(z1 == z2);\n\n    ```", "```\n    double EPSILON = 0.0;\n    double t = c;\n    while (t*t - c > EPSILON)\n        t = (c/t + t) / 2.0;\n\n    ```", "```\n    % java Sqrt 2       % java Sqrt 4   % java Sqrt 10   \n    1.414213562373095   2.0             3.162277660168379\n\n    ```", "```\n    double epsilon = 1e-15;\n    double t = c;\n    while (Math.abs(t*t - c) > c*epsilon)\n        t = (c/t + t) / 2.0;\n\n    ```", "```\n    a * (1 + r/n)n\n\n    ```", "```\n    ex = 1 + x + x2/2! + x3/3! + x4/4! + ...\n\n    ```", "```\n    xn = (R + 1)xn-1 - R (xn-1)2\n\n    ```", "```\n          (R+1)x-R(xx)  (R+1)x-(Rx)x ((R+1)-(Rx))x  x + R(x-xx)   correct\n      0:  0.5000000000  0.5000000000  0.5000000000  0.5000000000  0.5000000000\n     10:  0.3846309658  0.3846309658  0.3846309658  0.3846309658  0.3846309658\n     20:  0.4188950250  0.4188950250  0.4188950250  0.4188950250  0.4188950250\n     30:  0.0463994725  0.0463994756  0.0463994787  0.0463994775  0.0463994768\n     40:  0.3201767255  0.3201840912  0.3201915468  0.3201885159  0.3201870617\n     50:  0.0675670955  0.0637469566  0.0599878799  0.0615028942  0.0622361944\n     60:  0.0011449576  0.2711150754  1.0005313342  1.2945078734  0.0049027225\n     70:  1.2967745569  1.3284619999  1.3296922488  0.1410079704  0.5530823827\n     80:  0.5530384607  0.8171627721  0.0219521770  0.0184394043  0.1196398067\n     90:  0.0948523432  0.1541841695  0.0483069438  1.2513933889  0.3109290854\n    100:  0.0000671271  0.1194574394  1.2564956763  1.0428230334  0.7428865400\n\n    ```", "```\n    double a = 12345.0;\n    double b = 1e-16;\n    System.out.println(a + b == a);\n\n    ```", "```\n    for (double d = 0.1; d <= 0.5; d += 0.1)\n        System.out.println(d);\n    for (double d = 1.1; d <= 1.5; d += 0.1)\n        System.out.println(d);\n\n    ```", "```\n    0.1\n    0.2\n    0.30000000000000004\n    0.4\n    0.5\n    1.1\n    1.2000000000000002\n    1.3000000000000003\n    1.4000000000000004\n\n    ```", "```\n    for (int i = 0; i < N; i++) {\n       int counter = 0;\n       for (double x = 0.0; x < i; x += 0.1)\n          counter++;\n       if (counter != 10*i) System.out.print(i + \" \");\n    }\n\n    ```", "```\n    for (double t = 0.0; t < 100.0; t += 0.01)\n       System.out.println(t);\n\n    ```", "```\n    System.out.println(0.9200000000000002);\n    System.out.println(0.9200000000000001);\n\n    ```", "```\n    float f = (float) (3.0 / 7.0);\n    if (f == 3.0 / 7.0) System.out.println(\"yes\");\n    else                System.out.println(\"no\");\n\n    ```", "```\n    0.007 0.103 0.205 0.008 3.12 0.006 0.876 0.005 0.015\n\n    ```", "```\n      100.00   489.12   1765.12   3636.10\n     3222.05  3299.20   5111.27   3542.25\n    86369.18   532.99\n\n    ```", "```\n    long  x = 16777217;       // 2^24 + 1\n    System.out.println(x);\n    float y = 16777217;\n    DecimalFormat df = new DecimalFormat(\"0.00000000000\");\n    System.out.println(df.format(y));\n\n    ```", "```\n    int count1 = 0;\n    for (float x = 0.0f; x < 20000000.0f; x = x + 1.0f)\n       count1++;\n    System.out.println(count1);\n\n    int count2 = 0;\n       for (double x = 0.0; x < 20000000.0; x = x + 1.0)\n          count2++;\n       System.out.println(count2);\n\n    ```", "```\n    public static double max(double x, double y) {\n        if (x >= y) return x;\n        return y;\n    }\n\n    ```", "```\n    if (1 + x == 1) return x\n    else return (x * Math.log(1 + x)) / (1 + x) - 1.\n\n    ```", "```\n    double c = 0.0, sum = 0.0, y;\n    for (int i = 0; i < N; i++)\n      y = term[i] - c;\n      c = ((sum + y) - sum) - y;\n      sum = t;\n\n    ```", "```\n    (x1x1 + ... xnxn) \u00d7 (y1y1 + ... ynyn)  \u2265 (x1y1 + ... xnyn)2\n\n    ```", "```\n    2(x1x1 + x2x2) \u2265 (x1 + x2)2\n\n    ```", "```\n    double a = 4.0, b = 0.5, c = 8e+307;\n    System.out.println((a * b) * c);\n    System.out.println(a * (b * c));\n\n    ```", "```\n    s_6  = 1                               s_6  = 1\n    s_2k = sqrt(2 - sqrt((2-s_k)(2+s_k))   s_2k = s_k / sqrt(2 + sqrt((2-s_k)(2+s_k))\n    p_k  = k * s_k / 2                     p_k  = k * s_k / 2\n\n    ```", "```\n    Gamma(x) = integral( tx-1 e-t, t = 0..infinity )\n\n    ```", "```\n    Gamma(x) \u2248 (x + 4.5)x - 1/2 * e-(x + 4.5) * sqrt(2 \u03c0) *\n        [ 1.0 + 76.18009173    / (x + 0)   - 86.50532033    / (x + 1)\n              + 24.01409822    / (x + 2)   -  1.231739516   / (x + 3)\n              +  0.00120858003 / (x + 4)   -  0.00000536382 / (x + 5)\n        ]\n\n    ```", "```\n    y = 333.75 b6 + a2(11 a2 b2 - b6 - 121 b4 - 2) + 5.5 b8 + a/(2b)\n\n    ```", "```\n    x = 5.5 b8\n    z = 333.75 b6 + a2(11 a2 b2 - b6 - 121 b4 - 2)\n    y = z + x + a/(2b)\n\n    ```", "```\n    z = -7919111340668961361101134701524942850\n    x = +7919111340668961361101134701524942848\n\n    ```", "```\n    discriminant = Math.sqrt(b*b - 4*a*c);\n    root1 = -b + discriminant / (2*a);\n    root2 = -b - discriminant / (2*a);\n\n    ```", "```\n    if (b > 0) q = -0.5 * (b + discriminant);\n    else       q = -0.5 * (b - discriminant);\n    root1 = q / a;\n    root2 = c / q;\n\n    ```", "```\n    double y = x - 1.0;\n    double z = Math.exp(y);\n    if (z == 1.0) return z;\n    return Math.log(z) / (z - 1.0);\n\n    ```"]