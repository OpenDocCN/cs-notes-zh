- en: 2\.   Sorting
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://algs4.cs.princeton.edu/20sorting](https://algs4.cs.princeton.edu/20sorting)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Overview.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sorting is the process of rearranging a sequence of objects so as to put them
    in some logical order. Sorting plays a major role in commercial data processing
    and in modern scientific computing. Applications abound in transaction processing,
    combinatorial optimization, astrophysics, molecular dynamics, linguistics, genomics,
    weather prediction, and many other fields.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we consider several classical sorting methods and an efficient
    implementation of a fundamental data type known as the priority queue. We discuss
    the theoretical basis for comparing sorting algorithms and conclude the chapter
    with a survey of applications of sorting and priority-queue algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: '[*2.1 Elementary Sorts*](../21elementary) introduces selection sort, insertion
    sort, and shellsort.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*2.2 Mergesort*](../22mergesort) describes megesort, a sorting algorithm that
    is guaranteed to run in linearithmic time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*2.3 Quicksort*](../23quicksort) describes quicksort, which is used more widely
    than any other sorting algorithm.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*2.4 Priority Queues*](../24pq) introduces the priority queue data type and
    an efficient implementation using a binary heap. It also introdues heapsort.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*2.5 Applications*](../25applications) describes applications of sorting,
    including using alternate orderings, selection, the system sort, and stability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Java programs in this chapter.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Below is a list of Java programs in this chapter. Click on the program name
    to access the Java code; click on the reference number for a brief description;
    read the textbook for a full discussion.
  prefs: []
  type: TYPE_NORMAL
- en: '| REF | PROGRAM | DESCRIPTION / JAVADOC |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [2.1](../21elementary/index.php#2.1) | [Insertion.java](../21elementary/Insertion.java.html
    "insertion sort") | insertion sort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../21elementary/index.php#-) | [InsertionX.java](../21elementary/InsertionX.java.html
    "insertion sort (optimized)") | insertion sort (optimized) |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../21elementary/index.php#-) | [BinaryInsertion.java](../21elementary/BinaryInsertion.java.html
    "binary insertion sort") | binary insertion sort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [2.2](../21elementary/index.php#2.2) | [Selection.java](../21elementary/Selection.java.html
    "selection sort") | selection sort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [2.3](../21elementary/index.php#2.3) | [Shell.java](../21elementary/Shell.java.html
    "shellsort") | shellsort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [2.4](../22mergesort/index.php#2.4) | [Merge.java](../22mergesort/Merge.java.html
    "top-down mergesort") | top-down mergesort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../22mergesort/index.php#-) | [MergeBU.java](../22mergesort/MergeBU.java.html
    "bottom-up mergesort") | bottom-up mergesort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../22mergesort/index.php#-) | [MergeX.java](../22mergesort/MergeX.java.html
    "optimized mergesort") | optimized mergesort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../22mergesort/index.php#-) | [Inversions.java](../22mergesort/Inversions.java.html
    "number of inversions") | number of inversions |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [2.5](../23quicksort/index.php#2.5) | [Quick.java](../23quicksort/Quick.java.html
    "quicksort") | quicksort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../23quicksort/index.php#-) | [Quick3way.java](../23quicksort/Quick3way.java.html
    "quicksort with 3-way partitioning") | quicksort with 3-way partitioning |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../23quicksort/index.php#-) | [QuickX.java](../23quicksort/QuickX.java.html
    "optimized 2-way quicksort") | optimized 2-way quicksort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../23quicksort/index.php#-) | [QuickBentleyMcIlroy.java](../23quicksort/QuickBentleyMcIlroy.java.html
    "optimized 3-way quicksort") | optimized 3-way quicksort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../24pq/index.php#-) | [TopM.java](../24pq/TopM.java.html "priority queue
    client") | priority queue client |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [2.6](../24pq/index.php#2.6) | [MaxPQ.java](../24pq/MaxPQ.java.html "max
    heap priority queue") | max heap priority queue |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../24pq/index.php#-) | [MinPQ.java](../24pq/MinPQ.java.html "min heap
    priority queue") | min heap priority queue |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../24pq/index.php#-) | [IndexMinPQ.java](../24pq/IndexMinPQ.java.html
    "index min heap priority queue") | index min heap priority queue |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../24pq/index.php#-) | [IndexMaxPQ.java](../24pq/IndexMaxPQ.java.html
    "index max heap priority queue") | index max heap priority queue |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [-](../24pq/index.php#-) | [Multiway.java](../24pq/Multiway.java.html "multiway
    merge") | multiway merge |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: '| [2.7](../24pq/index.php#2.7) | [Heap.java](../24pq/Heap.java.html "heapsort")
    | heapsort |'
  prefs:
  - PREF_BQ
  type: TYPE_TB
- en: Sorting demos.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Below are some interesting sorting demos.
  prefs: []
  type: TYPE_NORMAL
- en: '[Sorting Algorithm Animations](http://www.sorting-algorithms.com) by David
    Martin.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Audibilization and Visualization of Sorting Algorithms](http://panthema.net/2013/sound-of-sorting/)
    by Timo Bingmann.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Sound of Quicksort](https://www.youtube.com/watch?v=m1PS8IR6Td0).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robot visualizations of [quicksort](https://www.youtube.com/watch?v=aXXWXz5rF64)
    and [mergesort](https://www.youtube.com/watch?v=es2T6KY45cA).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sorting visualizations](http://sorting.at) by Carlo Zapponi, using inversion
    count as a measure of progress.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
