- en: Kerberos
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kerberos
- en: '**Note:** These lecture notes were slightly modified from the ones posted on
    the 6.858 [course website](http://css.csail.mit.edu/6.858/2014/schedule.html)
    from 2014.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**这些讲座笔记略有修改自2014年6.858 [课程网站](http://css.csail.mit.edu/6.858/2014/schedule.html)上发布的笔记。'
- en: Kerberos setting
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kerberos设置
- en: Distributed architecture, evolved from a single time-sharing system.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布式架构，从单一的分时系统演变而来。
- en: 'Many servers providing services: remote login, mail, printing, file server.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多提供服务的服务器：远程登录、邮件、打印、文件服务器。
- en: Many workstations, some are public, some are private.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多工作站，一些是公共的，一些是私有的。
- en: Each user logs into their own workstation, has root access.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个用户登录到自己的工作站，拥有根访问权限。
- en: Adversary may have his/her own workstation too.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可能也有自己的工作站。
- en: 'Alternatives at the time: rlogin, rsh.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当时的替代方案：rlogin、rsh。
- en: 'Goal: allow users to access services, by authenticating to servers.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标：允许用户通过向服务器进行身份验证来访问服务。
- en: Other user information distributed via Hesiod, LDAP, or some other directory.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他用户信息通过Hesiod、LDAP或其他目录分发。
- en: 'Widely used: Microsoft Active Directory uses the Kerberos (v5) protocol.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广泛使用：Microsoft Active Directory使用Kerberos（v5）协议。
- en: What's the trust model?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 信任模型是什么？
- en: All users, clients, servers trust the Kerberos server.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有用户、客户端、服务器都信任Kerberos服务器。
- en: No apriori trust between any other pairs of machines.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他机器之间没有先验信任。
- en: Network is not trusted.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络是不受信任的。
- en: User trusts the local machine.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户信任本地机器。
- en: Kerberos architecture
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kerberos架构
- en: Central Kerberos server, trusted by all parties (or at least all at MIT).
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中央Kerberos服务器，被所有各方信任（或至少在MIT被所有方信任）。
- en: Users, servers have a private key shared between them and Kerberos.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户、服务器之间有一个他们与Kerberos共享的私钥。
- en: Kerberos server keeps track of everyone's private key.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos服务器跟踪每个人的私钥。
- en: Kerberos uses keys to achieve mutual *authentication* between client, server.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos使用密钥实现客户端、服务器之间的相互*身份验证*。
- en: 'Terminology: user, client, server.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 术语：用户、客户端、服务器。
- en: Client and server know each other's names.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端和服务器知道彼此的名称。
- en: Client is convinced it's talking to server and vice-versa.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端确信自己正在与服务器通信，反之亦然。
- en: Kerberos does not provide authorization (can user access some resource).
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos不提供授权（用户能否访问某些资源）。
- en: It's the application's job to decide this.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序需要决定这一点。
- en: Why do we need this trusted Kerberos server?
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么我们需要这个可信的Kerberos服务器？
- en: Users don't need to set up accounts, passwords, etc on each server.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户不需要在每台服务器上设置帐户、密码等。
- en: Overall architecture diagram
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总体架构图
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Kerberos constructs
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kerberos构造
- en: 'Basic Kerberos constructs from the paper:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从论文中得到的基本Kerberos构造：
- en: '**Ticket**, `T_{c,s} = { s, c, addr, timestamp, life, K_{c,s} }`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**票证**，`T_{c,s} = { s, c, addr, timestamp, life, K_{c,s} }`'
- en: usually encrypted w/ `K_s`
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常使用`K_s`加密
- en: '**Authenticator**, `A_c = { c, addr, timestamp }`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证器**，`A_c = { c, addr, timestamp }`'
- en: usually encrypted w/ `K_{c,s}`
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常使用`K_{c,s}`加密
- en: 'Kerberos protocol mechanics:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Kerberos协议机制：
- en: 'Two interfaces to the Kerberos database: "Kerberos" and "TGS" protocols.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对Kerberos数据库有两个接口：“Kerberos”和“TGS”协议。
- en: 'Quite similar; few differences:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相当相似；少许差异：
- en: In Kerberos protocol, can specify any `c`, `s`; client must know `K_c`.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Kerberos协议中，可以指定任何`c`、`s`；客户端必须知道`K_c`。
- en: In TGS protocol, client's name is implicit (from ticket).
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在TGS协议中，客户端的名称是隐式的（来自票证）。
- en: Client just needs to know `K_{c,tgs}` to decrypt response (not `K_c`).
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端只需知道`K_{c,tgs}`来解密响应（而不是`K_c`）。
- en: Where does the client machine get `K_c` in the first place?
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端机器最初从哪里获取`K_c`？
- en: For users, derived from a password using, effectively, a hash function.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于用户，使用密码派生，实际上是使用哈希函数。
- en: Why do we need these two protocols? Why not just use "Kerberos" protocol?
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么我们需要这两个协议？为什么不只使用“Kerberos”协议？
- en: '**Client machine can forget user password after it gets TGS ticket.**'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端机器在获得TGS票证后可以忘记用户密码。**'
- en: Can we just store `K_c` and forget the user password? Password-equivalent.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以只存储`K_c`并忘记用户密码吗？等效于密码。
- en: Naming
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 命名
- en: 'Critical to Kerberos: mapping between keys and principal names.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos的关键之处：密钥与主体名称之间的映射。
- en: Each principal name consists of `( name, instance, realm )`
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个主体名称由`(名称、实例、领域)`组成
- en: Typically written `name.instance@realm`
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常写作`名称.实例@领域`
- en: What entities have principals?
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些实体有主体？
- en: 'Users: name is username, instance for special privileges (by convention).'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户：名称是用户名，实例用于特殊权限（按照惯例）。
- en: 'Servers: name is service name, instance is server''s hostname.'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器：名称是服务名称，实例是服务器的主机名。
- en: 'TGS: name is ''krbtgt'', instance is realm name.'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: TGS：名称是'krbtgt'，实例是领域名称。
- en: Where are these names used / where do the names matter?
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些名称在哪里使用/名称在哪里重要？
- en: Users remember their user name.
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户记住他们的用户名。
- en: Servers perform access control based on principal name.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器根据主体名称执行访问控制。
- en: Clients choose a principal they expect to be talking to.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端选择他们期望与之交流的主体。
- en: Similar to browsers expecting specific certificate name for HTTPS
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似于浏览器期望 HTTPS 的特定证书名称
- en: When can a name be reused?
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时可以重复使用名称？
- en: 'For user names: ensure no ACL contains that name, difficult.'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于用户名：确保没有 ACL 包含该名称，很困难。
- en: 'For servers (assuming not on any ACL): ensure users forget server name.'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于服务器（假设不在任何 ACL 上）：确保用户忘记服务器名称。
- en: Must change the key, to ensure old tickets not valid for new server.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须更改密钥，以确保旧票据对新服务器无效。
- en: 'Getting the initial ticket: "Kerberos" protocol'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取初始票据："Kerberos" 协议
- en: Client sends pair of principal names `(c, s)`, where `s` is typically `tgs`.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端发送一对主体名称 `(c, s)`，其中 `s` 通常是 `tgs`。
- en: Server responds with `{ K_{c,s}, { T_{c,s} }_{K_s} }_{K_c}`
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器回复 `{ K_{c,s}, { T_{c,s} }_{K_s} }_{K_c}`
- en: How does the Kerberos server authenticate the client?
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos 服务器如何验证客户端？
- en: Doesn't need to -- willing to respond to any request.
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要 -- 愿意回应任何请求。
- en: How does the client authenticate the Kerberos server?
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端如何验证 Kerberos 服务器？
- en: Decrypt the response and check if the ticket looks valid.
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解密响应并检查票据是否有效。
- en: Only the Kerberos server would know `K_c`.
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有 Kerberos 服务器会知道 `K_c`。
- en: In what ways is this better/worse than sending password to server?
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这种方式与将密码发送到服务器相比有何优劣之处？
- en: Password doesn't get sent over network, but easier to brute-force.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码不会通过网络发送，但更容易被暴力破解。
- en: Why is the key included twice in the response from Kerberos/TGS server?
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么从 Kerberos/TGS 服务器的响应中两次包含密钥？
- en: '`K_{c,s}` in response gives the client access to this shared key.'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应中的 `K_{c,s}` 给予客户端访问这个共享密钥的权限。
- en: '`K_{c,s}` in the ticket should convince server the key is legitimate.'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 票据中的 `K_{c,s}` 应该让服务器确信密钥是合法的。
- en: '**General weakness:** Kerberos 4 assumed encryption provides message integrity.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般弱点：** Kerberos 4 假设加密提供消息完整性。'
- en: There were some attacks where adversary can tamper with ciphertext.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一些攻击可以让对手篡改密文。
- en: No explicit MAC means that no well-defined way to detect tampering.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有明确的 MAC 意味着没有明确定义的方法来检测篡改。
- en: 'One-off solutions: kprop protocol included checksum, hard to match.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一次性解决方案：kprop 协议包括校验和，难以匹配。
- en: The weakness made it relatively easy for adversary to "mint" tickets.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弱点使得对手相对容易“伪造”票据。
- en: 'Ref: http://web.mit.edu/kerberos/advisories/MITKRB5-SA-2003-004-krb4.txt'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考：http://web.mit.edu/kerberos/advisories/MITKRB5-SA-2003-004-krb4.txt
- en: '**General weakness:** adversary can mount offline password-guessing attacks.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般弱点：** 对手可以发动离线猜测密码攻击。'
- en: Typical passwords don't have a lot of entropy.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 典型密码的熵不高。
- en: Anyone can ask KDC for a ticket encrypted with user's password.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何人都可以向 KDC 请求使用用户密码加密的票据。
- en: 'Then try to brute-force the user''s password offline: easy to parallelize.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后尝试离线暴力破解用户密码：易于并行化。
- en: 'Better design: require client to interact with server for each login attempt.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的设计：要求客户端与服务器互动以进行每次登录尝试。
- en: '**General weakness:** DES hard-coded into the design, packet format.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般弱点：** DES 硬编码到设计中，数据包格式。'
- en: Difficult to switch to another cryptosystem when DES became too weak.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 DES 变得太弱时，难以切换到另一个加密系统。
- en: 'DES key space is too small: keys are only 56 bits, 2^56 is not that big.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DES 密钥空间太小：密钥仅为 56 位，2^56 并不算大。
- en: Cheap to break DES these days ($20--$200 via https://www.cloudcracker.com/).
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在破解 DES 很便宜（$20--$200 通过 https://www.cloudcracker.com/）。
- en: How could an adversary break Kerberos give this weakness?
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手如何利用这个弱点破解 Kerberos？
- en: 'Authenticating to a server: "TGS" protocol'
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向服务器进行身份验证："TGS" 协议
- en: Client sends `( s, {T_{c,tgs}}_{K_tgs}, {A_c}_{K_{c,tgs}} )`
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端发送 `( s, {T_{c,tgs}}_{K_tgs}, {A_c}_{K_{c,tgs}} )`
- en: Server replies with `{ K_{c,s}, { T_{c,s} }_{K_s} }_{K_{c,tgs}}`
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器回复 `{ K_{c,s}, { T_{c,s} }_{K_s} }_{K_{c,tgs}}`
- en: How does a server authenticate a client based on the ticket?
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器如何根据票据对客户端进行身份验证？
- en: Decrypt ticket using server's key.
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用服务器的密钥解密票据。
- en: Decrypt authenticator using `K_{c,s}`.
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `K_{c,s}` 解密验证器。
- en: Only Kerberos server could have generated ticket (knew `K_s`).
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有 Kerberos 服务器可以生成票据（知道 `K_s`）。
- en: Only client could have generated authenticator (knew `K_{c,s}`).
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有客户端可以生成验证器（知道 `K_{c,s}`）。
- en: Why does the ticket include `c`? `s`? `addr`?`life`?
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么票据中包含 `c`？`s`？`addr`？`life`？
- en: Server can extract client's principal name from ticket.
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可以从票据中提取客户端的主体名称。
- en: Addr tries to prevent stolen ticket from being used on another machine.
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Addr 试图防止被盗票据在另一台机器上被使用。
- en: Lifetime similarly tries to limit damage from stolen ticket.
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生命周期同样试图限制被盗票据的损害。
- en: How does a network protocol use Kerberos?
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络协议如何使用Kerberos？
- en: Encrypt/authenticate all messages with `K_{c,s}`
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`K_{c,s}`加密/认证所有消息。
- en: Mail server commands, documents sent to printer, shell I/O, ..
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邮件服务器命令、发送到打印机的文档、shell I/O等。
- en: E.g., "DELETE 5" in a mail server protocol.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，在邮件服务器协议中的“DELETE 5”。
- en: Who generates the authenticator?
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁生成认证器？
- en: Client, for each new connection.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于每个新连接，客户端。
- en: Why does a client need to send an authenticator, in addition to the ticket?
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么客户端需要发送认证器，除了票据之外？
- en: Prove to the server that an adversary is not replaying an old message.
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向服务器证明对手没有重放旧消息。
- en: Server must keep last few authenticators in memory, to detect replays.
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器必须在内存中保留最近的几个认证器，以检测重放。
- en: How does Kerberos use time? What happens if the clock is wrong?
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos如何使用时间？如果时钟错误会发生什么？
- en: Prevent stolen tickets from being used forever.
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防止被盗票据永久使用。
- en: Bound size of replay cache.
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制重放缓存的大小。
- en: If clock is wrong, adversary can use old tickets or replay messages.
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果时钟错误，对手可以使用旧票据或重放消息。
- en: How does client authenticate server? Why would it matter?
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端如何认证服务器？为什么这很重要？
- en: 'Connecting to file server: want to know you''re getting legitimate files.'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到文件服务器：想知道您获取的是合法文件。
- en: 'Solution: server can send back `{ timestamp + 1 }_{K_{c,s}}` after it receives
    ticket and authenticator from client'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：服务器在接收到客户端的票据和认证器后可以发送`{ timestamp + 1 }_{K_{c,s}}`。
- en: '**General weakness:** same key, `K_{c,s}`, used for many things'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般弱点：**相同的密钥`K_{c,s}`用于许多事情'
- en: Adversary can substitute any msg encrypted with `K_{c,s}` for any other.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以用`K_{c,s}`替换任何消息为其他消息。
- en: 'Example: messages across multiple sessions.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：跨多个会话的消息。
- en: Authenticator does not attest to `K_{c,s}` being fresh!
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证器不证明`K_{c,s}`是新鲜的！
- en: Adversary can splice fresh authenticator with old message
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以将新的认证器与旧消息拼接在一起。
- en: Kerberos v5 uses fresh session key each time, sent in authenticator
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos v5每次都使用新的会话密钥，在认证器中发送。
- en: 'Example: messages in different directions'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：不同方向的消息
- en: Kerberos v4 included a direction flag in packets `(c->s or s->c)`
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos v4在数据包中包含了一个方向标志`(c->s或s->c)`
- en: 'Kerberos v5 used separate keys: `K_{c->s}, K_{s->c}`'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos v5使用单独的密钥：`K_{c->s}, K_{s->c}`
- en: What if users connects to wrong server (analogue of MITM / phishing attack)?
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户连接到错误的服务器（MITM /网络钓鱼攻击的类比）会发生什么？
- en: If server is intercepting packets, learns what service user connects to.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果服务器拦截数据包，了解用户连接到哪个服务。
- en: What if user accidentally types ssh malicious.server?
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户意外输入ssh malicious.server会发生什么？
- en: Server learns user's principal name.
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器了解用户的主体名称。
- en: Server does not get user's TGS ticket or `K_c`.
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器没有获取用户的TGS票据或`K_c`。
- en: Cannot impersonate user to others.
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法冒充用户给其他人。
- en: What happens if the KDC is down?
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果KDC宕机会发生什么？
- en: Cannot log in.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法登录。
- en: Cannot obtain new tickets.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法获取新票据。
- en: Can keep using existing tickets.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以继续使用现有的票据。
- en: Authenticating to a Unix system.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 认证到Unix系统。
- en: No Kerberos protocol involved when accessing local files, processes.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问本地文件、进程时不涉及Kerberos协议。
- en: If logging in using Kerberos, user must have presented legitimate ticket.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果使用Kerberos登录，用户必须呈现合法的票据。
- en: What if user logs in using username/password (locally or via SSH using pw)?
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户使用用户名/密码（本地或通过SSH使用密码）登录会发生什么？
- en: User knows whether the password he/she supplied is legitimate.
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户知道自己提供的密码是否合法。
- en: Server has no idea.
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器毫无所知。
- en: 'Potential attack on a server:'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可能受到攻击：
- en: User connects via SSH, types in username, password.
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户通过SSH连接，输入用户名和密码。
- en: Create legitimate-looking Kerberos response, encrypted with password.
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建看起来合法的Kerberos响应，使用密码加密。
- en: Server has no way to tell if this response is really legitimate.
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器无法判断此响应是否真正合法。
- en: 'Solution (if server keeps state): server needs its own principal, key.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案（如果服务器保持状态）：服务器需要自己的主体、密钥。
- en: First obtain user's TGS, using the user's username and password.
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先获取用户的TGS，使用用户的用户名和密码。
- en: Then use TGS to obtain a ticket for server's principal.
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后使用TGS获取服务器主体的票据。
- en: If user faked the Kerberos server, the second ticket will not match.
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户伪造了Kerberos服务器，第二个票据将不匹配。
- en: Using Kerberos in an application.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序中使用Kerberos。
- en: Paper suggests using special functions to seal messages, 3 security levels.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 论文建议使用特殊函数封装消息，有3个安全级别。
- en: Requires moderate changes to an application.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对应用程序需要适度更改。
- en: Good for flexibility, performance.
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于灵活性、性能很好。
- en: Bad for ease of adoption.
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不利于采用。
- en: Hard for developers to understand subtle security guarantees.
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员很难理解微妙的安全保证。
- en: 'Perhaps a better abstraction: secure channel (SSL/TLS).'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或许更好的抽象：安全通道（SSL/TLS）。
- en: Password-changing service (administrative interface)
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改密码服务（管理界面）
- en: How does the Kerberos protocol ensure that client knows password? Why?
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos协议如何确保客户端知道密码？为什么？
- en: Special flag in ticket indicates which interface was used to obtain it.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 票证中的特殊标志指示使用哪个接口获取它。
- en: Password-changing service only accepts tickets obtained by using `K_c`.
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改密码服务仅接受使用`K_c`获得的票证。
- en: Ensure that client knows old password, doesn't just have the ticket.
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保客户端知道旧密码，不仅仅是拥有票证。
- en: How does the client change the user's password?
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端如何更改用户的密码？
- en: Connect to password-changing service, send new password to server.
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到更改密码服务，将新密码发送到服务器。
- en: Replication
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复制
- en: One master server (supports password changes), zero or more slaves.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个主服务器（支持密码更改），零个或多个从服务器。
- en: All servers can issue tickets, only master can change keys.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有服务器都可以发出票证，只有主服务器可以更改密钥。
- en: Why this split?
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么要这样分割？
- en: 'Only one master ensures consistency: cannot have conflicting changes.'
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有一个主服务器确保一致性：不能有冲突的更改。
- en: Master periodically updates the slaves (when paper was written, ~once/hour).
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主服务器定期更新从服务器（在撰写本文时，大约每小时一次）。
- en: 'More recent impls have incremental propagation: lower latency (but not 0).'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更近期的实现具有增量传播：较低的延迟（但不是0）。
- en: How scalable is this?
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个有多可扩展？
- en: Symmetric crypto (DES, AES) is fast -- O(100MB/sec) on current hardware.
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对称加密（DES，AES）很快--在当前硬件上为O（100MB / sec）。
- en: Tickets are small, O(100 bytes), so can support 1M tickets/second.
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 票证很小，O（100字节），因此可以支持每秒1M张票证。
- en: Easy to scale by adding slaves.
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过添加从服务器轻松扩展。
- en: 'Potential problem: password changes take a while to propagate.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 潜在问题：密码更改需要一段时间才能传播。
- en: Adversary can still use a stolen password for a while after user changes it.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手在用户更改密码后仍然可以一段时间使用窃取的密码。
- en: To learn more about how to do replication right, take 6.824.
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要了解如何正确进行复制，请参加6.824。
- en: Security of the Kerberos database
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kerberos数据库的安全性
- en: Master and slave servers are highly sensitive in this design.
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主服务器和从服务器在这种设计中非常敏感。
- en: Compromised master/slave server means all passwords/keys have to change.
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受损的主/从服务器意味着所有密码/密钥都必须更改。
- en: Must be physically secure, no bugs in Kerberos server software, no bugs in any
    other network service on server machines, etc.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须物理安全，Kerberos服务器软件中没有错误，在服务器机器上的任何其他网络服务中也没有错误等。
- en: Can we do better? SSL CA infrastructure slightly better, but not much.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们能做得更好吗？SSL CA基础设施略好一些，但并不多。
- en: Will look at it in more detail when we talk about browser security / HTTPS.
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们谈论浏览器安全/HTTPS时，将更详细地研究它。
- en: Most centralized authentication systems suffer from such problems. .. & globally-unique
    freeform names require some trusted mapping authority.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数集中式身份验证系统都遭受这些问题。..并且全球唯一的自由形式名称需要一些受信任的映射机构。
- en: Why didn't Kerberos use public key crypto?
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么Kerberos没有使用公钥加密？
- en: 'Too slow at the time: VAX systems, 10MHz clocks.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当时太慢了：VAX系统，10MHz时钟。
- en: Government export restrictions.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 政府出口限制。
- en: Patents.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专利。
- en: Network attacks.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 网络攻击。
- en: Offline password guessing attacks on Kerberos server.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos服务器上的离线密码猜测攻击。
- en: Kerberos v5 prevents clients from requesting ticket for any principal.
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos v5防止客户端请求任何主体的票证。
- en: Must include `{ timestamp }_{K_c} along with request, proves know K_c.`
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须在请求中包含`{ timestamp }_{K_c}，证明知道 K_c。`
- en: Still vulnerable to password guessing by network sniffer at that time.
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当时仍然容易受到网络嗅探器的密码猜测攻击。
- en: 'Better alternatives are available: SRP, PAKE.'
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有更好的替代方案：SRP，PAKE。
- en: What can adversary do with a stolen ticket?
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以使用窃取的票证做什么？
- en: What can adversary do with a stolen `K_c`?
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以使用窃取的`K_c`做什么？
- en: What can adversary do with a stolen `K_s`?
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手可以使用窃取的`K_s`做什么？
- en: 'Remember: two parties share each key (and rely on it) in Kerberos!'
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记住：在Kerberos中，两方共享每个密钥（并依赖于它）！
- en: What happens after a password change if `K_c` is compromised?
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`K_c`被泄露后密码更改后会发生什么？
- en: Can decrypt all subsequent exchanges, starting with initial ticket
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以解密所有后续交换，从初始票证开始
- en: Can even decrypt password change requests, getting the new password!
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 甚至可以解密密码更改请求，获取新密码！
- en: What if adversary figures out your old password sometime later?
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果对手稍后弄清您的旧密码怎么办？
- en: If the adversary saved old packets, can decrypt everything.
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果对手保存了旧数据包，可以解密所有内容。
- en: Can similarly obtain current password.
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以类似地获取当前密码。
- en: Forward secrecy (avoiding the password-change problem).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 前向保密（避免密码更改问题）。
- en: 'Abstract problem: establish a shared secret between two parties.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 抽象问题：在两方之间建立共享秘密。
- en: 'Kerberos approach: someone picks the secret, encrypts it, and sends it.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos 方法：某人选择秘密，加密并发送。
- en: 'Weakness: if the encryption key is stolen, can get the secret later.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弱点：如果加密密钥被窃取，可以稍后获取秘密。
- en: 'Diffie-Hellman key exchange protocol:'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Diffie-Hellman 密钥交换协议：
- en: Two parties pick their own parts of a secret.
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两方选择自己的秘密部分。
- en: Send messages to each other.
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互发消息。
- en: Messages do not have to be secret, just authenticated (no tampering).
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息不必保密，只需经过身份验证（无篡改）。
- en: Two parties use each other's messages to reconstruct shared key.
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两方使用彼此的消息重建共享密钥。
- en: Adversary cannot reconstruct key by watching network messages.
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对手无法通过观察网络消息重建密钥。
- en: 'Diffie-Hellman details:'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Diffie-Hellman 的细节：
- en: Prime p, generator g mod p.
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 素数 p，生成器 g mod p。
- en: Alice and Bob each pick a random, secret exponent (a and b).
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alice 和 Bob 各自选择一个随机的、秘密的指数（a 和 b）。
- en: Alice and Bob send (g^a mod p) and (g^b mod p) to each other.
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alice 和 Bob 向彼此发送（g^a mod p）和（g^b mod p）。
- en: Each party computes (g^(ab) mod p) = (g^a^b mod p) = (g^b^a mod p).
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个参与方计算（g^(ab) mod p）=（g^a^b mod p）=（g^b^a mod p）。
- en: Use (g^(ab) mod p) as secret key.
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用（g^(ab) mod p）作为秘密密钥。
- en: Assume discrete log (recovering a from (g^a mod p)) is hard.
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设离散对数（从（g^a mod p）中恢复 a）很困难。
- en: Cross-realm in Kerberos.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Kerberos 中的跨域。
- en: Shared keys between realms.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 领域之间共享密钥。
- en: Kerberos v4 only supported pairwise cross-realm (no transiting).
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos v4 仅支持成对的跨域（无过境）。
- en: What doesn't Kerberos address?
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Kerberos 不能解决什么问题？
- en: Client, server, or KDC machine can be compromised.
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端、服务器或 KDC 机器可能会受到威胁。
- en: Access control or groups (up to service to implement that).
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问控制或组（由服务实现）。
- en: Microsoft "extended" Kerberos to support groups.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软“扩展”了 Kerberos 以支持组。
- en: Effectively the user's list of groups was included in ticket.
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上用户的组列表包含在票据中。
- en: 'Proxy problem: still no great solution in Kerberos, but ssh-agent is nice.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理问题：Kerberos 中仍然没有很好的解决方案，但 ssh-agent 很好。
- en: Workstation security (can trojan login, and did happen in practice).
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作站安全性（可以木马登录，并且实际上确实发生过）。
- en: Smartcard-based approach hasn't taken off.
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于智能卡的方法并没有起飞。
- en: Two-step authentication (time-based OTP) used by Google Authenticator.
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌身份验证器使用的两步验证（基于时间的 OTP）。
- en: 'Shared desktop systems not so prevalent: everyone has own phone, laptop, ..'
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享桌面系统并不那么普遍：每个人都有自己的手机、笔记本电脑，..
- en: Follow-ons.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 后续步骤。
- en: Kerberos v5 fixes many problems in v4 (some mentioned), used widely (MS AD).
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos v5 修复了 v4 中的许多问题（一些被提及），被广泛使用（MS AD）。
- en: OpenID is a similar-looking protocol for authentication in web applications.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenID 是一个类似的协议，用于 Web 应用程序的身份验证。
- en: Similar messages are passed around via HTTP requests.
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 HTTP 请求传递类似的消息。
