- en: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P15：L5- JavaScript编程全解
    1 (事件，变量) - ShowMeAI - BV1gL411x7NY
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛CS50-WEB｜基于Python／JavaScript的Web编程(2020·完整版) - P15：L5- JavaScript编程全解 1 (事件，变量)
    - ShowMeAI - BV1gL411x7NY
- en: '![](img/d315d39c166a1ed66d879ee4eabaead9_0.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d315d39c166a1ed66d879ee4eabaead9_0.png)'
- en: '[Music]。![](img/d315d39c166a1ed66d879ee4eabaead9_2.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[音乐]。![](img/d315d39c166a1ed66d879ee4eabaead9_2.png)'
- en: okay welcome back everyone to web，programming with Python and JavaScript。and
    today we turn our attention to the，second of the main programming languages。![](img/d315d39c166a1ed66d879ee4eabaead9_4.png)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，欢迎大家回到Python和JavaScript的网络编程课程。今天我们将注意力转向第二种主要编程语言。
- en: that would be looking under this class，in particular JavaScript and to get an。understanding
    for why it is that，JavaScript is actually helpful let's go。back and revisit this
    diagram of what，communication over the Internet will。generally look like oftentimes
    we'll，have a user otherwise known as the。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重点关注这一类，特别是JavaScript，为了理解JavaScript实际上是如何有帮助的，我们回顾一下关于互联网通信的图示。
- en: client using their computer on their web，browser whether that's Chrome or Safari。or
    some other web browser that sends an，HTTP request a web request to some sort。of
    web server that server then processes，that request and then returns some sort。of
    response that comes back to the，client thus far all of the code that。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我们会有一个用户，也称为客户端，他们使用计算机上的网页浏览器，无论是Chrome还是Safari，或者其他网页浏览器，向某种网页服务器发送HTTP请求。该服务器处理请求，然后返回某种响应，返回给客户端。到目前为止，所有的代码。
- en: we've written the Python web application，code running in a Django web application。for
    example has all been code that runs，on some sort of server code that is。listening
    for requests doing some，computation in order to process that。request and then
    generating some sort of，response usually in the form of an HTML。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编写了Python网络应用程序，代码在Django网络应用程序中运行。例如，所有代码都在某种服务器上运行，该服务器正在监听请求，进行一些计算以处理该请求，然后生成某种响应，通常以HTML的形式。
- en: template that we then send back to the，client what JavaScript is going to。enable
    us to do is to begin to write，client-side code javascript is going to。allow us
    to write code that actually，runs and inside of the users web browser。on the client
    and this can be useful for，a number of reasons one if there's。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript将使我们能够开始编写客户端代码，JavaScript将允许我们编写实际在用户的网页浏览器中运行的代码。这对于多个原因都很有用，首先如果有。
- en: computation that we want to do but we，don't need to go out and reach out to
    a。server in order to do so we can do the，computation potentially faster just by。running
    the code exclusively on the，client and in addition to that we can。begin to make
    our web pages a whole lot，more interactive javascript is going to。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要进行的计算，但不需要去服务器进行计算，我们可以仅通过在客户端独立运行代码来更快地进行计算。此外，我们可以开始使我们的网页更具互动性，JavaScript将会。
- en: give us the ability to directly，manipulate the Dom where again the Dom。is the
    document object model that tree，like hierarchy that represents the web。page that
    the user happens to be looking，at so javascript will enable us to write。code that
    directly manipulates the，content on the web page and we'll see。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: HTML页面仅描述页面的结构，并在这方面提供了直接操作DOM的能力。DOM是文档对象模型，代表用户所查看的网页的树状层次结构，因此JavaScript将使我们能够编写代码，直接操作网页上的内容，我们将看到。
- en: how that can be quite powerful very soon，so how do we then use JavaScript inside。of
    a web page in order to add some code，add some programming logic to a web page。well
    so far we've already seen HTML the，language we use to describe the，structure of
    a web page。where a HTML page just describes the，structure of a page and in terms
    of。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这很快就会变得非常强大。那么，我们如何在网页中使用JavaScript以添加一些代码，增加一些编程逻辑呢？到目前为止，我们已经看到了HTML，这是一种描述网页结构的语言。
- en: nested tags we had those head tags at，the top of the page the body tags that。describe
    the structure of the page and，then additional tags that could be。nested within
    those and in order to add，JavaScript to a web page if it's as，simple as include。some
    script tags that are often located，inside of the HTML page itself when we。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套标签，我们在页面顶部有那些头标签，描述页面结构的主体标签，以及可以嵌套其中的其他标签。为了将JavaScript添加到网页中，只需包含一些通常位于HTML页面内部的脚本标签。
- en: use these script tags we're telling the。![](img/d315d39c166a1ed66d879ee4eabaead9_6.png)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用这些脚本标签来告诉网页。![](img/d315d39c166a1ed66d879ee4eabaead9_6.png)
- en: browser that anything in between these，script tags should be interpreted in。this
    case as JavaScript code that the，web browser is then going to execute so。our very
    first program for example might，just look like a line of code inside of。the script
    tags something like this，where alert for example is the name of a。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器中，这些脚本标签之间的任何内容都应该被解释为JavaScript代码，网页浏览器将执行。因此，我们的第一个程序，例如，可能看起来像是脚本标签内部的一行代码，类似于这样，其中alert就是一个。
- en: function a function that's going to，produce an alert and then just as with。functions
    in Python functions in，JavaScript can take arguments so in。between these parentheses
    we have an，argument something like a string hello。world the text that we would
    like to。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个函数将会产生一个警报，和Python中的函数一样，JavaScript中的函数也可以接收参数，所以在这对括号之间，我们有一个参数，类似于字符串“你好，世界”，这是我们希望使用的文本。
- en: '![](img/d315d39c166a1ed66d879ee4eabaead9_8.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d315d39c166a1ed66d879ee4eabaead9_8.png)'
- en: display to the user so let's go ahead，and give this a try and see how we can。actually
    use this code to write，JavaScript that is going to run inside。of the user's web
    browser I'll go ahead，and create a new file that will call。hello HTML and inside
    of it I'll include，the same basic HTML structure that we've。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 向用户显示，所以我们来试试看，看看我们如何实际上使用这段代码来编写将运行在用户网页浏览器中的JavaScript。我将创建一个新文件，称为hello.html，并在其中包含我们已经使用的基本HTML结构。
- en: already seen before where I have a head，section that has a title and then a
    body。that maybe just says hello for example，and so now what I'd like to do is
    add a。little bit of JavaScript to this web，page so in the head section of my web。page
    I'm gonna go ahead and add a script，tag we're in between these script tags。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 之前已经见过的地方，我有一个头部部分，其中有一个标题，然后一个主体，可能只说“你好”，例如，现在我想在这个网页中添加一点JavaScript，所以在我的网页头部部分，我要添加一个脚本标签，在这对脚本标签之间。
- en: now I can write JavaScript code code，that is going to be written in。JavaScript
    that will run inside of the，web browser when the user actually opens。up this page
    and for now I'll just say，alert and then hello world it turns out。in JavaScript
    you can use either single，quotation marks or double quotation。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我可以编写JavaScript代码，这些代码将在用户实际打开这个页面时在网页浏览器中运行。现在我只需说alert，然后“你好，世界”，事实证明，在JavaScript中你可以使用单引号或双引号。
- en: marks in order to represent strings and，I'll generally use single quotation。marks
    here just by convention so here，I'm running a function called alert。that's going
    to display an alert，something like hello world to the user。and that's going to
    be inside of the。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 引号用于表示字符串，我通常在这里使用单引号，这只是一个惯例。所以在这里，我正在运行一个名为alert的函数，它将向用户显示一个类似于“你好，世界”的警报，这将在。
- en: '![](img/d315d39c166a1ed66d879ee4eabaead9_10.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d315d39c166a1ed66d879ee4eabaead9_10.png)'
- en: script tags of this HTML page so now if。![](img/d315d39c166a1ed66d879ee4eabaead9_12.png)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/d315d39c166a1ed66d879ee4eabaead9_12.png)'
- en: I want to actually open the page up I，can open hello dot HTML or you could。just
    visit it inside of your web browser，whether it's Chrome or something else。and
    now at the top of the page what，you'll notice is that I get a little bit。of an
    alert some interaction where it，says this page says hello world and。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我想实际打开页面，我可以打开hello.html，或者你可以直接在你的网页浏览器中访问，无论是Chrome还是其他浏览器。而现在在页面顶部，你会注意到我得到了一个小警报，一些互动，显示这个页面说“你好，世界”。
- en: gives me an option to like press a，button for example like Hello I'd like。the
    OK button that'll say all right，dismiss the alert now，and this is our very first
    example of。JavaScript we have a function called，alert built into JavaScript for
    our web。browser and our web browser knows that，when we call the alert function
    the。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我选择一个选项，比如按下一个按钮，例如“你好，我想要”。确认按钮会显示“好的，关闭警报”，这是我们第一个**JavaScript**示例，我们有一个名为`alert`的内置函数在JavaScript中，用于我们的网页浏览器，并且我们的网页浏览器知道，当我们调用alert函数时。
- en: browser should display an alert message，that looks a little something like that。and
    if i click the ok' button to dismiss。![](img/d315d39c166a1ed66d879ee4eabaead9_14.png)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器应该显示一个看起来像这样的警报消息，如果我点击“确定”按钮以关闭。![](img/d315d39c166a1ed66d879ee4eabaead9_14.png)
- en: the alert then we go ahead and get back，the original page that i had from the。beginning
    and so now we can begin to，imagine that using this ability to。programmatically
    display alerts that we，can add additional features to our。applications as well
    and one big area，where javascript can be quite powerful。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 警报，然后我们返回到最开始的原始页面，因此现在我们可以开始想象，利用这种能力来以编程方式显示警报，我们可以为我们的应用程序添加其他功能，而JavaScript可以非常强大。
- en: is with isn't driven programming and，what event-driven programming is all。about
    is thinking about things that，happen on the web in terms of events。that happen
    what are some examples of，events events are things like the user。clicks on a button
    or the user selects，something from a drop-down list or the。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 是基于事件驱动的编程，而事件驱动编程的核心就是思考在网络上发生的事情是以事件的形式发生的。事件的一些例子包括用户点击按钮或用户从下拉列表中选择某项。
- en: user Scrolls through a list or submits a，form anything the user does and can。generally
    be thought of as an event and，what we can do with javascript is add。event listeners
    or event handlers things，that say when an event happens go ahead。and run this
    particular block of code or，this function for example and using that。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 用户滚动列表或提交表单，用户的任何操作都可以一般视为事件，我们可以用JavaScript添加事件监听器或事件处理程序，这些操作会在事件发生时运行特定的代码块或函数。
- en: we can begin to allow our JavaScript，code to respond to how the user is。actually
    interacting with our web page，to say when the user clicks on a button。I would
    like to run this particular，JavaScript function for example so let's。go ahead
    and give that a try I'll go，ahead and now instead of just saying。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以开始让我们的JavaScript代码响应用户实际与网页的交互，比如当用户点击按钮时，我想运行这个特定的JavaScript函数。因此，让我们试一下，我现在要做的是。
- en: alert hello world let me put this alert，inside of a function and to create a。function
    in JavaScript you just use the，keyword function followed by the name of。the function
    I'll call the function，hello for example and then in。parenthesis any inputs that
    function，takes this hello function is not going。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 警报hello world，让我把这个警报放在一个函数里面。在JavaScript中创建一个函数，只需使用关键字function后跟函数名称，我会称这个函数为hello，然后在括号内放入任何该函数接受的输入，这个hello函数将不会。
- en: to take any input so I'll just use an，empty set of parentheses and then inside。of
    curly braces I include any of the，code that I want to run in this function。and
    so what I've done here now is create，a function called hello and then inside。of
    the curly braces have defined the，body of the function what code should。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要接受任何输入，我将使用一个空的括号，然后在花括号内包含我想在此函数中运行的任何代码。因此，我现在所做的是创建一个名为hello的函数，然后在花括号内定义了函数体应该执行的代码。
- en: run when I run the hello function and，what the hello function should do is it。should
    display an alert that in this，case says a hello world so now what I'd。like to
    do is get this function to run，when something happens on the page for。example
    when a user clicks on a button，so to do that the first thing I'll need。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 运行hello函数，hello函数应该做的是显示一个警报，在这种情况下显示“hello world”。现在我想让这个函数在页面上发生某事时运行，例如当用户点击按钮时，为此我需要的第一步。
- en: to do is actually create a button so add，a button that just says like click
    here。![](img/d315d39c166a1ed66d879ee4eabaead9_16.png)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上要做的是创建一个按钮，添加一个仅显示“点击这里”的按钮。![](img/d315d39c166a1ed66d879ee4eabaead9_16.png)
- en: for example so now if i refresh this，page i now see that i have hello and I。also
    have this button that says click，here but when I click here like nothing。![](img/d315d39c166a1ed66d879ee4eabaead9_18.png)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，现在如果我刷新此页面，我看到有hello，还有一个按钮显示“点击这里”，但当我点击时，没有任何反应。![](img/d315d39c166a1ed66d879ee4eabaead9_18.png)
- en: happens I'm clicking the click here，button but it's not changing anything。because
    I haven't yet said what should，happen when the user does click on this。button
    and so one way we could do this，is by adding an attribute to this HTML。element
    called unclick what this is，going to do is it's going to add an on。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，当我点击“点击这里”按钮时，但它没有改变任何东西，因为我还没有说明当用户点击此按钮时应该发生什么。一种方法是向此HTML元素添加一个属性，称为onclick，这将添加一个事件。
- en: click handler to this button it's going，to say what should happen when the user。clicks
    on this button and I'm going to，set the onclick attribute equal to。running the
    function hello and in order，to run a function in JavaScript just as。you ran a
    function with Python you use，the name of the function followed by a。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这个按钮的点击处理程序将说明当用户点击这个按钮时应该发生什么，我将把 onclick 属性设置为运行 hello 函数。在 JavaScript 中运行函数的方法与在
    Python 中运行函数的方法一样，你使用函数名后跟一个。
- en: set of parentheses to say go ahead and，actually run this function using this。parenthesis
    calls the function another，word for running the function and the。fact that there's
    nothing in between the，parentheses means we're not providing。anything as input
    to the hello function，though if the hello function did take。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 设置一对括号，表示去运行这个函数。使用这个括号调用函数，另一个表达运行函数的方式，括号之间没有内容意味着我们没有向 hello 函数提供任何输入，尽管如果
    hello 函数确实接受。
- en: inputs we could certainly add that in，between the parentheses so now I've tied。the
    two pieces of this page together I，have a button that says click here and。I've
    added an onclick handler that says，that when you click on the button you。should
    run the hello function and then，up above I've defined the hello function。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们当然可以在输入中添加这一点，在括号之间，所以现在我把这一页的两个部分结合在了一起。我有一个按钮，上面写着点击这里，并且我添加了一个 onclick
    处理程序，说明当你点击按钮时，应该运行 hello 函数，然后在上面我定义了 hello 函数。
- en: to say what should the hello function do，well when the function is called we're。going
    to display an alert that in this，case says hello world so now we should。be able
    to refresh the page we still see，the same thing at least initially where。it just
    says hello and a button that，tells me to click here but now if I go。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 那么 hello 函数应该做什么呢？当函数被调用时，我们将显示一个提示，这个提示在这种情况下说 hello world。现在我们应该能够刷新页面，至少最初看到相同的内容，它只是显示
    hello 和一个告诉我点击这里的按钮，但现在如果我去。
- en: ahead and click the button that says，click here well then I get the alert。that
    says this page says hello world I，can press ok and this event handler is。always
    going to work I click the button，again and I get the alert a second time。because
    every time I click the button，it's going to call the hello function。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 点击那个写着点击这里的按钮，那么我会收到一个提示，显示这个页面说 hello world。我可以按 OK，这个事件处理程序将始终有效。我再次点击按钮，我会第二次收到提示，因为每次我点击按钮，它都会调用
    hello 函数。
- en: again and when I click the hello when，the hello function runs and it is going。to
    display this particular alert so this，now appears to give us a fair amount of。power
    and much as in other programming，languages languages like Python or other。languages
    you might have worked with，JavaScript has all these same types of，language features
    so far。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，当我点击 hello，当 hello 函数运行时，它将显示这个特定的提示。所以这似乎给了我们相当大的能力，正如在其他编程语言中一样，例如 Python
    或者你可能用过的其他语言，JavaScript 拥有所有这些相同类型的语言特性。
- en: we've seen datatypes things like a，string but we also have other data types。that
    we'll take a look at soon too we've，seen functions some functions that are。built
    into JavaScript like the alert，function and other functions that we can。write
    for ourselves functions like hello，but we also have the ability to include。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经见过数据类型，比如字符串，但我们还有其他数据类型，我们也会很快查看。我们已经见过一些内置于 JavaScript 的函数，比如 alert 函数和我们自己可以编写的其他函数，比如
    hello，但我们也可以包含。
- en: things like variables inside of our，like，well I'll go ahead and create a new
    file。it will call counter HTML and counter is，going to have some of the similar
    code。to hello so I'll just go ahead and copy，it for now but I'll clear out the
    script。section change the title from hello to，counter and now inside I'll get
    rid of。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 比如在我们的代码中使用变量。我会创建一个新文件，它将被称为 counter.html，counter 将有一些类似于 hello 的代码，所以我现在就复制过来，但我会清除脚本部分，把标题从
    hello 改为 counter，现在我会去掉。
- en: the button or actually I'll keep the，button but instead of saying click here。the
    button is going to say count I'd，like to create a program that just。counts for
    me from zero to one two two，three four so on and so forth and now in。order to
    do that in order to have some，way of counting repeatedly zero one two。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我会保留这个按钮，但它不再说点击这里，而是会说计数。我想创建一个程序，简单地从零开始计数到一、二、三、四等等。为了做到这一点，我们需要某种重复计数的方法：零、一、二。
- en: three four five I'm going to need a have，some sort of variable inside of my。program
    something that is keeping track，of data like the number that I'm。currently have
    counted to so in order to，do that in JavaScript I can say。something like let counter
    equal zero，this is the way in JavaScript that I。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 三、四、五，我需要在我的程序中有某种变量，跟踪数据，比如我当前计数到的数字。为了做到这一点，在JavaScript中我可以说，let counter等于0，这就是在JavaScript中我。
- en: define a new variable I first say let，counter meaning let there be a new。variable
    called counter and I'm going to，initially set the value of counter equal。to the
    number zero and now when I click，on the button instead of running the。hello function
    I'm going to go ahead and，run the count function which doesn't。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个新变量时，我首先说let counter，意思是让有一个新的变量叫做counter，我将初始设置计数器的值为数字0。现在当我点击按钮时，不再运行hello函数，而是运行count函数。
- en: exist yet but I'll now write it I'll，define a function called count and what。the
    count function is going to do is it，is going to first increment the value of。counter
    and a number of ways I could do，that one is my saying counter equals。counter plus
    one to say go ahead and，reset the value of counter to whatever。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 还不存在，但我现在会写一个，我会定义一个名为count的函数，这个count函数首先会增加计数器的值。我可以用几种方式做到这一点，其中一种是说counter等于counter加1，表示继续重置计数器的值为。
- en: it counter is plus one and there are a，couple of shorthand notations for this
    I。could equivalently say counter plus，equals one to say add one to the counter。or
    in the case of adding one javascript，much like languages like c if you've。seen
    them before and support notation，like this counter plus plus which just。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果计数器加1，并且还有几种简写方式。我可以等价地说counter加等于1，表示对计数器加1，或者在添加1的情况下，JavaScript与像C这样的语言类似，如果你以前见过它们，支持这样的写法，counter加加。
- en: means take the value of counter and，increment it add 1 to it，so I'll add 1 to
    the value of counter。and then I'll just display an alert，that has whatever the
    current value of。counter happens to be and so I've，incremented the value of counter
    and。![](img/d315d39c166a1ed66d879ee4eabaead9_20.png)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 意思是取计数器的值，然后将其增加1，所以我会将1加到计数器的值上。接着我会显示一个警报，内容就是计数器当前的值。![](img/d315d39c166a1ed66d879ee4eabaead9_20.png)
- en: then displayed an alert that shows me，what's contained inside of counter and。so
    now if I go ahead and not go to hello，dot HTML but to counter dot HTML instead。I
    now see that I still see a button that，says count and if I click on that button。I
    get an alert that this time says one，we've incrementing the value of counter。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后显示一个警报，告诉我计数器的内容。因此现在如果我继续访问counter.html而不是hello.html，我会看到仍然有一个按钮，上面写着“计数”，如果我点击这个按钮，我会得到一个警报，这次显示的是1，我们已经增加了计数器的值。
- en: from zero to one the alert now says 1，and I can press ok if I press count。again
    the count now goes to 2 I press ok，press count again it goes to 3 and every。time
    I click count it is going to，increment the value of the variable。counter inside
    of my JavaScript webpage。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从0到1，警报现在显示1，我可以按确定，如果我再按一次“计数”，计数现在变成2，我按确定，再按一次“计数”，变成3，每次我点击“计数”，它都会增加我JavaScript网页中变量counter的值。
- en: '![](img/d315d39c166a1ed66d879ee4eabaead9_22.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d315d39c166a1ed66d879ee4eabaead9_22.png)'
- en: and then it's going to display an alert，that is going to contain the value of，that
    variable。so using alerts now we're able to，manipulate that we can inside a，functions
    manipulate the values of。variables and then display alerts that，show the contents
    of those variable ism。but ultimately when users are，interacting with the page
    it's going to。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后它会显示一个警报，里面包含那个变量的值。因此，现在使用警报，我们能够在函数内部操作变量的值，并显示显示这些变量的内容的警报。但是最终，当用户与页面交互时，它将会。
- en: be fairly annoying if the only way that，we have to interact with the user is
    via。displaying these alerts the equivalent，of like printing something out except。instead
    of printing it to a terminal，we're printing it via an alert that。appears on the
    screen what would be more，interesting and more powerful and much。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们与用户交互的唯一方式是通过显示这些警报，那将非常烦人，相当于打印一些内容，只不过不是打印到终端，而是通过在屏幕上出现的警报打印出来。更有趣且更强大、更加。
- en: more useful in the context of a webpage，is if we could programmatically update。the
    website change something about the，webpage the user is actually seeing。changing
    the content that happens to be，on the page and turns out Java Script is。going
    to enable us to do that as well，because Java Script allows us to。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在网页上下文中更有用的是，如果我们可以以编程方式更新。网站，改变用户实际看到的网页的某些内容。更改页面上发生的内容，结果是 JavaScript 将。使我们能够做到这一点，因为
    JavaScript 允许我们。
- en: manipulate the Dom the document object，model that represents all of the。elements
    that happen to be on that page，so to do that let's go ahead and return。to hello
    HTML this again was this paté，web page that just said hello and gave。me a button
    where if I clicked on that，button it would display an alert that。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 操作 DOM，即文档对象模型，表示该页面上所有的。元素，所以为此，让我们回到 hello HTML，这又是这个 paté，网页，只是说你好，并给我一个按钮，如果我点击那个，按钮，它会显示一个警告。
- en: said hello world now what I'd like to do，is instead of having the hello function。display
    an alert I'd like to have it，manipulate something on the page and。what might I
    want me to manipulate well，inside the body of the page I here have。this heading
    this heading that just says，hello for example which is inside of an。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 说你好，世界现在我想要做的是，而不是让 hello 函数。显示一个警告，我想让它，操作页面上的某些东西。我可能想要操作的是什么呢，页面的主体中，我这里有。这个标题，这个只是说，您好，例如，它在一个。
- en: h1 element and what I might like to do，is actually change，that element how can
    I do that well it。turns out that in JavaScript we have，access to a function called
    document dot。query selector and what document query，selector is going to do is
    it is going。to give us the ability to look through，an HTML page and extract an
    element out。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: h1 元素，我可能想要做的是实际更改，那个元素我该怎么做呢，结果是，在 JavaScript 中，我们可以，访问一个叫 document dot。query
    selector 的函数，document query，selector 将要做的是，它将。给我们提供能力，浏览一个 HTML 页面，提取出一个元素。
- en: of that page so that we can manipulate，that HTML element using JavaScript code。and
    so if I want to select like an h1，element I can say document query。selector and
    then as the argument the，input to document our query selector。I'll go ahead and
    say each one meaning，go through the page find me an h1。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面上，这样我们就可以使用 JavaScript 代码操作这个 HTML 元素。如果我想选择一个 h1 元素，我可以说 document query。selector，然后作为参数，输入到
    document 的 query selector。我将继续说每个一个意思，遍历页面，找到我一个 h1。
- en: element and query selector is only going，to return one element so if they're。multiple
    it's going to return the first，thing it finds but here we only have one。h1 element
    so it's ok I'm gonna say look，through this document try and find in h1。element
    and when you do I'd like to，manipulate it and the way I'd like to。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 元素，query selector 只会返回一个元素，因此如果有多个，它将返回第一个，找到的东西，但在这里我们只有一个。h1 元素，所以没问题，我要说在这个文档中查找，h1
    元素，当你找到时，我想要，操作它，我想要的方式是。
- en: manipulate it is by saying dot innerhtml，equals of let's say goodbye for example。so
    alright what's going on here well，right now initially when we first load。the page
    we have an h1 a big heading at。![](img/d315d39c166a1ed66d879ee4eabaead9_24.png)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 操作它的方法是通过说点 innerhtml，等于比如说再见。因此，好吧，这里发生了什么呢，现在，最初当我们第一次加载。页面时，我们有一个 h1，一个大的标题在。![](img/d315d39c166a1ed66d879ee4eabaead9_24.png)
- en: the top that just says hello and now，when this hello function is called which。is
    called when this button is clicked on，because it has an on-click attribute。that
    is equal to hello calling the hello，function what the hello function is。going
    to do is it's going to say，document query selector h1 find me the。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部只是说了你好，现在，当这个 hello 函数被调用时。它是在点击这个按钮时被调用的，因为它有一个 on-click 属性。这个属性等于 hello
    调用 hello 函数，hello 函数将做的是，它会说，document query selector h1 找到我。
- en: h1 element that will return this element，right here a JavaScript representation。of
    this HTML element that is just an h1，whose HTML inside of it says hello and。if
    I want to change that HTML I can do，that by modifying the inner HTML。property
    of the JavaScript elephant in，order to update a property of anything。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: h1 元素将返回这个元素，右边是这个 HTML 元素的 JavaScript 表示。它只是一个 h1，其内部的 HTML 说你好。如果我想更改那个 HTML，我可以通过，修改
    inner HTML。属性来做到这一点，更新任何东西的属性。
- en: in JavaScript will generally use this，dot notation we're dot accesses of。property
    of some particular object and，so I have this element this h1 and。saying dot inner
    HTML means take that，element and access its inner HTML。property some property
    of that object，and I would like to update its inner。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在 JavaScript 中，通常会使用 `this`，点表示法来访问某个特定对象的属性，因此我有这个元素，这个 h1，点 inner HTML 意味着获取该元素并访问其
    inner HTML 属性，我想更新它的内部。
- en: HTML to just in this case be the word，goodbye followed by an exclamation point，for
    example。so now what we'll see is that when we，run this page when we open this
    page up。as by opening up hello HTML I still see，an h1 that says hello I still
    see a。button that says click here but now when，I actually click on the button
    click，goodbye。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 在这种情况下只是单词 goodbye，后面跟着一个感叹号，例如。所以现在我们看到的是，当我们运行这个页面，打开 hello HTML 时，我仍然看到一个
    h1，上面写着 hello，仍然看到一个按钮，上面写着 click here，但现在当我点击按钮时，显示 goodbye。
- en: we've run JavaScript code that finds an，h1 element on the page and manipulates。it
    changing it to something else than it，was originally now every time I click。here
    nothing else happens because every，time I click here it's going to find the。same
    h1 and it's going to update its，HTML changing it from hello to goodbye。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经运行了查找页面上 h1 元素并操纵它的 JavaScript 代码，将它更改为与最初不同的内容，现在每次我点击这里，没有其他事情发生，因为每次我点击这里，它都将找到相同的
    h1，并将其 HTML 更新，从 hello 更改为 goodbye。
- en: so maybe what I'd really like then is，the ability to toggle back and forth to。toggle
    back and forth between hello and，goodbye rather than just change it from。one thing
    to something else every time I，click the button I'd like it to。alternate back
    and forth and there are a，number of ways you can imagine doing。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 所以也许我真正想要的是切换回和切换去的能力，而不是每次点击按钮时只是将它从一种状态改为另一种状态，我希望它交替回去，有很多方法可以想象。
- en: this but one way is by taking advantage，of conditions so much in the same way。that
    a language like Python has，conditions ifs and LS and else's。JavaScript too has
    if and else if and，else that allow us to describe。conditions such that we can
    only run。![](img/d315d39c166a1ed66d879ee4eabaead9_26.png)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过利用条件来实现，类似于像 Python 这样的语言具有条件 if 和 else。JavaScript 也有 if、else if 和 else，允许我们描述条件，以便我们只能运行特定的代码块，当某个布尔表达式为真时。
- en: certain blocks of code when a particular，boolean expression is true for example。so
    what would that look like well let's，go ahead and say inside of this hello。function
    I can ask a question if，document query selector H ones inner。HTML is equal to
    hello well then go，ahead and set it to goodbye and else。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些代码块中，当特定的布尔表达式为真时，比如说，好的，我们在这个 hello 函数中可以问一个问题，如果 document query selector
    H1 的 inner HTML 等于 hello，那就继续设置它为 goodbye，否则设置为 hello。
- en: then go ahead and update the inner HTML，this h1 element go ahead and set it
    to。![](img/d315d39c166a1ed66d879ee4eabaead9_28.png)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然后继续更新这个 h1 元素的 inner HTML，继续设置它为。
- en: hello instead so what is this hello，function doing it's now a little bit，more
    sophisticated。it now has a condition where I say if，the keyword if followed by
    in。parentheses the condition that I want to，check for the thing I want to see
    is。this true or not and what I'm checking，for is is let me run document out query。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 hello 函数在做什么？现在它更复杂了，它有一个条件，我说 if，关键字 if 后面跟着我想要检查的条件，我想看看这个条件是否为真，我在检查的是让我运行
    document query。
- en: selector h1 which again looks through，the page finds me the h1 tag and get to。that
    element for me if I look at that，inner HTML if it is equal to hello then。I want
    to do something and this triple，equals sign，is JavaScript's way of checking for。strict
    equality checking to make sure，the two values are equal and also that。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器 h1 通过页面查找 h1 标签并为我获取该元素，如果我查看该 inner HTML，如果它等于 hello，那么我想做某件事，而这个三重等号是
    JavaScript 检查严格相等的方式，以确保这两个值是相等的，并且类型也是相同的。
- en: their types are the same thing that if，this is a string this must also be a。string
    it turns out in JavaScript is，also a weaker way to check for equality。that just
    uses two equal signs and that，is going to check the values are the。same but it's
    going to allow for a bit，of differences in type the two things。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 它们的类型是相同的，如果这个是一个字符串，这也必须是一个字符串，结果表明在 JavaScript 中，还有一种较弱的检查相等的方法，只使用两个等号，这会检查值是否相同，但允许在类型上有一些差异。
- en: might have different types but so long，as they're basically the same value the。double
    equal sign might generally come，to be true usually if you can you'll。want to use
    this triple equal sign the，strict equality to make sure that not。only are the
    types the same but the，values are the same too and the triple。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有不同类型，但只要它们的基本值相同，双等号通常会返回 true。通常如果可以，你会想使用这个三重等号，严格相等，确保类型和数值都相同，而这个三重。
- en: equal sign will check both of those，things so if I go ahead and find the h1。element
    and its inner HTML is the word，hello well then go ahead and find the h1。element
    and update its inner HTML，setting it equal to goodbye for example。and else go
    ahead and find that same h1，element updated inner HTML set it equal。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 等号会检查这两件事。因此，如果我找到 h1 元素并且它的内部 HTML 是“你好”，那么请继续找到 h1 元素并更新它的内部 HTML，将其设置为“再见”，例如，否则继续找到同样的
    h1 元素，更新内部 HTML 设置为。
- en: to hello and again just as in functions，where we use these curly braces to。enclose
    the body of the function all of，the lines of code that are inside of the。function
    JavaScript does the same thing，to that inside of a condition when we。want to express
    that this is inside the，body of an if condition I can use curly。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，再次就像在函数中一样，我们使用这些花括号来包裹函数的主体，所有位于函数内部的代码行，JavaScript 在条件内部做了同样的事情，当我们想要表示这在
    if 条件的主体内部时，我可以使用花括号。
- en: braces to say this line of code in that，line of code that's inside of the if。expression
    or that's inside of the else，expression for example so let's go ahead。and try
    this now I can go ahead and open，hello dot HTML，refresh it it currently says hello
    with。a button that says click here and now，when I click here hello changes to。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 花括号来表示这一行代码和那一行代码位于 if 表达式内部或位于 else 表达式内部。例如，让我们现在试一下，我可以打开 hello.dot HTML，刷新一下，当前显示“你好”和一个按钮，上面写着“点击这里”，现在，当我点击这里时，“你好”会变成。
- en: goodbye and when I click here again，goodbye changes back to hello and every。time
    I click the button it's going to，alternate between hello and goodbye。because we
    either get caught in the if。![](img/d315d39c166a1ed66d879ee4eabaead9_30.png)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: “再见”，而当我再次点击这里时，“再见”又会变回“你好”，每次我点击这个按钮，它将会在“你好”和“再见”之间交替。因为我们要么在 if 中被捕获。![](img/d315d39c166a1ed66d879ee4eabaead9_30.png)
- en: expression or we get caught in the else，expression now there are a couple of。places
    where you might look at this and，notice that maybe this isn't as。efficient as
    this code could potentially，be and recall that every time we run。document query
    selector to say go ahead，and try and find a particular HTML。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式，或者我们被捕获在 else 表达式中。现在有几个地方你可能会看到这一点，并注意到这段代码的效率可能没有那么高。请记住，每次我们运行 document.querySelector
    时，都会说“去查找一个特定的 HTML”。
- en: element for me it's going to look，through that page trying to find the h1。element
    and it turns out that right now，we have three separate calls to query。selector
    even though only two of them，will ever run on any given instance of，the function
    but we。document a query selector then we call，it again inside of the if expression
    we。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对我而言，它会在该页面上查找 h1 元素，结果现在我们有三次对 querySelector 的调用，尽管在任何给定的函数实例中，只有两个会运行。但我们
    document.querySelector，然后在 if 表达式内部再次调用它。
- en: can probably improve the design of this，page by factoring that out by just。looking
    for the h1 element once and then，manipulating it and checking it using。that element
    that we have found and to，do that we can store an element inside。of a variable
    in the same way that a，variable can store a number like a。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过提取出来来改善这个页面的设计，先查找一次 h1 元素，然后使用我们找到的元素进行操作和检查。为此，我们可以以变量存储一个元素，方式与变量存储数字相同。
- en: counter or a string like hello world it，can also store other values like an
    HTML。element that we get back from document，dog query selector so I could say。something
    like let heading we're heading，is just the name of a variable the equal。to document
    query selector h1 for，instance find the h1 element save it。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 计数器或像“你好，世界”这样的字符串，它还可以存储其他值，比如从 document.querySelector 获取的 HTML 元素。因此，我可以说一些类似于
    let heading，heading 只是变量的名称，等于 document.querySelector h1，例如，找到 h1 元素并保存它。
- en: inside of a variable called heading and，now rather than document query selector。each
    one all the time I can just say if，the headings inner HTML is hello，bye。otherwise
    I set the headings inner HTML，to hello，so I've improved the efficiency of the。program
    but also reduce the number of，characters of code that I've had to。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个名为heading的变量内，现在不再每次都使用文档查询选择器。我可以简单地说，如果heading的inner HTML是你好，再见。否则，我将heading的inner
    HTML设置为你好，因此我提高了程序的效率，也减少了我必须写的代码字符数。
- en: write my lines are now much shorter a，little bit easier to read this we would。consider
    to be an improvement in design，and it turns out there's one other。improvement
    we can make here too that we，can define a variable like let something。equal something
    else but it turns out，that JavaScript gives us a couple of。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我的代码行现在短得多，更容易阅读，我们会认为这是设计上的改进，结果发现这里还有一个其他的改进，我们可以像让某物等于其他东西一样定义变量，但事实是JavaScript给了我们几个。
- en: ways to define a variable and if we're，going to be creating a variable whose。value
    is never going to change we're，never going to reassign the variable。name to something
    else then instead of，let we can enforce that it's never going。to change by calling
    it a Const variable，so Const heading equals document query。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 定义变量的方法，如果我们要创建一个值永远不会改变的变量，我们就不会将变量名重新分配给其他东西，那么我们可以通过将其称为常量来强制它永远不会改变，所以常量heading等于文档查询。
- en: selector h1 means I am going to create a。![](img/d315d39c166a1ed66d879ee4eabaead9_32.png)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器h1意味着我将创建一个。![](img/d315d39c166a1ed66d879ee4eabaead9_32.png)
- en: variable called heading setting it equal，to the result of document query selector。h1
    and never again will I change what，heading is equal to I will never have。another
    line of code that says heading，equals something else because it is。constant and
    JavaScript will then，enforce that this variable should not。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为heading的变量，将其设置为文档查询选择器h1的结果，之后我将不再改变heading的值，我不会再有一行代码说heading等于其他东西，因为它是常量，JavaScript将强制这个变量不应该。
- en: change and if ever I do try to change it，javascript will give me an error and。this
    can just be helpful to prevent，against possible unintended behavior。that if you
    know you have a variable it，is never going to change it's often good。designed
    to label it as a constable so，your code，know that that is never going to have
    a。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 改变它，如果我真的尝试改变它，javascript会给我一个错误。这可以帮助防止潜在的意外行为。如果你知道一个变量是永远不会改变的，通常最好把它标记为一个常量，这样你的代码就知道它永远不会有变化。
- en: value that gets changed later on so this，then will behave the same way where
    it。says hello but I can toggle it back and，forth changing it to goodbye and then。![](img/d315d39c166a1ed66d879ee4eabaead9_34.png)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 之后改变的值，所以这将以相同的方式表现，它说你好，但我可以来回切换，将其改为再见并。![](img/d315d39c166a1ed66d879ee4eabaead9_34.png)
- en: changing it back to hello again and so，now using this ability this ability to。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 再次将其改回你好，因此现在利用这种能力。
