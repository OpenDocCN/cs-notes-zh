- en: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P22：L7- 测试与前端CI／CD 2 (selenium，CI／CD)
    - ShowMeAI - BV1gL411x7NY
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P22：L7- 测试与前端CI／CD 2 (selenium，CI／CD)
    - ShowMeAI - BV1gL411x7NY
- en: can you actually feel confident in those，changes themselves so now let's take。this
    idea of using unit tests to be able，to write these tests that verify that a。function
    works and apply it to something，like a web application like a web。application
    written in Jango that we，would like to now use in order to be。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否能够对这些更改本身感到自信，所以现在让我们采取这个想法，使用单元测试来编写这些测试，验证一个。函数是否有效，并将其应用于像Jango这样的网站应用程序。我们现在希望使用它来进行。
- en: able to test to make sure that various，different functions inside of our Jango。web
    application work as well so what I'm，gonna do is actually take a look at the。airline
    program that we wrote back when，we were first talking about Jango and。force talking
    about storing data inside，of databases and I'm going to open up。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 能够测试我们Jango网络应用程序中各种不同功能是否正常工作，所以我打算实际查看一下。我们在第一次讨论Jango时写的航空公司程序，讨论存储数据在数据库中的方式，我将打开。
- en: models pi where you see that I've made，one addition to our definition of a。flight
    and recall from before when we，first introduced this idea of defining a。model
    inside of our application for a，flight inside of an airline we gave that。model
    three properties it had an origin，and a destination where both origin and。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 模型pi，你会看到我对我们定义的航班做了一些补充，回想一下之前我们首次介绍这个定义航班模型的想法。我们在航空公司中给这个模型三个属性，一个出发地和一个目的地，出发地和目的地都是。
- en: destination referenced an airport object，where an airport object was an object
    we。defined separately but a flight has an，origin Airport and a destination Airport。and
    in addition to that every flight has，a duration some number of minutes long。that
    that flight is going to last and I，might like to have some way to validate。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 目的地引用了一个机场对象，机场对象是我们单独定义的对象，而航班有一个出发机场和一个目的机场。此外，每个航班都有一个持续时间，以分钟为单位，表示航班将持续的时间，我可能希望有某种方式来验证。
- en: to verify that a flight is a valid，flight that there isn't some error。somewhere
    in how the data was entered，into the database I would like to just。generally make
    sure that given a flight，I can check to make sure。it's a valid flight and what
    does it，mean for a flight to be valid well in。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '验证航班是否有效，确保数据录入到数据库时没有错误。我想一般确保给定一个航班，我可以检查确保。它是一个有效航班，那么航班有效意味着什么呢？ '
- en: general given these particular fields，I'll say there are two things that need。to
    be true for a flight to be valid the，different，that's condition number one it
    wouldn't。make sense to have a flight whose origin，and destination are the same
    Airport and。condition number two the duration of the，flight needs to be greater
    than zero。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，对于这些特定字段，我会说，有两件事情需要为航班有效。条件一，出发地和目的地不应该是同一个机场。条件二，航班的持续时间需要大于零。
- en: minutes if ever the duration is zero or，the duration is negative that probably。indicates
    to me that there was some sort，of mistake in data entry or some problem。that happened
    with how it is that these，flights were configured so I want to。make sure that
    the duration is greater，than zero and those then are my two。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果持续时间为零或持续时间为负数，那可能表示数据录入时有某种错误，或者这些航班的配置出现了问题。所以我想确保持续时间大于零，这就是我的两个条件。
- en: conditions for what makes a valid flight，and I've in fact written a function
    here。called is valid flight that just works，on this flight class that simply checks。given
    a flight make sure that it is in，fact valid and the way it's doing that。is by
    checking for these two conditions，that I've just described it's checking。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有效航班的条件，我实际上在这里写了一个函数。叫做is valid flight，它在这个航班类上工作，简单地检查。给定一个航班，确保它在，事实上是有效的，而它的检查方式。是通过检查这两个条件，我刚刚描述的内容。
- en: to make sure that the origin is not，equal to the destination it's checking。to
    make sure that the duration of the，flight is greater than or equal to zero。and
    maybe I should change that to，greater then to make sure it's entirely。positive
    but this then is my definition，for what it means for something to be a。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 确保出发地不等于目的地，它正在检查。确保航班的持续时间大于或等于零。也许我应该把这个改为，确保它完全为正数，但这就是我对什么是有效航班的定义。
- en: valid flight and what I'd like to do now，is test these various different parts
    of。my application I have this is valid，flight function inside a flight that I。might
    like to test as well but we also，have all of these other properties that。I would
    like to test these relationships，that a flight has an origin and a。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的航班，以及我现在想要做的是测试我应用程序的这些不同部分。我有这个有效的航班功能，可能也想测试一下，但我们还有其他所有属性，我想测试这些关系，航班有一个出发地和一个。
- en: destination we have passengers that can，be associated with flights so there's。lots
    of relationships between my data，that I would like to test and verify to。make
    sure they work the way we would，expect it to so to do that whenever we。create
    an application in Django like，this flights application here we were。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 目的地，我们有乘客可以与航班关联，所以我的数据之间有很多关系，我想测试和验证，以确保它们按照我们期望的方式工作。因此，每当我们创建像这样的Django应用程序时，例如这个航班应用程序。
- en: also given this test dot PI file and we，haven't yet used the test pilot v phone。file
    for anything but what it's supposed，to be used for is for writing these。sorts
    of tests testing that verifies，that our application behaves the way。that we want
    it to behave so let's go，ahead now and open up test stop by and。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 还提供了这个test.py文件，我们还没有使用test pilot v phone文件进行任何操作，但它的用途是编写这类测试，以验证我们的应用程序按我们希望的方式运行。那么现在让我们打开test.py。
- en: see what happens to be in here what we，can do is we can define a subclass of。test
    case which behaves very similar to，unit test ins based on that same idea。I'll
    define a new class called flight，the，tests that I would like to run on my。flight's
    application it's the things to，know about this is that first I might。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这里有什么，我们可以做的是定义一个测试用例的子类，它的行为与基于相同思想的单元测试非常相似。我将定义一个新类，叫做航班，测试我想在我的航班应用程序上运行的测试，首先我可能要知道的是。
- en: need to do some initial setup in order，to make sure that there's some data that。I
    can actually work with and test with，and what Jango will do when I go ahead。and
    run these unit tests is that it will，create an entirely separate database for。me
    just for testing purposes that we，have one database that contains all the。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 需要进行一些初始设置，以确保有一些数据可以让我实际操作和测试，而当我继续运行这些单元测试时，Django会为我创建一个完全独立的数据库，仅用于测试目的，我们有一个包含所有数据的数据库。
- en: information that actually pertains to，the flights that are actually there on。my
    web server but we might also like to，just test things with some dummy flights。and
    some dummy airports just to make，sure that things are working and then。once we're
    confident things are working，then we can deploy our web application。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息实际上与我网站服务器上存在的航班有关，但我们也可能希望用一些虚拟航班和一些虚拟机场进行测试，以确保一切正常，然后一旦我们对事情的运行感到放心，就可以部署我们的Web应用程序。
- en: to let actual users begin to use，whatever new features we've added to the。web
    application for example so inside of，this database I might need to do some。initial
    setup and I can do so by，defining a setup function inside of my。test case class
    this is a special，function and Jango knows that when it's。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让实际用户开始使用我们为Web应用程序添加的任何新功能。例如，在这个数据库中，我可能需要进行一些初始设置，我可以通过在我的测试用例类中定义一个设置函数来实现，这是一个特殊的函数，Django知道。
- en: running these tests it should first do，any of the setup steps that we need to。do
    and so how are we doing this well，what we're doing is inside of the setup。we're
    going to just add some sample data，into the test database again this won't。touch
    the database that users actually，see and actually interact with this is。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这些测试时，它应该首先执行我们需要的任何设置步骤。那么我们是如何做到这一点的呢？我们在设置中将添加一些示例数据到测试数据库中，这不会触及用户实际看到和互动的数据库。
- en: just our test one for testing purposes，and we'll start by going ahead and。creating
    some airports so Airport，objects create and then specifying what。the values for
    these fields should be，AAA，for city a and an airport whose code is。BBB for city
    be just dummy airport names，they're not real airports but just use。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 仅用于测试目的的测试版本，我们将开始创建一些机场，因此创建机场对象，然后指定这些字段的值，城市A的代码是AAA，城市B的代码是BBB，这些只是虚拟机场名称，它们并不是真实的机场，而是使用。
- en: for testing purposes and I'll save those，Airport objects inside of these values。a1
    and a2 and beneath that what I'm，gonna do next is go ahead and create。some flights
    where I create using flight，objects don't create three different。flights one that
    goes from a1 to a2 with，the duration of 100 minutes one from a 1。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 出于测试目的，我将把这些机场对象保存在这些值 a1 和 a2 中，接下来我将创建一些航班，我使用航班对象创建，不创建三种不同的航班，一个从 a1 到 a2，持续时间为
    100 分钟，一个从 a1。
- en: to a 1 with the duration of 200 minutes，one from a1 to a2 with the duration
    of。negative 100 minutes so I have a whole，bunch of these flights now that I would。like
    to test that I would like to make，sure work in some predetermined or。expected
    way and so now if I scroll down，we can see that I have a whole bunch of。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从 a1 出发，持续时间为 200 分钟，从 a1 到 a2，持续时间为负 100 分钟，所以我现在有一大堆这些航班，我想测试这些航班，确保以某种预定或预期的方式工作，现在如果我向下滚动，我们可以看到我有一大堆。
- en: these various different tests here is，one test that just tests，the departures
    count so every airport。has access to a field called departures，which ideally should
    be like how many。flights are departing from that Airport，and I'd like to make
    sure that。departures count works the way I，expected to so here I go ahead and
    get。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些不同的测试中，有一个测试只是测试 departures count，因此每个机场都有一个名为 departures 的字段，理想情况下应该像是有多少航班从该机场出发，我想确保
    departures count 按照我预期的方式工作，因此我在这里获取。
- en: the airport whose code is AAA and now，using unit tests like syntax I would。like
    to say self dot assert equal so，assert true verifies that something is。true assert
    false verifies that，something is false assert equal verifies。that two numbers
    are equal to each other，and here I'd like to verify that a。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 代码为 AAA 的机场，现在使用单元测试类似的语法，我想说 self dot assert equal，因此 assert true 验证某件事情为真，assert
    false 验证某件事情为假，assert equal 验证两个数字相等，在这里我想验证 a。
- en: departure is dot count if I take airport，a and count how many flights are。departing
    from that Airport that that，should be three so just verifying that。that works
    and then after that if this，test passes then I can be confident that。elsewhere
    in my program if I take an，airport and call that Airport dot。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: departure is dot count 如果我拿机场 a 并计算有多少航班从该机场出发，这应该是三，所以只是验证它的工作情况，然后如果这个测试通过，我可以自信地说在我程序的其他地方，如果我获取一个机场并调用那个机场的
    dot。
- en: departures dot count I can feel pretty，confident that that is going to work
    the。way I would expect it to I can do the，same thing for arrivals get the airport。and
    assert that a done arrivals count，that that is going to be equal to the。number
    one if there's only one flight，that arrives at airport a one for，example so that
    tests these。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: departures dot count 我可以非常自信地感觉到这会按照我预期的方式工作。我可以对 arrivals 做同样的事情，获取机场并断言完成的到达数量，如果只有一班航班到达机场
    A，那么这将等于一，例如，这就是测试这些。
- en: relationships and I can also now test，the is valid flight function as well。that
    here I get my two airports a one，and A two this is the one who was code。is a a
    a this is someone whose code is，BBB I'll go ahead and get the flight。whose origin
    is a one whose destination，is a two whose duration is one hundred。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 关系，现在我也可以测试 is valid flight 函数。我得到我的两个机场 a1 和 a2，这个是代码是 a a a，这个人的代码是 BBB。我将获取起点为
    a1，目的地为 a2，持续时间为 100 的航班。
- en: and let me just assert true that this，flight is going to be a valid flight。because
    this flight is valid the origin，is different from the destination its。duration
    is some positive number of，minutes and so I should feel pretty。confident that
    this is going to be a，valid flight that I can verify by。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我断言这个航班将是一个有效的航班，因为这个航班是有效的，起点与目的地不同，持续时间是某个正数分钟，所以我应该感觉相当自信，这将是一个有效的航班，我可以通过验证。
- en: calling self dot a third true I can do，the same thing for testing for an。invalid
    flight testing for an invalid，flight because the destination is bad I。can get
    the flight Airport a one and get，the flight whose origin and destination。are both
    a one and now let me self dot，assert false say that this should not be。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 self dot a third true 我也可以对无效航班进行测试，测试一个无效航班，因为目的地是错误的。我可以获取航班机场 a1，并获取起点和终点都是
    a1 的航班，现在让我 self dot assert false，说这个不应该是。
- en: a valid flight because the origin in the，destination are the same what's the。other
    way a flight can be invalid well，if I can be invalid because of its。![](img/dfea2e7985faaf65128c8f32e58edce0_1.png)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有效的航班，因为出发地和目的地是相同的，航班的另一种无效情况是什么呢？嗯，如果航班的情况是这样的！[](img/dfea2e7985faaf65128c8f32e58edce0_1.png)
- en: duration so I could say something like，eight，and get me the flight whose origin
    is a。a one destination is a tomb but the，duration is negative 100 minutes that。was
    one of the flights as well and well，that should not be a valid flight so。I'll
    say self-doubt assert false is，valid flight because when I call it is。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 持续时间，所以我可以说八，给我出发地是A，目的地是B，但持续时间是负的100分钟，这是其中一个航班，嗯，这不应该是一个有效的航班。所以我会说**self.assertFalse(is
    valid flight)**，因为当我调用它时，确保这个函数是正确的。
- en: valid flight on that flight it shouldn't，be valid because the duration makes
    it。an invalid flight so here now I've，defined a whole bunch of tests and。they're
    more down below that we'll take，a look at in a moment as well but I've。defined
    a whole bunch of these flights，now or a bunch of these tests and now。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个航班上，它不应该有效，因为持续时间使它成为无效航班，所以现在我定义了一整堆测试，下面还有更多，我们稍后会看看，但我现在定义了一堆这样的航班，或者说是这些测试。
- en: I'd like to run them and the way that I，can run tests in Gengo is via a managed。by
    command management Piatt has a whole，bunch of different commands that we can。run
    we've seen like make migrations and，migrate and run server but one of them。as
    well is if I go into airline zero I，can say Python managed PI test that's。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我想运行它们，在Gengo中运行测试的方法是通过**manage.py**命令。**manage.py**有一堆不同的命令可以运行，我们见过像**makemigrations**、**migrate**和**runserver**，但其中一个是如果我进入**airline**，我可以说**python
    manage.py test**。
- en: just going to run all of my tests and，alright it seems that we ran ten tests。but
    two of them failed so let's go ahead，and see why do those two tests fail well。the
    way to read this is that we get this，heading any time a test failed and so we。failed
    the test invalid flight，destination function and we failed the。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我将运行我所有的测试，好的，似乎我们运行了十个测试，但其中两个失败了，所以让我们看看这两个测试为什么失败。读取方式是每当测试失败时我们会得到这个标题，因此我们失败了测试无效航班目的地函数。
- en: test invalid flight duration function，and docstrings could have helped me to。know
    what it is that these tests are，exactly doing but it seems that true is。not false
    I want to do assert that this，should not be a valid flight that it。should be false
    but for some reason，these appear to be valid flights so。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 测试无效的航班持续时间函数，文档字符串本可以帮助我了解这些测试究竟在做什么，但似乎**true**并不是**false**，我想要断言这不应该是一个有效的航班，应该是**false**，但出于某种原因，这些看起来是有效的航班。
- en: something seems wrong with is valid，flight where it's returning true when it。should
    be returning false and so this，then gives me a place to start looking I。can say
    all right let me go to is valid。![](img/dfea2e7985faaf65128c8f32e58edce0_3.png)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 有关**is valid flight**似乎有问题，它在应该返回**false**时返回了**true**，所以这给了我一个开始查找的地方。我可以说，好的，让我去看一下**is
    valid**。![](img/dfea2e7985faaf65128c8f32e58edce0_3.png)
- en: flight and make sure that function is，correct so I go back into models dot PI。I'll
    take another look at is valid，flight maybe I'll think through the。logic again
    all right I wanted to check，that self that origin is not self that。destination
    I wanted to check that the，duration is greater than or equal to。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 航班，确保这个函数是正确的，所以我回到**models.py**，再看一下**is valid flight**，也许我会再思考一下逻辑，好的，我想检查一下**self.origin**是否不等于**self.destination**，我想检查一下持续时间是否大于或等于。
- en: zero I could change this to greater them，but I don't think that's the issue。because
    my a duration was negative and，so that already should have been invalid。but the
    other thing I might realize，looking at this now is that okay the。logical connectives
    that I have used was，not the right one I want to check that。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 零，我可以把这个改为大于，但我认为这不是问题，因为我的持续时间是负的，所以这应该已经是无效的。但我可能意识到的另一件事是，我所用的逻辑连接词不对，我想检查一下。
- en: for it to be a valid flight it needs to，satisfy both of the conditions the。origin
    and the destination need to be，different and the duration of the flight。needs
    to be greater than，zero for example and here I've used or。instead of and so I
    can just change it，alright and hopefully that will fix。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要使其成为有效航班，它需要满足两个条件：出发地和目的地需要不同，航班的持续时间需要大于零。例如，这里我用了**or**而不是**and**，所以我可以简单地更改它，希望这样能修复问题。
- en: '![](img/dfea2e7985faaf65128c8f32e58edce0_5.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfea2e7985faaf65128c8f32e58edce0_5.png)'
- en: things and to verify as much I can rerun，Python managed PI test go ahead and。press
    return it's going to check things，that ran ten tests everything is OK and。alright
    it seems that now I have passed，all of these tests and notice here at。the top
    it created a test database so it，just created a test database for me in。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一些事情并尽可能多地验证。我重新运行了Python的管理测试，继续按回车键，它将检查已运行的十个测试，一切正常。看起来现在我已经通过了所有这些测试，并且注意到在顶部它创建了一个测试数据库，因此它刚为我创建了一个测试数据库。
- en: order to do all this testing work and，then it destroyed that test database at。the
    end as well so none of my tests of，I'm adding data removing data it's not。going
    to touch any of the actual data，inside of my database for the web。application
    Jango will take care of the，process of keeping all of that separate。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成所有这些测试工作，然后在最后销毁那个测试数据库，因此我的测试中添加或删除数据都不会触及Web应用程序数据库中的任何实际数据，Django将处理将所有这些保持分开的过程。
- en: for me by first calling that setup，function to make sure that my new test。![](img/dfea2e7985faaf65128c8f32e58edce0_7.png)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 通过首先调用setup函数以确保我的新测试。![](img/dfea2e7985faaf65128c8f32e58edce0_7.png)
- en: database has everything that it needs to，so all right we now have the ability
    by。using unit tests to be able to test，various different functions inside of。our
    web application we first saw that we，could test a function like the is prime。function
    just a Python function that we，wrote but we can also test things like。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库拥有所需的一切，所以好吧，我们现在通过使用单元测试能够测试Web应用程序内部的各种不同函数。我们首先看到我们可以测试一个函数，比如is prime函数，这只是我们编写的一个Python函数，但我们也可以测试诸如。
- en: functions on our models like checking to，make sure that a flight is valid。checking
    to make sure that we can take a，flight and access all of the or take an。airport
    and access all of its arrivals，and all of its departures but I'd like。to do more
    than that especially for a，web application I'd like to check that。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们模型上的函数，例如检查航班是否有效，确保我们可以接受一个航班并访问所有到达和出发的机场，但我希望做的不止这些，尤其是对于一个Web应用程序，我希望检查。
- en: like particular web pages work the way，that I want them to work and so to do。that
    Gengo lets us simulate trying to，make requests and risk get responses to。a web
    application and so let's go ahead，and look at some of these other tests as。well
    here what we have is a function，called test index and what test index is。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 特定的网页按我希望的方式工作，因此为了做到这一点，Gengo让我们模拟尝试向Web应用程序发出请求并获取响应。因此，让我们继续看看其他一些测试。这里我们有一个名为test
    index的函数，test index的作用是。
- en: going to do is it's just going to test，my default flights page to make sure。that
    it works correctly so we start by，creating a client some client that's。going to
    be interacting request and，response style then I'm going to call。client get slash
    flights that is the，route that gets me the index page for。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要做的就是测试我的默认航班页面，以确保它正常工作。因此我们首先创建一个客户端，一个将要以请求和响应的方式进行交互的客户端，然后我要调用客户端的`get
    /flights`，这就是获取索引页面的路由。
- en: all the flights and I'm saving that，inside of a variable called response。whatever
    response I get back from trying，to get that page I would like to save。inside of
    this variable called response，and now I can have multiple assert。statements inside
    of the same test if I，would like to sometimes you might want。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 所有航班，我将其保存在一个名为响应的变量中。无论我从尝试获取该页面中得到什么响应，我都希望将其保存在这个名为响应的变量中，现在我可以在同一个测试中有多个断言语句，如果我愿意，有时你可能希望。
- en: to separate them but here I want，fact that the index page works and what。that
    means is a couple of things it，means that response dot status code well。that should
    be equal to two hundred two，hundred again meaning okay I want to。make sure that
    whatever response I get，back that that is going to be a two。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以便将它们分开，但在这里我想确认索引页面的工作情况，这意味着几件事，首先是响应的状态码应该等于二百，也就是表示正常。我想确保无论我收到什么响应，这将是二百。
- en: hundred and if there was some sort of，error like a 404 because the page wasn't。found
    or a five hundred because of some，internal server error I would like to。know about
    that so let me first just，assert that the status code should be。equal to two hundred
    but then Django，also lets me access the context for a。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现某种错误，比如404因为页面未找到，或500因为内部服务器错误，我想知道这一点。因此让我首先断言状态码应该等于二百，但Django也让我访问上下文。
- en: response and what is the context will，recall again in Django when we rendered。a
    template for example we called like，return render then provided the request。and
    what page we were going to render，but we could also provide some context。some
    Python dictionary describing all of，the values that we wanted to pass in to。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 响应以及上下文将再次提到，在 Django 中，当我们渲染模板时，例如我们调用像返回渲染，然后提供请求以及我们要渲染的页面，但我们也可以提供一些上下文，即描述我们希望传递的所有值的
    Python 字典。
- en: that template and Django's testing，framework gives us access to that。context
    so that we can test to make sure，that it contains what we would expect it。to contain
    and on the index page for all，my flights I would expect that to。contain a listing
    of all of the flights，and we created three sample flights。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 该模板和 Django 的测试框架使我们能够访问该上下文，以便我们可以测试确保它包含我们希望它包含的内容，在我所有航班的索引页面上，我希望看到它包含所有航班的列表，而我们创建了三条示例航班。
- en: inside of this test database so I should。![](img/dfea2e7985faaf65128c8f32e58edce0_9.png)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个测试数据库内部，我应该能够进行验证。![](img/dfea2e7985faaf65128c8f32e58edce0_9.png)
- en: be able to assert that these two things，are equal response not context flights。that
    gets me whatever was passed in as，flights in the context dot count。well that better
    be three because I want，to make sure that they're exactly three。results that come
    back when I look at，the context and access whatever happens。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 能够断言这两者是相等的响应而不是上下文航班，这将给我在上下文中传递的航班 dot count，那么它最好是 3，因为我想确保当我查看上下文并访问任何发生的内容时，结果确实是三条。
- en: to be inside of that flights key there，are other tests I can run as well so
    in。this case I've gone ahead and gotten a，particular flight the flight who in
    this。case had an origin of a1 and destination，of a1 and that was not a valid flight。we'll
    go ahead and get it anyway because，it exists in the database and now I can。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那个航班键，我还可以运行其他测试，所以在这种情况下，我已经获取了一个特定航班，这个航班在这个情况下的起点是 a1，终点也是 a1，这并不是一个有效的航班，但我们还是会获取它，因为它在数据库中存在，现在我可以。
- en: get slash flights slash that flights ID，right because on my flights page I would。like
    to be able to go to slash flights，slash one to get at flight number one。and go
    to slash flight slash to to get，at flight number two so if I take some。valid ID
    some ID of an actual flight F，and go to slash flights slash that ID。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 获取斜杠航班斜杠那个航班 ID，因为在我的航班页面上，我希望能够访问斜杠航班，斜杠一个，以获取航班号码一，并访问斜杠航班斜杠二，以获取航班号码二，所以如果我带上一些有效的
    ID，即某个实际航班 F，并访问斜杠航班斜杠那个 ID。
- en: well that should work it should have a，status code of 200，meanwhile though if
    I test an invalid。flight page this is a Django command，that will get me the maximum
    value for。the ID this ID underscore underscore max，gets me the biggest possible
    ID out of。all of the flights that happen to exist，inside of my database if I go
    ahead and。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这应该有效，它应该有一个状态码 200，然而，如果我测试一个无效的航班页面，这是一个 Django 命令，将获取 ID 的最大值，这个 ID ＿
    ＿ max，给我获取所有存在于数据库中的航班的最大 ID，如果我继续并。
- en: try and get slash flights slash max ID，plus one so a number that is one greater。than
    any of the flights that were，already inside of my database well that。shouldn't
    work there shouldn't be a page，for a flight that doesn't exist so here。then I
    can assert equal that the status，code of what comes back that that is。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试获取斜杠航班斜杠最大 ID，加一，所以一个比我数据库中已有的航班都要大一的数字，这应该不行，因为不应该存在一个不存在的航班页面，所以在这里我可以断言等于返回的状态码。
- en: equal to 404 because I would expect that，page to return a 404 and finally I
    can。also check various different contexts，for things about the passenger page
    so。in this case I've added some sample，passengers to the database so inside of。my
    test I can manipulate the database as，well adding data into the database and。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 404，因为我希望该页面返回 404，最后我还可以检查有关乘客页面的各种不同上下文，因此在这种情况下，我已向数据库添加了一些示例乘客，因此在我的测试中，我可以操纵数据库，添加数据到数据库中。
- en: checking to make sure that when you，count up the number of passengers on a。flight
    page that that is going to be，like the number 1 for example so a。number of different
    tests that we can，then write in order to verify various。different parts of our
    web application I，would like to verify not only that our。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 确保当你计算航班页面上的乘客数量时，这个数量将是，比如说 1，因此我们可以编写多种不同的测试，以验证我们网络应用程序的不同部分，我希望验证的不仅仅是我们的。
- en: database works the way we would expect，the database to work in terms of how。functions
    on our models work in terms of，relationships between those models like。the relationship
    between a flight and an，airport but we can also simulate a get。request simulating
    the request to a page，and verify that the status code that。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库按我们预期的方式工作，数据库在我们的模型功能方面是如何工作的，涉及到模型之间的关系，例如航班与机场之间的关系，但我们也可以模拟一个 GET 请求，模拟对页面的请求，并验证状态代码。
- en: comes back is what we would expect it to，be verify that the contents of the
    page。contain the right contents verify that，the context that was passed into that。template
    is correct as well and then all，of that can then be verified by saying。something
    like Python managed PI test，then go ahead and running that and we。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的内容应该是我们预期的，验证页面的内容是否包含正确的内容，验证传递给模板的上下文是否正确，然后所有这些都可以通过执行类似 Python managed
    PI test 的命令来验证，然后运行它，我们会看到在这种情况下所有测试都通过了，这意味着。
- en: see that in this case all the tests，happened to pass which means that。![](img/dfea2e7985faaf65128c8f32e58edce0_11.png)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/dfea2e7985faaf65128c8f32e58edce0_11.png)'
- en: everything seems to be ok at least for，now so this then again very helpful as。our
    web program start to get more，complex as we have multiple different。models multiple
    different routes the，ability to test to make sure that if we。change things in
    one part of the program，that it doesn't break things in another。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一切似乎都很好，至少目前是这样，因此，这在我们的网站程序变得越来越复杂时非常有用，因为我们有多个不同的模型和多个不同的路由，能够测试以确保如果我们在程序的一个部分进行更改，不会破坏另一部分的内容。
- en: part that can be quite helpful too but，we haven't yet been able to test though。is
    any interaction that's happening，exclusively in the browser that I've，been able
    to test a lot of。things that are happening server-side，and recall that Django
    is all about。working on writing this web server a，Python application that acts
    as a web。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分也非常有用，但我们还没有能够测试的部分是任何完全在浏览器中发生的交互。我已经能够测试很多在服务器端发生的事情，并且要记住，Django 完全是为了编写这个作为
    Web 的 Python 应用程序的 Web 服务器。
- en: server that listens for requests that，come in from users processes those using。these
    various different views and models，and then provides them some sort of。response
    back and we can test the，contents of that response things like。does the status
    code match what we would，expect it to does the context match what。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器监听来自用户的请求，使用这些不同的视图和模型处理这些请求，然后提供某种响应，我们可以测试该响应的内容，例如状态代码是否与我们预期的相符，内容是否匹配。
- en: we would expect it to but there's some，times where we would like to really。simulate
    like a user clicking on buttons，and trying things on a page and making。sure that
    page behaves we would like it，how we would like it to as well even if。we're not
    using Django or even if we're，just dealing with the front-end so let's。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们期望它的表现，但有时我们确实希望模拟用户点击按钮和尝试在页面上做事情，并确保该页面的行为符合我们的期望，即使我们没有使用 Django，或者即使我们仅仅处理前端。
- en: create like a sample JavaScript web page，that we might like to test now by using。these
    sorts of ideas the ability to，automate the process of testing various。different
    parts of our application to，verify that they do in fact work。correctly what I'm
    going to do now is，we'll get out of the airline directory。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个我们可能想要测试的示例 JavaScript 网页，使用这些想法，自动化测试我们应用程序各个部分的过程，以验证它们确实正常工作。现在我将退出航空公司目录。
- en: and I'm going to create a new file that，I'll call counter HTML and recall before。we
    created a counter application using，just JavaScript or what the counter。application
    did is it let me click a，button like an increase or a count。button that just increment
    to the number，1 from 0 to 1 to 2 to 3 to 4 and so。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我将创建一个新文件，称为 counter HTML，并回忆一下之前我们使用 JavaScript 创建了一个计数器应用程序，计数器应用程序的功能是让我点击一个按钮，例如增加或计数按钮，它会将数字从
    0 增加到 1，再到 2，3，4 等等。
- en: forth I'm gonna do the same thing here，we'll add a little more complexity。though
    and give myself both an increase，button to add a number and a decrease。button
    to decrease the number by one as，well so I'll go ahead and start with our。usual
    doctype HTML and our HTML tag I'll，give this page a title of counter and。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我将在这里做同样的事情，我们将增加一点复杂性。并给自己添加一个增加按钮和一个减少按钮，以便将数字减少一，所以我将继续从我们通常的 doctype
    HTML 和 HTML 标签开始，我将为这个页面命名为计数器。
- en: now inside of the body of this page I，will go ahead and start with a big。heading
    that just says 0 and then，beneath that I'll create two buttons。I'll have one button
    which will be the，plus symbol and one button which will be。![](img/dfea2e7985faaf65128c8f32e58edce0_13.png)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在这个页面的主体内部，我将开始添加一个大的标题，显示0，然后在其下方创建两个按钮，一个按钮是加号，另一个按钮是。
- en: the minus symbol so now no JavaScript，yet this won't actually work but I can。![](img/dfea2e7985faaf65128c8f32e58edce0_15.png)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 减号符号，所以现在没有JavaScript，但这实际上不会工作，但我可以。
- en: go ahead and go into open counter HTML。![](img/dfea2e7985faaf65128c8f32e58edce0_17.png)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我会继续打开counter.html。
- en: and I can see that I now have 0 and I，have a plus and a minus button although。those
    plus and minus buttons don't，actually do anything right now，so let's go ahead
    and make them do。something let's give this button an ID，called increase，so that
    I can reference it later and。give this button an ID called decrease，again so that
    I can reference it inside。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在看到我有0，还有加号和减号按钮，尽管这些加号和减号按钮现在并不实际执行任何操作，所以我们来让它们做些事情，给这个按钮一个ID叫increase，以便我可以稍后引用它，并给这个按钮一个ID叫decrease，以便我可以在点击时引用它。
- en: of my JavaScript and now in the head，section of my web page I'll add a script。tag
    where I want to start running some，JavaScript once the page is done loading。and
    to do that you'll recall I can say，document add eventlistener Dom content。loaded
    to say go ahead and run this，function once the Dom is loaded once all。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的JavaScript中，现在在网页的头部，我将添加一个script标签，我希望在页面加载完成后开始运行一些JavaScript。为此，你会记得我可以说，文档添加事件监听器DOM内容加载，表示一旦DOM加载完成就运行这个函数。
- en: the contents of this page have loaded，the way I would expect it to and what
    am。I going to do well I first need a，variable something like let counter。equals
    zero and then I can say all right，document query selector increase get me。the
    element whose ID is increased，that's that plus button and when you are。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这页面的内容已加载，以我预期的方式，接下来我该怎么做呢，我首先需要一个变量，比如let counter等于零，然后我可以说，好吧，文档查询选择器增加获取ID为increased的元素，那是加号按钮，当你在工作时。
- en: clicked let's go ahead and add an event，handler in the form of this callback。function
    this function that will be，called when the increased button is。clicked and what
    would I like to do well，I'd like to increase the counter go。ahead and say counter
    plus plus and then，I'm going to update this h1 that。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个事件处理程序，以回调函数的形式，当点击增加按钮时将调用这个函数，我想做什么呢，我想增加计数器，继续说counter加加，然后我将更新这个h1。
- en: currently contains zero document query，selector h1 that gets me the h1 element。I'll
    go ahead and update its inner HTML，and go ahead and set that to whatever。the value
    of counter happens to be and，then I'll do the same thing for the。decrease button
    document query selector，get me the element whose ID is decreased。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当前包含零文档查询，选择器h1获取h1元素。我将继续更新它的内部HTML，并将其设置为任意值，计数器的值就是这样，然后我会对减少按钮的文档查询选择器做同样的事，获取ID为decreased的元素。
- en: that's the button that will be the minus，button and when you are clicked go
    ahead。and run this callback function which，will do the same thing except well
    first。do counter minus minus decrease the，value of the counter by one and then
    get。me the h1 element set its inner HTML，equal to the counter I think this should。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 那就是减号按钮，点击后将运行这个回调函数，做同样的事，首先将计数器减一，然后获取h1元素，将其内部HTML设置为计数器，我想这应该有效。
- en: work and I could verify that by opening，up counter dot HTML I'll refresh the。page
    and I can test these buttons test，the plus button all right that seems to。work
    increases the value by one I can，test the minus button make sure that。that decreases
    the value by one that all，seems to work just fine but of course。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以通过打开counter.html来验证这一点，我会刷新页面，我可以测试这些按钮，测试加号按钮，好吧，这似乎有效，值增加了一，测试减号按钮，确保那会减少值，这一切似乎运作良好，但当然。
- en: this requires me having to interact with，this page I have to open up the page
    I。have to click on these buttons and it's，not the type of thing where I'm。simulating
    like a get request or a post，request，there's no server that I'm sending a。request
    to in getting back a response of，one-two-three-four from this is all。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要我与这个页面互动，我必须打开页面，我必须点击这些按钮，这不是我模拟像get请求或post请求的方式，没有服务器接收请求并返回一二三四的响应，这一切都发生在浏览器中。
- en: happening in the browser and so what I，might like to have the ability to do
    is。some sort of browser testing and there，are a number of different frameworks
    for。doing this one of the most popular is，selenium and what this is going to allow。me
    to do is I can define a test file，that using unit tests or a similar。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我想要的能力是某种浏览器测试，有很多不同的框架可以做到这一点，其中最受欢迎的是selenium，这将让我可以定义一个测试文件，使用单元测试或类似的。
- en: library can effectively simulate a web，browser can simulate a web browser and。simulate
    a user interacting with that，web browser using something that we call。a webdriver
    that's going to allow me to，using code control what it is that the。browser is
    doing and how it is that the。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库可以有效地模拟一个网页浏览器，可以模拟一个网页浏览器，并模拟用户与该网页浏览器的互动，使用我们称之为的webdriver，这将允许我通过代码控制浏览器正在做什么以及它是如何进行的。
- en: '![](img/dfea2e7985faaf65128c8f32e58edce0_19.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfea2e7985faaf65128c8f32e58edce0_19.png)'
- en: user is interacting with this program so，how is this going to work well I'm
    going。to go ahead and just as a test let me，open up the Python interpreter and
    let。![](img/dfea2e7985faaf65128c8f32e58edce0_21.png)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 用户正在与这个程序互动，那么这将如何顺利进行呢？我将继续进行测试，打开Python解释器并让。![](img/dfea2e7985faaf65128c8f32e58edce0_21.png)
- en: me import from tests import star and，that's going to give me access to a。couple
    of different things but the first，thing you'll notice that it's doing is。because
    I'm using this webdriver it's，going to give me a web browser and here。I'm using
    Chrome but you could use，another browser but notice that here。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从tests导入star，这将让我访问几种不同的东西，但你会注意到，首先，它正在做的事情是。因为我正在使用这个webdriver，它将给我一个网页浏览器，我在这里使用Chrome，但你可以使用其他浏览器，请注意这里。
- en: chrome is telling me Chrome is being，controlled by automated test software。the
    Chrome has the ability to allow me，using automated test software using like。Python
    code control what it is the web，browser is doing and so what I can do。here is
    the first thing I need to do is，like tell Chrome to open up my web page。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome告诉我，Chrome正在被自动化测试软件控制。Chrome有能力允许我使用自动化测试软件，比如Python代码，控制网页浏览器正在做的事情。所以我在这里能做的第一件事是告诉Chrome打开我的网页。
- en: and it turns out that in order to do so，I need to get that Pages URI or Uniform。Resource
    identifier just some string，that will identify that page and I've。defined a function
    called file URI that，gets me the URI of a particular file in。this directory so
    I'm gonna say I want，to open up counter dot HTML and I need。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，为了做到这一点，我需要获取那个页面的URI或统一资源标识符，只是一些字符串，可以识别该页面。我定义了一个名为file URI的函数，它可以获取这个目录中特定文件的URI，所以我将说我想打开counter
    dot HTML，我需要。
- en: to get its URI but now what I can say is，driver dot get URI meaning like tell。this
    web driver this Python part of the，part of the Python program that is。controlling
    the web browser that I would，like to get this web page as if the user。had gone
    to the web page and like press，return after typing in the URL so I say。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 获取它的URI，但现在我可以说driver dot get URI，意味着像告诉这个webdriver，这部分Python程序正在控制网页浏览器，我想获取这个网页，仿佛用户已访问该网页并在输入URL后按下回车。所以我说。
- en: driver Doug get URI I go ahead and press，that and what you'll notice on the。right-hand
    side here is that，chrome has loaded this page I am。effectively controlling this
    web browser，window using my Python program I said。driver Doug get URI meaning
    go ahead and，open up the counter to the HTML page and。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: driver Doug get URI，我继续按下那个，你会注意到右侧，Chrome已经加载了这个页面，我实际上是在用我的Python程序控制这个网页浏览器窗口。我说driver
    Doug get URI，意味着继续打开counter to the HTML页面。
- en: then inside of this test window chrome，is opened that up and inside my Python。program
    now using this web driver I have，the ability to like see the same things。that
    the user sees when they open the，page so what does the user see when they。open
    the page will they see for example，the title of the page so I could say。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在这个测试窗口中，Chrome被打开，在我的Python程序中，使用这个网页驱动程序，我有能力看到用户在打开页面时看到的相同内容。那么用户在打开页面时看到什么呢？他们会看到，例如，页面的标题，所以我可以说。
- en: like driver dot title and see that all，right the title of this page is。countered
    that was in fact the title of，the page but I could verify that inside。my Python
    program that by checking that，driver title by taking my web driver。getting the
    title of the current page，that it's looking at making sure that。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于driver.title，可以看到，这个页面的标题是counter，这实际上是页面的标题，但我可以在我的Python程序中通过检查driver标题来验证这一点，通过获取我的网页驱动程序，查看当前页面的标题。
- en: that is counter and likewise if I looked，at driver dot page source press return。what
    I see there in string format so，it's a little bit messy is the content。the HTML
    content of this page and you'll，notice things like you know Dom content。loaded
    here my own click handlers here's，my h1 that says 0 it's very messy。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 那就是counter，如果我查看driver.page source并按回车键，我看到的内容以字符串格式呈现，所以有点杂乱，是这个页面的HTML内容，你会注意到像DOM内容加载在这里，我自己的点击处理程序，这是我的h1标签，上面写着0，真的很杂乱。
- en: because it's being represented as a，Python string and these backslash ends。refer
    to like new lines where there's a，line break but this is the content and。this
    is really all the browser gets the，browser takes this information and just。knows
    how to render it in some nice more，graphical representation that's easier。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它被表示为一个Python字符串，而这些反斜杠结束符则表示像换行符这样的行断开，但这就是内容，这实际上就是浏览器所获得的全部信息，浏览器接收这些信息并知道如何以更美观的图形化表示来渲染它，这更易于理解。
- en: for a user to look at and therefore be，able to understand but this is。fundamentally
    all that my web browser is，actually getting back when it tries to。load a web page
    so what can I do from，here well I would like to simulate a。user's behavior on
    this page that a sure，I can get a page and see the title but I。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于用户查看是有帮助的，因此能够理解，但这基本上是我的网页浏览器在加载网页时实际上获得的所有内容。那么我可以从这里做什么呢？我想在这个页面上模拟用户的行为，当然我可以获取页面并查看标题，但我。
- en: want to simulate like clicking on the，plus button for example so in order to。do
    that first thing I need to do is like，actually get the plus button and to do。that
    I could say something like driver，dot get or find element by ID there are。a number
    of ways that I could try and，find an HTML element but I would like to。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 想要模拟点击增加按钮，例如，所以首先我需要做的事情就是获取增加按钮，为此我可以说driver.get或通过ID查找元素，我可以尝试找到HTML元素的多种方法，但我想。
- en: find an HTML element by its ID and I，know that the plus button the increase。button
    has an ID of increase for example，and so if I find element by ID let me。find the
    element whose ID is increase，and all right it seems here that I've。gotten some
    web element object back for，my web driver and I'll go ahead and save。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 通过ID查找HTML元素，我知道增加按钮的ID是increase，例如，如果我通过ID找到元素，那么让我找到ID为increase的元素，好的，看起来我为我的网页驱动程序得到了一个网页元素对象，我会继续保存。
- en: that inside of a variable called，increase so what I now have is a。variable called
    increase that represents，the increase button that my web driver。has found on the
    web page it's the，effectively effectively the same thing。as you the human going
    through the page，looking for the increase button the web。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素被表示为一个名为increase的变量，因此我现在有一个名为increase的变量，代表我的网页驱动程序在网页上找到的增加按钮，这实际上和你作为人类浏览网页寻找增加按钮是一样的。
- en: drivers doing the same thing except，instead of looking for the button based。on
    what it looks like it looks for the，button based on its ID and so this again。another
    reason why it's helpful to give，your HTML elements IDs in case you ever。need to
    be able to find that element，it's very useful to be able to reference。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 驱动程序执行相同的操作，不过它不是根据按钮的外观寻找按钮，而是根据其ID寻找按钮，因此这是另一个理由，为什么给你的HTML元素分配ID是有帮助的，以便在你需要找到该元素时，这非常有用，可以进行引用。
- en: that element by its name but now that I，have a button I can simulate user。interaction
    with that button I can say，something like increase dot click to say。I would like
    to take the increase button，and simulate a user clicking on that。button in order
    to see whatever it is，that the user would get back when they。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过它的名称获取该元素，但现在我，有一个按钮，我可以模拟用户与该按钮的交互。我可以说，比如增加点点击，表示我希望模拟用户点击该按钮，以查看用户获得的任何返回结果。
- en: click on that button so increased click，I press return and what you'll notice。happens
    is that the number increases，increases from 0 to 1 it's as if I the，button。except
    all I did was say like increased，click to say go ahead and press the。increase
    button and let the browser do，what it would normally do in response。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 点击那个按钮，所以增加点击，我按回车，你会注意到。发生的是数字增加，从0到1，就像我按下了，按钮。其实我所做的只是说增加，点击，去按增加按钮，让浏览器进行，正常的响应。
- en: and what we do in response is get that，JavaScript event handler that on click。Handler
    and run that callback function，that increases the value of counter and。updates
    the h1 so I can say increase dot，click to simulate increasing the value。of that
    variable but this is just a，function call which means I can include。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的响应是获取JavaScript事件处理程序，当点击时。处理程序并运行回调函数，这样可以增加计数器的值并。更新h1，所以我可以说增加点，点击以模拟增加该变量的值。实际上这只是一个，函数调用，这意味着我可以包括。
- en: it in any other Python constructs that I，want that if I want to repeat something。like
    25 times for example and press the，button 25 times I can say like for I in。range
    25 go ahead and like click the，increase button and now very quickly 25。times it's
    going to click the increase，button and I'm going to see the result。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何我想要的其他Python结构中，如果我想重复某个操作，比如说25次并按下，按钮25次，我可以说for I in。range 25，去按增加按钮，很快它将快速点击增加，按钮，我将看到结果。
- en: of all of that interaction so I can，simulate user interaction just by using，the
    Python interpreter。likewise if instead of increasing one or，two decrease well
    then I'm going to do。the same thing I'm gonna say decrease，equals driver dot fine
    element by ID let，me get the decrease。element the element whose ID is decrease，and
    now say decrease dot click and that。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些交互，所以我可以，仅通过使用Python解释器来模拟用户交互。同样，如果不是增加一个或，两个，而是减少，那么我将执行。相同的操作，我会说减少，等于驱动程序点查找元素通过ID，让。我们获取减少元素，该元素的ID为减少，然后说减少点点击。
- en: will simulate me pressing the decrease，button press it again and the more I。press
    it every time it's good it's going，to decrease by one and if I want to。decrease
    it all the way back to zero，we'll then I'll just do it 20 times for。I in range
    20 go ahead and decrease dot，click and that's going to go ahead and。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 将模拟我按下减少按钮，再按一次，我每按一次，都会减少一个。如果我想将其减少到零，那么我只需执行20次for I in range 20，去减少点，点击，这将继续进行。
- en: reduce this account all the way back to，zero by simulating the user pressing
    a。button 20 times and what you'll notice，is that it happened remarkably fast like。I
    can simulate 100 presses of the，increase button by saying for I in range。100 increased
    click and very quickly，you'll see that number a hundred times。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 将此帐户减少到，零，通过模拟用户按下一个。按钮20次，你会注意到，发生的速度非常快。我可以通过说for I in range，100增加点击来模拟100次增加按钮的按下，且你会很快，看到这个数字被增加一百次。
- en: '![](img/dfea2e7985faaf65128c8f32e58edce0_23.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfea2e7985faaf65128c8f32e58edce0_23.png)'
- en: go ahead and go up to 100 faster than a，human could ever have clicked that plus。button
    over and over again and so these，tests can not only be automated but they。can
    be much faster than any human could，ever be in order to test this behavior。so
    how then can we incorporate this idea，into actual tests that we write into。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 可以比人类快速地点击那个加号按钮，这些，测试不仅可以自动化，而且可以比任何人类都要快，以便测试这种行为。那么我们如何将这个想法，融入我们编写的实际测试中呢？
- en: like a unit testing framework that，allows me to define all these various。different
    functions that test different，parts of my web applications behavior。well to do
    that let's go ahead and take，another look at tests PI inside of tests。up I here
    again is that file URI，function where that function has the。
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于单元测试框架，允许我定义各种不同的函数，以测试我Web应用程序行为的不同部分。为此，让我们再看看tests PI内部的测试。这里再次是那个文件URI，函数，该函数包含。
- en: sole purpose of like taking the file and，getting its URI and we need the URI
    to。be able to open it up then we go ahead，and get the Chrome web driver which
    is。going to be what's going to allow us to，run the in simulate interaction with。Chrome
    and in order to get Chrome's web，driver you do have to get chrome driver。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一目的是获取文件并获取其 URI，我们需要 URI 才能打开它，然后我们继续获取 Chrome 网页驱动程序，它将允许我们在 Chrome 中模拟交互。为了获取
    Chrome 的网页驱动程序，你确实需要获取 Chrome 驱动程序。
- en: separately it is separate from google，chrome itself but Google does make it。available
    and other web browsers make，equivalent web drivers available as well。if you'd
    like to test how things would，work in other browsers because different。browsers
    might behave differently and it，might be useful to be able to test to。
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 它与 Google Chrome 本身是分开的，但 Google 确实提供了它，并且其他网页浏览器也提供了等效的网页驱动程序。如果你想测试其他浏览器中的效果，因为不同的浏览器可能表现不同，这可能很有用。
- en: make sure that not only does everything，work in Google Chrome but it's also。going
    to work in other browsers that you，might expect users to be working with as。well
    here then I've defined a class that，again inherits from unit test a test。case
    that is going to define all of the，tests that I would like to run on this。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 确保所有内容不仅在 Google Chrome 中有效，而且在其他你可能期望用户使用的浏览器中也能正常工作。因此，我在这里定义了一个类，它再次继承自单元测试，一个将定义我希望在此上运行的所有测试的测试用例。
- en: web page that here I have a function，called test title that's going to go。ahead
    and first get countered on HTML，it's going to open up that page and then，just
    assert equal。let's make sure the title of the page is，actually countered that's
    what I would。expect it to be so I can write a test in，order to test for that case
    as well here。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我有一个名为 test title 的函数，它将首先在 HTML 中获取计数器，它将打开该页面，然后仅仅断言相等。让我们确保页面的标题实际上是计数器的值，这正是我所期望的，因此我可以编写一个测试来测试这个情况。
- en: I test the increase button by finding，the element whose ID is increase and。clicking
    on that button to simulate a，user pressing the plus button in order。to increase
    the value of the counter and，then what do I want to check well I want。to check
    that when you find element by，tag name h1 and so find element by tag。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过查找 ID 为 increase 的元素来测试增加按钮，并点击该按钮以模拟用户按下加号按钮来增加计数器的值。那么我想检查什么呢？我想检查当你通过标签名
    h1 查找元素时，所以通过标签查找元素。
- en: name similar to find element by ID，except instead of finding something by。its
    ID it's going to look at what's the，tag and only is one element that isn't。h1
    and so here I'm saying go ahead and，get me the h1 element and access its。text
    property meaning whatever it is，that is contained inside of those two h1。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 名称类似于通过 ID 查找元素，除了它不是通过 ID 查找，而是查看标签，并且只是一种元素不是 h1。所以在这里我说继续，获取 h1 元素并访问它的文本属性，这意味着它包含在这两个
    h1 中的内容。
- en: tags I would expect that to be the，number 1 and so I would assert that this。is
    equal to 1 and likewise I can do the，same thing for the decrease button。finding
    the element whose ID is decrease，clicking on that button and then。asserting equal
    find me the h1 element，and make sure that the contents of it。
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 标签我希望是数字 1，因此我将断言这等于 1。同样，我也可以对减少按钮执行相同的操作，找到 ID 为 decrease 的元素，点击该按钮，然后断言相等，找到
    h1 元素，并确保其内容。
- en: are equal to the number negative 1 for。![](img/dfea2e7985faaf65128c8f32e58edce0_25.png)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 等于负1的数量为。![](img/dfea2e7985faaf65128c8f32e58edce0_25.png)
- en: instance and this final test just，testings multiple times that three times。I'm
    going to press the increase button，and make sure that after I press the。increase
    button three times when I check，the h1 check what's inside of its text。that the
    answer should in fact be three。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这个最终测试只是测试多次，三次。我将按下增加按钮，并确保在我按下增加按钮三次后，当我检查 h1 并查看其文本内容时，答案确实应该是三。
- en: '![](img/dfea2e7985faaf65128c8f32e58edce0_27.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfea2e7985faaf65128c8f32e58edce0_27.png)'
- en: so now I should be able to go ahead and，test this code by running Python tests。pi
    and what that is going to do is it's，going to open up a web browser and what。you're
    gonna see very quickly flashed，across my screen were all of those tests。we test
    the increase by 1 we test，decrease by 1 and then we test like。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我应该能够通过运行 Python tests.py 来测试这段代码，而这将打开一个网页浏览器，你很快会看到在我屏幕上闪过的所有测试。我们测试增加 1，我们测试减少
    1，然后我们测试类似的内容。
- en: increase three times after we had，checked to make sure the title was。correct
    and then we can see here is the，output we ran four tests in this amount。of time
    and everything turned out to be，ok none of the tests failed but if one。of the
    tests had failed well then we，would see a different output so let's。
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在确认标题正确后，我们的数量增加了三倍，然后我们可以看到这是我们在这段时间内运行的四个测试的输出，一切都很好，没有测试失败，但如果其中一个测试失败了，我们将看到不同的输出，所以让我们。
- en: imagine for example that I had had a bug，in my decrease function for example。where
    the decrease function wasn't，actually working what would that bug。look like maybe
    I forgot to say counter，- - or maybe perhaps，more likely what might have happened
    is。I wanted to I already had written the，increased function and I decided to very。
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果我的减少函数有一个bug，比如说减少函数实际上没有工作，那这个bug可能是什么样子？也许我忘了说counter--，或者更可能的情况是，我已经写了增加函数，决定。
- en: quickly add the decrease function and I，thought I'd just you know what copy。paste
    like copy the increase event，handler the decrease event handler is。basically the
    same thing except I need，to query for decrease instead and maybe。I just did that
    and forgot to change a，plus plus to minus minus a bug that。
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 快速添加减少函数，我想我只是复制粘贴一下，像是复制增加事件处理器，减少事件处理器基本上是一样的，只是我需要查询减少，而我可能只是做了这个，忘记将加加改为减减，这是一个bug。
- en: might happen if you're not too careful，about how you copy and paste code from。one
    place to another now when I run，these tests Python tests up I will see。the simulation
    a whole bunch get，simulated and when I go back and check。the output of my test
    see what actually，happened I see that we do seem to have。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在从一个地方复制粘贴代码时不够小心，可能会发生一些问题。现在当我运行这些Python测试时，我会看到模拟结果一大堆被模拟，当我回去检查测试的输出，看看实际发生了什么时，我发现我们似乎有。
- en: an assertion error here，the assertion fail was on the test，decrease function
    and it happened when I。tried to assert that with inside of the，h1 element was
    negative 1 because 1 is。not equal to negative 1 so this is the，value of this assertion
    error as well。and this is helpful an advantage over，just assert assert just tells
    you you。
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这里出现了一个断言错误，断言失败是在测试减少函数时发生的，当我尝试断言h1元素中的值为-1时，因为1不等于-1，所以这是这个断言错误的值。这在某种程度上是有帮助的，相比于仅仅断言，它告诉你。
- en: know there's an assertion error but here，in unit test we actually get to see
    if I。asserted that two things are equal it，tells me what both of those things
    are。it tells me the actual output of H one's，text it was one but what I expected
    it。to be was negative one so it tells me，exactly what the discrepancy is I know。
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道有一个断言错误，但在单元测试中，我们实际上可以看到如果我断言两个事物相等，它会告诉我这两个事物是什么。它告诉我h1的实际输出是1，但我期望的是-1，所以它准确地告诉我差异在哪里，我知道。
- en: that for some reason it was one instead，of negative one and that can be a clue。to
    me a hint to me as to how I can go，about trying to solve this problem and I。can
    solve the problem by going into my，decrease event handler seeing that all。right
    this was increasing the counter，instead of decreasing it change plus。
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 出于某种原因，它是1而不是-1，这可能是我解决问题的线索。我可以通过查看我的减少事件处理器来解决这个问题，发现哦，这实际上是在增加计数器，而不是减少，改为加。
- en: plus to minus - and now rerun my tests，and see all the testing，inside of my
    chromedriver and we ran。four tests and this time everything was，okay so all of
    my tests appear to have。passed this time so those then are some，possibilities
    for being able to test our。code especially taking advantage of unit，tests this
    library that we can use in。
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 加改为减 - 现在重新运行我的测试，查看我在chromedriver内部的所有测试，我们运行了四个测试，这次一切都很好，所以这次我的所有测试似乎都通过了，这些是一些可能性，能够测试我们的代码，特别是利用单元测试，这个库我们可以使用。
- en: Python in order to make various types of，assertions about what we would like
    to。be true or false about our code and unit，test contains a number of helpful。methods
    for being able to perform these，sorts of assertions some of them are。here so we
    can say things like I would，like to assert that two things are equal。
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Python可以进行各种类型的断言，关于我们希望代码的某些条件是否为真或假，单元测试包含了许多有用的方法，以便执行这些断言，我们可以说，比如我想断言两个事物相等。
- en: to each other which we've seen there's a，counterpart to that a certain not equal。for
    making sure that two things are not，equal to one another。assert true and false
    we've seen as well，there are others as well though things。like assert in or assert
    not in if I，would like to assert for example that。
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 对彼此的比较，我们看到有一个对应的概念，用于确保两个事物不相等。我们也看到`assert true`和`false`，但还有其他一些，例如`assert
    in`或`assert not in`，如果我想要验证。
- en: some element is in some list for example，or that some element is not in some
    list。there are other assert methods as well，that we can use in order to verify
    that。a part of our program or a part of our，web application does in fact behave
    the。way we would want to behave and we can，integrate this type of idea into a。
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 某个元素在某个列表中，或者某个元素不在某个列表中。我们还有其他断言方法，可以用来验证我们程序的某个部分或我们网络应用的某个部分确实按照我们希望的方式运行，我们可以将这种想法整合到。
- en: number of different types of testing we，saw integrating it into Django itself。using
    Django's unit testing in order to，verify that our database works the way。we expected
    it to and that our views，works the way that we expected them to。and provided the
    right context back to，the user after the user makes a request。
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到多种不同类型的测试将其整合到Django中，使用Django的单元测试来验证我们的数据库是否按预期工作，以及我们的视图是否按预期工作，并在用户发出请求后提供正确的上下文。
- en: to our web application and there are，also applications of unit testing。whether
    using the framework or not -，browser based testing when I want to。test like inside
    of the users web，browser does it actually work when a。user clicks on this button
    that the，JavaScript behaves the way that I would。
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的网络应用程序中还有单元测试的应用。不论是否使用框架——当我想进行基于浏览器的测试时，我会测试用户的网络浏览器内部，当用户点击这个按钮时，JavaScript是否按我期望的那样运行。
- en: expect it to and I don't need to，especially use JavaScript in order to do。those
    tests I didn't write those tests，using Python using unit tests to be able。to say
    click on the button that has this，idea and verify that the result that we。get
    back is what we would expect it to，be so that then was testing and now。
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我期望它按预期工作，我不需要，特别是使用JavaScript来进行这些测试。我没有使用Python编写这些测试，而是使用单元测试来验证点击这个按钮的想法，以及验证我们得到的结果是否是我们期望的。
- en: we'll go ahead and take a look at CI CD，continuous integration and continuous。delivery
    which refer to two best，practices in the software development。world that has to
    do with how it is that，code is written especially by groups or。teams of people
    how it all works，together and how that code is eventually。
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续查看CI/CD，持续集成和持续交付，这两个概念在软件开发领域被视为最佳实践，涉及代码如何编写，尤其是由团队或小组编写的代码如何协同工作，以及最终如何将代码整合在一起。
- en: delivered and deployed to users who are，using those applications so CI which。refers
    to continuous integration in，frequent merges to a main branch of some。repository
    like a git repository and。![](img/dfea2e7985faaf65128c8f32e58edce0_29.png)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 交付和部署给那些使用这些应用程序的用户，因此CI指的是持续集成，即频繁合并到某个代码库的主分支，例如git代码库。![](img/dfea2e7985faaf65128c8f32e58edce0_29.png)
- en: then automatically running unit tests，when that code is pushed so what does。that
    generally mean well in the past you，might imagine that if multiple people。are
    working on some project at the same，time and multiple people are each。working
    on different features or，different parts of that project then。
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在代码被推送时自动运行单元测试。那么，这通常意味着什么呢？过去，你可能会想象，如果多个人同时在某个项目上工作，而每个人又在处理该项目的不同功能或不同部分。
- en: after everyone's done working on those，features and we're ready to like ship。some
    new version of a web application or，ship some new version of a software。product
    well then everyone's gonna have，to take all these various different。features and
    combine them all together，at the end and figure out how to then。
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个人完成这些功能后，我们准备发布一个新的网络应用版本或软件产品的新版本，那么每个人都必须将这些不同的功能结合在一起，并最终弄清楚如何将它们整合。
- en: try and deliver that program to users，and this has a tendency to cause。problems
    especially if people have been，working on different big changes all。simultaneously
    they might not all be，compatible with one another there might。be conflicts between
    the various，different changes that have been made so。
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试将该程序交付给用户，这往往会导致问题，特别是如果人们同时在进行不同的大改动，它们可能不互相兼容，各种不同的更改之间可能会存在冲突。
- en: waiting until everyone's done working on，a feature to merge them all back。together
    and then deliver it is not，necessarily the best practice which is。why increasingly
    many more teams are，beginning to adopt a system of。continuous integration that
    there's one，repository somewhere online that's。
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 等待每个人完成工作后再将功能合并在一起，并交付并不一定是最佳实践，这就是为什么越来越多的团队开始采用持续集成系统，因为有一个在线的存储库。
- en: keeping the official version of the code，everyone works on their own version
    of。the code may be on their own branch for，example but very frequently all of
    these。changes are merged back together into，the same branch to make sure that
    these。incremental changes can be happening，such that it's less likely that there's。
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 保持代码的官方版本，每个人都在自己的版本上工作，例如，可能在自己的分支上，但这些更改经常合并回同一个分支，以确保这些增量更改能够进行，从而降低出现问题的可能性。
- en: two really divergent paths that the，program has gone under and as a result。it's
    much more difficult to merge those，two paths back together in addition to。frequently
    merging to a some main branch，another key idea of continuous。integration is this
    idea of automated，unit testing where unit testing again。
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 程序经历了两个非常不同的路径，因此更难将这两条路径合并在一起，除了经常合并到某个主分支外，持续集成的另一个关键思想是自动化单元测试，在此情况下再次进行单元测试。
- en: refers to this idea of on our program we，run a big series of tests that verify。each
    little part of our program to make，sure that the web application behaves。the way
    it is supposed to and unit tests，generally refer to testing particulars。of our
    program making sure that each，component works as expected there are。
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这涉及到我们程序的想法，我们运行一系列测试来验证我们程序的每个小部分，以确保网络应用程序按预期运行，而单元测试通常指测试我们程序的特定部分，以确保每个组件按预期工作。
- en: also bigger scale test tests like，integration tests that make sure that。the
    entire pathway from like user，request and response that everything。along a certain
    pipeline works as well，but there are various different types of。testing and the
    important thing is，making sure that anytime some new change。
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 还有更大规模的测试，例如集成测试，确保从用户请求到响应的整个路径在某个管道中正常工作，但测试有各种不同类型，重要的是确保每次有新的更改。
- en: is merged into the main branch or，someone wants to merge，changes into the main
    branch that these。tests are run to make sure that nobody，ever makes a change to
    one part of a。program that breaks some other part of，the program and in a large
    enough。codebase it's going to be impossible for，any one person to know exactly
    what the。
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在合并到主分支或有人想要将更改合并到主分支时，这些测试会被运行，以确保没有人对程序的某一部分做出更改，而破坏程序的其他部分，在足够大的代码库中，任何一个人都无法准确知道某一特定更改对程序其他部分的影响。
- en: effect of one particular change is going，to be on every other part of the program。they're
    going to be unforeseen，consequences that the one programmer may。or may not know
    about and so the，advantage of unit testing assuming their。comprehensive and cover
    all of these，various different components of the。
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 他们会遇到一些不可预见的后果，而该程序员可能知道或不知道，因此，假设单元测试是全面的，并涵盖程序的各种不同组件，这就是单元测试的优势。
- en: program is that anytime someone makes a，change and attempts to merge that change。into
    the main branch according to the，practice of continuous integration the。fact that
    it doesn't pass a test we'll，know about that immediately and as a。result that
    programmer can go back and，try to fix it as opposed to waiting。
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 程序的好处在于，无论何时有人进行更改并尝试将该更改合并到主分支中，根据持续集成的实践，如果它未通过测试，我们会立即知道，因此该程序员可以回去修复，而不是等待。
- en: until everything is done merging，everything together and then running the。tests
    realizing something doesn't work，and then being unsure of where to begin。we don't
    know where the bug is which，change happened to cause the bug if。everything is
    merged more incrementally，it's easier to spot those bugs assuming。
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 直到所有内容合并在一起，然后运行测试，意识到某些东西无法正常工作，并且不确定从哪里开始。我们不知道错误在哪里，哪个更改导致了错误，如果一切以更增量的方式合并，那么发现这些错误会更容易，假设。
- en: there's good coverage of test to make，sure that we're counting for these。various
    different possibilities some，continuous integration refers to that。idea frequently
    and more incrementally，updating the main branch and making sure。that the tests
    are in fact passing and，it's closely tied to a related idea of。
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 有良好的测试覆盖率，以确保我们考虑到这些不同的可能性，持续集成指的就是这个理念，频繁且增量地更新主分支，并确保测试确实通过，这与一个相关理念密切相关。
- en: continuous delivery which is about the，process of how it is that the software。is
    actually released to users how the，web application actually gets deployed。and
    there are a couple of models you，might go about thinking with regards to。how it
    is that some program or web，application gets deployed you might。
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 持续交付涉及软件实际如何发布给用户，网络应用如何部署。有几种模型可以思考，关于某个程序或网络应用如何被部署。
- en: imagine the release cycle might be quite，long that people spend months working
    on。various different features on some，software development team and after。they're
    happy with all the new changes，they've released some new version of the。web application
    but especially with web，applications that are undergoing。
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想象发布周期可能相当长，人们在某个软件开发团队上花费几个月时间进行各种不同的功能开发，当他们对所有新更改感到满意时，他们就会发布网络应用的新版本，但特别是对于正在进行中的网络应用。
- en: constant change that have lots of users，that are moving very quickly one thing。that's
    quite popular is this notion of，continuous delivery which refers to。having shorter
    release schedules instead，of immediately releasing something at。the end of some
    long cycle you can in，shorter cycles make releases every day。
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 不断变化的情况，有大量用户在迅速变化。一个相当受欢迎的概念是，持续交付，指的是有更短的发布周期，而不是在某个漫长周期结束时立即发布某些东西，你可以在短周期内每天发布。
- en: every week or so in order to say that，let's just go ahead and incrementally。make
    those changes whatever new changes，happen to have merge to the main branch。let's
    go ahead and release those as，opposed to waiting much longer。in order to perform
    those releases and，that again lends itself to certain。
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 每周进行一次，以便说，继续逐步进行这些更改，无论新的更改是什么，合并到主分支。我们可以立即发布这些，而不是等待更长时间来进行发布，这又促使某些。
- en: benefits the benefit of being able to，just incrementally make changes such as。something
    goes wrong you know more，immediately what went wrong as opposed。to making a lot
    of changes at once where，if something goes wrong it's not。necessarily clear what
    went wrong and it，also allows new features to get out to。
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 好处是能够逐步进行更改，例如，如果出现问题，你可以更快了解出了什么问题，而不是一次性进行大量更改，这样如果出问题就不一定清楚出在哪里，并且这也允许新功能迅速推出给用户。
- en: users much more quickly so especially in，a competitive market where many。different
    web applications are competing，with one another being able to take a。new feature
    and release it very quickly，can be quite helpful so continuous。delivery is all
    about that idea of short，release cycles rather than wait a long。
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以更快地获得服务，尤其是在一个竞争激烈的市场中，许多不同的网络应用相互竞争，能够快速发布新功能是相当有帮助的，因此持续交付就是关于短发布周期的理念，而不是等待很长时间。
- en: time for a new version to be released，release versions incremental e as new。features
    begin to come in it's closely，related to the idea of continuous。deployment which
    CD will sometimes also，represent continuous deployment is。similar in spirit to
    continuous delivery，but the deployments happen automatically。
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本发布，增量发布，随着新功能的引入，这与持续部署的理念密切相关，CD有时也代表持续部署。持续部署在精神上与持续交付相似，但部署是自动发生的。
- en: that rather than a human having to say，all right we've made a couple of changes。let's
    go ahead and deploy those changes，in continuous deployment anytime these。changes
    are made the pipeline of，deploying the application to users will。automatically
    take place as well just，removing one thing for humans to have to。
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着人不必说，好吧，我们做了几处更改。我们可以继续部署这些更改，在持续部署中，只要这些更改被做出，应用程序向用户部署的流程就会自动进行，从而减少人类需要做的事情。
- en: think about and allowing for these，deployments to happen even more quickly。as
    well so the question then is what，tools can allow us to make continuous。integration
    and continuous delivery a。
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 思考并允许这些部署更快地发生。问题是，哪些工具可以让我们实现持续的集成和持续交付。
