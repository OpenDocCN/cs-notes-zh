- en: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P4：L0- HTML与CSS语法 3 (响应设计，Booststrap)
    - ShowMeAI - BV1gL411x7NY
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P4：L0- HTML与CSS语法 3 (响应设计，Booststrap)
    - ShowMeAI - BV1gL411x7NY
- en: precisely define how we want our web，pages to be styled but one other thing。we
    can use CSS for that's quite powerful，is responsive design and responsive。design
    is all about making sure that our。![](img/d15ab487c4bc1743a9156bbc67f2189c_1.png)
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以精确地定义我们希望网页的样式，但我们可以使用CSS的另一项功能，这非常强大，那就是响应式设计，响应式设计的关键在于确保我们的。![](img/d15ab487c4bc1743a9156bbc67f2189c_1.png)
- en: web pages look good no matter how you're，looking at the web page nowadays people。aren't
    always looking at web pages on，their computers but they're looking at。web pages
    on their mobile phones or on，their tablets as well and it's important。as we begin
    to design web pages that we，design our web pages in a responsive way。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你如何查看网页，网页看起来都很好，如今人们并不总是在他们的电脑上查看网页，而是在他们的手机或平板电脑上查看网页，因此在我们开始设计网页时，重要的是要以响应式的方式设计我们的网页。
- en: so we'll look at a number of different，ways we can implement responsive design。in
    our web pages starting with the，discussion of the viewport and what the。viewport
    is is the viewport is the，visual part of the screen that the user。can actually
    see so the viewport is this，entire area of the web page that。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将探讨多种不同的方法，在网页中实现响应式设计，从讨论视口开始，视口是用户实际可以看到的屏幕的视觉部分，因此视口就是整个网页区域。
- en: displays content to the user so one，question you might ask is what's going。to
    happen when you take this page and，translate it on to a mobile screen well。one
    thing that many mobile devices do by，default is treat their viewport as。though
    it is the same width as a，computer screen because not all web。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 向用户显示内容，所以你可能会问，当你将这个页面转换到移动屏幕时会发生什么呢？许多移动设备默认情况下会将其视口视为与电脑屏幕相同的宽度，因为并不是所有网页。
- en: pages are optimized from old device，mobile devices you want to make sure。that
    on a mobile device you can see，everything and so many phones will take。a web page
    like this and just shrink it，down to fit onto a mobile screen that。looks a little
    something like that now，of course that's probably not really。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 页面是针对旧设备和移动设备优化的，你要确保在移动设备上可以看到所有内容，因此许多手机会将这样的网页缩小到适应移动屏幕，可能看起来有点像那样，现在当然这可能不是很好。
- en: what we want it to look like ideally we，want our page to adapt to different
    size。screens maybe we want the heading in the，image in the text if that's what
    these。are to grow a little bit to fill that，entire screen and so one simple thing
    we。can do is just to add a little line of，code to our HTML inside the head section。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们理想中希望的样子是，我们希望页面能够适应不同尺寸的屏幕，也许我们希望标题、图像和文本（如果它们就是这些）稍微增大，以填满整个屏幕，因此我们可以做的一个简单的事情就是在HTML的头部部分添加一小行代码。
- en: of our page that controls the viewport，this line of code here is providing some。metadata
    to our HTML page and saying I，would like you to change the viewport to。be specifically
    the width of the device，by default many phones will use a。viewport that's actually
    wider than the，width of device treated as if they're。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们控制视口的页面，这行代码提供了一些元数据给我们的HTML页面，并且表示我希望你将视口更改为设备的宽度，默认情况下，许多手机会使用一个实际上比设备宽度更宽的视口。
- en: loading a page on a computer and then，shrinking it down to the size of a。mobile
    device if you and your web page，specify though that you want the。viewport to be
    just the device width off，times a page is going to look a whole。lot better on
    a mobile device but in，addition to just adding a line like this。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在电脑上加载一个页面，然后将其缩小到移动设备的大小，如果你和你的网页指定希望视口仅为设备宽度，那么页面在移动设备上看起来会好得多，但除了仅添加这一行代码之外。
- en: there are other actual changes we can，make to our page to make it look a。little
    better on different screens and，one of those has to do with media。queries and
    media queries are all about，controlling how our page is going to。look depending
    on how we render that，particular page or what size screen were。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对页面进行其他实际更改，以使其在不同屏幕上看起来更好，其中一项涉及媒体查询，媒体查询主要是关于控制我们的页面将如何显示，具体取决于我们如何渲染特定页面或屏幕的大小。
- en: rendering that page on so let's take a，look at an example of how we might go。about
    do using media queries in order to，control what a page actually looks like。depending
    on what type of page or what，type of browser were using to view it so。I'll go
    ahead and open a new file that，I'll call responsive HTML because we're。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 渲染页面，那么我们来看一个例子，看看我们如何使用媒体查询来控制页面的实际外观，这取决于我们使用的页面类型或浏览器类型。因此，我将打开一个新文件，称之为响应式HTML，因为我们。
- en: going to try and build a responsive web，page now and now I'll go ahead and。inside
    the body of my page just include，a big heading that says welcome to my。web page
    for example and just to，demonstrate what you can do now with。responsive design
    is I could say，something like let me add a style tag。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我要尝试构建一个响应式网页，我将在页面的主体内包含一个大标题，写着“欢迎来到我的网页”，例如。为了展示现在响应式设计可以做什么，我可以说，让我添加一个样式标签。
- en: here where I want to say that if the，size of the screen is a certain width。then
    I want to style the page in one way，and if the size of the page is a。different
    width then I might want to，style the page in a different way you。might imagine
    that as you shrink the，screen you want to move elements around。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我想说的是，如果屏幕的大小是某个特定宽度，那么我想以一种方式来设置页面样式；如果页面的大小是不同的宽度，那么我可能想以另一种方式来设置页面样式。你可以想象，当你缩小屏幕时，想要移动元素的位置。
- en: in order to rearrange them to make the，page just look a little bit nicer on
    a。mobile screen so we'll do a very simple，example of just changing the color。depending
    on the size of the screen so，let me specify now in a media query and。the syntax
    for a media query looks like，this I'm going to use the @ symbol and。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了重新排列它们，使页面在移动屏幕上看起来更好。因此，我们将做一个非常简单的例子，仅根据屏幕大小来改变颜色。现在让我在媒体查询中指定一下，媒体查询的语法看起来像这样，我将使用@符号和。
- en: say media and then specify for what type，of media I would like to apply this。query
    I can say something like if the，minimum width of the page is 600 pixels。in other
    words if the width of the page，is 600 pixels or anything larger than。600 pixels
    well then go ahead and take，the body and give it a background color。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 说媒体，然后指定我希望应用此查询的媒体类型。我可以说，页面的最小宽度为600像素，换句话说，如果页面的宽度为600像素或更大，那么就继续将主体的背景颜色设为。
- en: of red but then I could also add another，media query and say you know what for。this
    media query let me give it a max，width of 599 pixels meaning if the size。of the
    screen is 599 pixels or fewer，then maybe I'd like to take the body。and give it
    a background color of blue。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 红色，但我也可以添加另一个媒体查询，并说你知道吗，对于这个媒体查询，我希望最大宽度为599像素，这意味着如果屏幕的大小为599像素或更小，那么我可能希望将主体的背景颜色设为蓝色。
- en: '![](img/d15ab487c4bc1743a9156bbc67f2189c_3.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d15ab487c4bc1743a9156bbc67f2189c_3.png)'
- en: for example so now let's take a look at，what happens when I take this page and。![](img/d15ab487c4bc1743a9156bbc67f2189c_5.png)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，现在让我们看看当我将这个页面拿出来时会发生什么。![](img/d15ab487c4bc1743a9156bbc67f2189c_5.png)
- en: actually open it and see what's going on，I'll open up responsive dot HTML and。here's
    what I see normally I see a red，web page because my screen is longer。![](img/d15ab487c4bc1743a9156bbc67f2189c_7.png)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上打开它，看看发生了什么，我会打开responsive.html，正常情况下我看到一个红色网页，因为我的屏幕更长。![](img/d15ab487c4bc1743a9156bbc67f2189c_7.png)
- en: than 600 pixels wide but notice what，happens as I shrink this web page if I。go
    ahead and shrink it looking at on a。![](img/d15ab487c4bc1743a9156bbc67f2189c_9.png)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 宽度小于600像素，但请注意，当我缩小这个网页时会发生什么。如果我继续缩小它。![](img/d15ab487c4bc1743a9156bbc67f2189c_9.png)
- en: smaller screen eventually it turns to，blue if it's above 600 pixels wide it's。going
    to be red and if it's below 600。![](img/d15ab487c4bc1743a9156bbc67f2189c_11.png)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当屏幕变小时，如果宽度超过600像素，它将变为红色；如果低于600像素，则会变为蓝色。![](img/d15ab487c4bc1743a9156bbc67f2189c_11.png)
- en: pixels wide the color changes to blue so，we're able to now use these media。queries
    to really fine-tune the control，how our page is going to look on various。different
    types of devices if it's on a，big screen maybe you want the elements。to look a
    certain way if it's a smaller，screen maybe they look differently and。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 宽度为像素时，颜色变为蓝色，因此我们现在能够使用这些媒体查询来真正微调如何在各种不同类型的设备上显示页面。如果是在大屏幕上，可能希望元素看起来某种方式；如果是在小屏幕上，可能它们看起来就会不同。
- en: you don't just need to control，background color you can control any CSS。property
    you want just by using these，media queries you can say on a big。screen you want
    certain amounts of，spacing or padding you can even hide。elements on smaller screens
    if you want，to by using a particular CSS property。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅需要控制背景颜色，还可以通过使用这些媒体查询来控制你想要的任何CSS属性。你可以说在大屏幕上希望有一定的间距或填充，甚至可以在小屏幕上隐藏元素，前提是使用特定的CSS属性。
- en: called the display property that，controls whether or not an element is。even
    visible and ultimately put together，this can help to make your pages a。little
    bit more responsive and there are，a number of different media queries that。we
    can apply to our page as well we can，check to see whether a mobile device is。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个称为显示属性，它控制元素是否可见，最终组合在一起，这可以帮助让你的页面更加响应式。我们还可以应用多种不同的媒体查询到我们的页面，以检查移动设备的状态。
- en: vertical or landscape we can check to，see whether the user is viewing the page。on
    their computer screen or if they've，tried to print out the contents of the。page
    as well so there are a number of，different options that we have to really。control
    how a page is going to look，there are some other tools we have in。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在竖屏或横屏的情况下，我们可以检查用户是通过电脑屏幕查看页面，还是尝试打印出页面内容。因此，我们有许多不同的选项来真正控制页面的外观，还有一些工具可以帮助我们处理移动响应。
- en: our toolbox as well though for dealing，with mobile responsiveness and one of。the
    tools built into the latest version，of CSS is something called flex box and。flex
    box is quite helpful if we have，multiple elements and we're all trying。to display
    on the same page at the same，time that might overflow if we're not。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的工具箱中也有一些工具来处理移动响应，最新版本CSS中内置的工具之一是称为Flexbox的东西。如果我们有多个元素，同时在同一页面上显示，而不溢出，Flexbox非常有用。
- en: careful about how we do responsive，design if we're really not careful let's。imagine
    I have six elements that show up，on my computer's monitor when you。translate that
    to a mobile screen you，can imagine they made all shrink down so。that they're barely
    visible something，like this this is probably not what we。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行响应式设计时要小心，如果我们不小心，想象一下我在电脑显示器上显示六个元素，当你将其转到移动屏幕时，你可以想象它们都缩小到几乎不可见的状态，这可能不是我们想要的效果。
- en: want if we're trying to design a mobile，responsive page for example so you might。imagine
    how can we do a little bit。![](img/d15ab487c4bc1743a9156bbc67f2189c_13.png)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们试图设计一个移动响应页面，例如，你可能会想，我们该如何稍微调整一下呢？![](img/d15ab487c4bc1743a9156bbc67f2189c_13.png)
- en: better well another thing we could do，is take these elements and go ahead and。keep
    them the same size but make you，have to scroll through them this isn't a。slightly
    better the elements are at，least still visible and they're large。enough on the
    screen but it'd be nice，not to have to scroll through them what。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以做的另一件事是，将这些元素保持相同大小，但需要你进行滚动，这不是稍微更好。元素至少仍然可见，且在屏幕上足够大，但如果不必滚动那就更好了。
- en: would be really nice is given that we，have all this extra space I would like。to
    be able to wrap around elements if I，don't have enough space for them such。that
    if I'm translating these six，elements to a mobile screen they。translate but I
    get them in like two，rows for example three on the top and。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 而且考虑到我们有这么多额外空间，如果没有足够的空间，我希望能够将元素包裹起来。这样，如果我将这六个元素转到移动屏幕，它们会转化为两行，例如顶部三行。
- en: three below and flexbox is an easy way，to be able to implement something like。this
    inside of our web pages so let's，take a look at what that might actually。look
    like to add flexbox to our page so，I'll go ahead and create a new file。called
    flexbox HTML we'll start with the，same HTML code and now inside of the。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Flexbox是一个简单的方法，可以在我们的网页中实现类似的功能，所以让我们看看添加Flexbox到页面的实际效果。我将创建一个新文件，命名为flexbox
    HTML，我们将从相同的HTML代码开始。
- en: body I'm going to create first a div，that is going to be called the container。and
    we're creating a container because，we're going to specifically say that。everything
    inside the container I would，like to add flexbox to to be able to。wrap it around
    so the things can go on，to multiple lines if I ever need to and。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我将首先创建一个名为container的div。我们创建一个容器是因为我们将明确指定，容器内的所有内容我希望添加Flexbox，以便能够包裹元素，使其能够换行。
- en: now let me just add some sample text so，this is some sample text inside of a
    div。to demo flexbox and I'll go ahead and，repeat this maybe like 12 times。it'll
    number each one here's one two，three four，and I'll number all the rest and this
    is。just to give a demonstration of what，these elements could actually look like。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我添加一些示例文本，这是一段在 div 内的示例文本。用来演示 flexbox，我将重复这个文本大约 12 次。它会给每个编号，这里是一个，二，三，四，其余的我也会编号，这只是为了展示这些元素实际上可能是什么样子的。
- en: ideally these would be different pieces，of content though so now inside of my。style
    tag here's what I'm going to say，just to demonstrate I'll say take the ID。container
    again the hash tag specifies，get me something with a particular ID。and I want
    to display it using flexbox，and in particular I would like to use。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，这些应该是不同的内容部分，所以现在在我的 style 标签内，我将说，为了演示，我会说获取 ID 为 container 的元素，哈希标签指定获取某个特定
    ID 的内容，我希望使用 flexbox 显示它，特别是我想使用。
- en: the Flex wrap property to say if there's，not enough room at the end of a line
    for。all of the elements go ahead and wrap，around those elements onto the next
    line。instead and now I can specify some，additional CSS properties for the divs。inside
    of the container I so I can say，for the container all of the divs inside。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Flex wrap 属性来指定如果行末没有足够的空间容纳所有元素，就将这些元素换到下一行。现在我可以为容器内的 div 指定一些额外的 CSS 属性，所以我可以说，对于容器内的所有
    div。
- en: of that container again using this child，selector to get all of the divs that
    are。inside of the container I can add some，CSS to that too I can say let's give。these
    a background color of like a shade，of green I can give them a particular。font
    maybe 20 pixel font give them some，margin and padding just to add some。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个子选择器再次获取容器内的所有 div，我可以给它们添加一些 CSS。我可以说让它们的背景色是某种绿色的阴影，给它们设置特定的字体，可能是 20
    像素的字体，并添加一些边距和内边距。
- en: space and maybe each one is going to be。![](img/d15ab487c4bc1743a9156bbc67f2189c_15.png)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 空间可能每个都是。![](img/d15ab487c4bc1743a9156bbc67f2189c_15.png)
- en: 200 pixels wide so just adding some，spacing to those individual divs the。important
    part is this right here where，I've said that this whole container is。going to
    be a flexbox container and I'd，like to wrap around elements if you ever。reach
    the end so now open up flexbox，HTML and so here I now see 12 elements。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 宽度为 200 像素，所以只是为这些单独的 div 添加一些间距。重要的是我在这里说这个整个容器将是一个 flexbox 容器，如果你到达末尾，我希望换行。现在打开
    flexbox HTML，我现在看到 12 个元素。
- en: that are on multiple lines but notice，what happens as I shrink the page if。there
    isn't room for all of them。![](img/d15ab487c4bc1743a9156bbc67f2189c_17.png)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些元素有多行，但请注意，当我缩小页面时，如果没有足够的空间容纳它们，会发生什么。![](img/d15ab487c4bc1743a9156bbc67f2189c_17.png)
- en: elements move on to other lines now，there's only three elements in any。![](img/d15ab487c4bc1743a9156bbc67f2189c_19.png)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 元素移动到其他行，现在每行只有三个元素。![](img/d15ab487c4bc1743a9156bbc67f2189c_19.png)
- en: particular row now there's only two，elements on a particular row and so I。![](img/d15ab487c4bc1743a9156bbc67f2189c_21.png)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 特定行上，现在每行只有两个元素。![](img/d15ab487c4bc1743a9156bbc67f2189c_21.png)
- en: can use flexbox to very well adapt，myself to different sized screens and no。matter
    whether you're looking at this on，a big screen or a small screen the。content is
    still going to look good，because I'm able to adapt responsively。to whatever might
    be happening so this，is one layout paradigm that exists。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以很好地使用 flexbox 适应不同大小的屏幕，无论你是在大屏幕还是小屏幕上查看，这些内容仍然会看起来不错，因为我能够响应式地适应任何可能发生的情况，这是一种存在的布局范式。
- en: within CSS this flexbox layout there are，other layouts that exist as well。one
    common one is the grid layout for，anytime you want to arrange things in a。particular
    grid or maybe certain columns，need to be certain whit's but others。could maybe
    be a little bit more，flexible choice I'll show one example of。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CSS 中，这种 flexbox 布局还存在其他布局。一个常见的就是网格布局，适用于任何想要在特定网格中排列的东西，或者某些列需要是特定的宽度，而其他的可能会更灵活，我将展示一个示例。
- en: that too just to give you a，demonstration of what that grid layout，might look
    like。so here's grid HTML where I'll go ahead，and inside the body of this page
    give。myself a div whose I'll give it an ID of，grid and then let me just add div
    class。equals grid item again a class because，there might be multiple items but
    I'll。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是为了给你展示网格布局可能是什么样子的。所以这里是网格 HTML，我将在页面的主体内创建一个 div，给它一个 ID 为 grid，然后我将添加 div
    class ＝ grid item，同样是一个类，因为可能会有多个项目。
- en: go ahead and just create a whole bunch，of great items and number each one so
    2。3 4 5 6 7 8 9 10 11 12 so I have a whole，bunch of great items inside of a div。whose
    ID is grid and now I'd like to add，some style here I'll say for the grid。let's
    give it a background color maybe，gonna be a background color。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 继续创建一堆很棒的项目，并为每个项目编号，比如2 3 4 5 6 7 8 9 10 11 12，所以我有一堆很棒的项目在一个ID为grid的div中，现在我想在这里添加一些样式，我会说对于grid，给它一个背景颜色，也许会是某种背景色。
- en: should be green a display is going to be，grid I want this to show up as a grid。and
    now there are a couple of attributes，I'm going to or properties and I'm going。to
    specify here maybe I want some，padding around the grid first but the。important
    grid properties are grid，column gap how much space goes between。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 应该是绿色，显示为grid，我希望它作为一个网格显示，现在有几个属性，我将要指定，也许我想在网格周围添加一些内边距，但重要的网格属性是网格列间距，决定列之间的空间。
- en: each of the columns maybe I'll say like，20 pixels likewise there's also a grid。row
    gap how much space goes between each，of the rows of the grid maybe I'll say。10
    pixels here and then finally grid，template columns is a way for me to。specify
    how many columns that are going，to be and how wide should each of those。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 每列可能我会说大约20像素，同样还有一个网格行间距，决定网格中每行之间的空间，我可能会说这里是10像素，最后网格模板列是我用来指定将会有多少列，以及每列的宽度。
- en: columns be so if I want maybe three，columns I can specify that the first。column
    should be 200 pixels the second，column should also be 200 pixels and the。third
    column can be automatically sized，just grow or shrink to fill the screen I。said
    we'll say Auto so first column 200，pixel is a second column 200 pixels。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 列的宽度，因此如果我想要三个列，我可以指定第一列应为200像素，第二列也应为200像素，第三列可以自动调整大小，正好填满屏幕，我会说为自动，所以第一列200像素，第二列200像素。
- en: third column just do it automatically，and now for all of the grid items。well
    those I can add some styling to to，also well I'll give them a background。color
    of white just to distinguish them，and also give them some font size and。some padding
    and maybe Center them as，well so just adding some additional CSS。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 第三列自动处理，现在对于所有的网格项目，我可以为它们添加一些样式，我会给它们一个白色的背景色，以便区分它们，并且还会设置一些字体大小和内边距，也许还会让它们居中，所以只是添加一些额外的CSS。
- en: properties in order to make it display，the way I want to but the important ones。to
    care about here our display is grid，and then I'm specifying here's how the。grid
    should be laid out how much space，between columns how much space between。![](img/d15ab487c4bc1743a9156bbc67f2189c_23.png)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 属性以便于按照我想要的方式显示，但这里需要关注的重要属性是显示为grid，然后我正在指定网格的布局方式，列之间的空间有多少，行之间的空间有多少。![](img/d15ab487c4bc1743a9156bbc67f2189c_23.png)
- en: rows and how wide are each of those rows，going to be now if I open up grid dot。HTML
    here's what that grid looks like I，now have a first column 200 pixels wide。a second
    column also 200 pixels wide and，a third column that's going to resize。![](img/d15ab487c4bc1743a9156bbc67f2189c_25.png)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 行和每一行的宽度，现在如果我打开grid.html，这就是那个网格的样子，我现在有一个宽200像素的第一列，一个宽200像素的第二列，还有一列将会自动调整大小。![](img/d15ab487c4bc1743a9156bbc67f2189c_25.png)
- en: dynamically based on how wide or how，narrow my screen happens to be so as I。![](img/d15ab487c4bc1743a9156bbc67f2189c_27.png)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 动态地基于我的屏幕有多宽或多窄，因此当我。![](img/d15ab487c4bc1743a9156bbc67f2189c_27.png)
- en: shrink the screen the third column，shrinks with it as I grow the screen it。![](img/d15ab487c4bc1743a9156bbc67f2189c_29.png)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当屏幕缩小时，第三列也随之缩小，而当我扩大屏幕时，它。![](img/d15ab487c4bc1743a9156bbc67f2189c_29.png)
- en: also grows alongside with how big this。![](img/d15ab487c4bc1743a9156bbc67f2189c_31.png)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 也随之增长，取决于这个。![](img/d15ab487c4bc1743a9156bbc67f2189c_31.png)
- en: window happens to be and so flexbox in，grid are some very powerful tools that。we
    can use just to make it easier for us。![](img/d15ab487c4bc1743a9156bbc67f2189c_33.png)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口的情况，所以flexbox和grid是我们可以使用的一些非常强大的工具，可以让我们更轻松地实现这些功能。![](img/d15ab487c4bc1743a9156bbc67f2189c_33.png)
- en: to be able to use mobile responsive，design to be able to make sure that our。pages
    look good no matter what kind，of browser or what kind of device the。user is using
    in order to look at our，page but it turns out that our exists a。lot of libraries
    out there that do a lot，of this for us some people that have。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够使用移动响应设计，确保我们的页面在任何浏览器或设备上都能美观展示，但事实证明，存在许多库可以为我们处理很多这些问题，有些人可能会。
- en: already written CSS code to make our，text look good to make our buttons look。good
    in order to make sure that things，are mobile responsive and one of those。is called
    bootstrap bootstrap is a very，popular CSS library that we can use in。order to
    use some styling that they have，written such that we don't need to write。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 已经写好的 CSS 代码让我们的文本看起来不错，让我们的按钮看起来不错，以确保东西。具有移动响应性，其中一个叫做 bootstrap，bootstrap
    是一个非常流行的 CSS 库，我们可以用它来。使用他们已经写好的样式，这样我们就不需要写。
- en: all the styling from scratch so this is，what bootstraps website looks like I'll。go
    ahead and show it to you now just to，give you a sampling for what's available。inside
    of a library like bootstrap if I，go to get bootstrap calm here's。bootstraps website
    and if I go to their，documentation on this first link here I。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 所有样式从头开始，所以这是 bootstrap 网站的样子。我会继续给你展示，现在只是给你一个在像 bootstrap 这样的库中可用的样本。如果我去
    get bootstrap calm，这里是 bootstrap 的网站，如果我去他们的。文档，在这个第一个链接里，我。
- en: can look at all of the bootstrap，components that I'm given access to。these are
    things like alerts for example，that here's an alert that's styled in a。very particular
    way it's in a specific，font it's gotten a certain amount of。padding in certain
    colors and if I want，to just copy this alert once I've used。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 可以查看所有给我访问的 bootstrap 组件。这些东西，比如警报，例如，这里有一个以非常特定的方式样式化的警报，它有特定的字体，有一定的。填充和某些颜色，如果我想。复制这个警报，使用后。
- en: bootstraps code I can just apply certain，classes to a div and bootstrap will。handle
    the process of applying the right，styles for me I don't need to write all。of these
    styles by myself from scratch，bootstraps written a lot of the styling。already
    so how do you actually go about，using bootstrap well to get started with。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: bootstrap 的代码，我可以简单地对一个 div 应用某些。类，bootstrap 会为我处理应用正确的。样式的过程，我不需要从头开始编写所有。的这些样式，bootstrap
    已经写了很多样式。那如何实际使用 bootstrap 呢？要开始使用。
- en: bootstrap all you need to do is copy the。![](img/d15ab487c4bc1743a9156bbc67f2189c_35.png)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: bootstrap，你需要做的就是复制。![](img/d15ab487c4bc1743a9156bbc67f2189c_35.png)
- en: CSS link the bootstrap gives you to the，top of your file so if I take the CSS。link
    and then go back to something like。![](img/d15ab487c4bc1743a9156bbc67f2189c_37.png)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 链接，bootstrap 提供的链接，放在你文件的顶部，所以如果我拿这个 CSS。链接，然后返回到像。![](img/d15ab487c4bc1743a9156bbc67f2189c_37.png)
- en: hello dot HTML which you'll recall，originally looks something like this。![](img/d15ab487c4bc1743a9156bbc67f2189c_39.png)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: hello dot HTML，你会记得，它最初看起来像这样。![](img/d15ab487c4bc1743a9156bbc67f2189c_39.png)
- en: just hello world，I can add some bootstrap to it to say。![](img/d15ab487c4bc1743a9156bbc67f2189c_41.png)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 就是 hello world，我可以加一些 bootstrap 使其更好看。![](img/d15ab487c4bc1743a9156bbc67f2189c_41.png)
- en: alright I would like to take this HTML，file and apply bootstrap styling to it。to
    make it look a little bit nicer，so I refresh the page and now you'll。notice bootstraps
    chosen a custom font，for me just to make things look a little。nicer in bootstraps
    own eyes and now if，I want to add bootstrap elements I can。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我想把这个 HTML 文件应用 bootstrap 样式，让它看起来更好看，所以我刷新页面，现在你会。注意到 bootstrap 为我选择了一个自定义字体。让事情在
    bootstrap 自己眼里看起来更好，如果我想添加 bootstrap 元素，我可以。
- en: say all right let me go to their，components and I want to add an alert I。can
    just copy their alert code here's。![](img/d15ab487c4bc1743a9156bbc67f2189c_43.png)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 说好吧，让我去他们的组件，我想添加一个警报，我可以直接复制他们的警报代码，这里是。![](img/d15ab487c4bc1743a9156bbc67f2189c_43.png)
- en: their alert code for a primary alert an，alert that looks blue and I can just。![](img/d15ab487c4bc1743a9156bbc67f2189c_45.png)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的主要警报代码是一个，看起来是蓝色的警报，我可以。![](img/d15ab487c4bc1743a9156bbc67f2189c_45.png)
- en: inside the body of my page go ahead and，add an alert and maybe change the text。here
    is my alert for example now when I，reload hello dot HTML I now see an alert。that
    shows up styled according to，bootstrap styling and again I can change。that styling
    just by changing these，classes so a primary alert shows up as。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在我页面的主体内继续添加一个警报，也许改变文本。这里是我的警报，例如现在当我重新加载 hello dot HTML，我看到一个根据 bootstrap
    样式显示的警报。再次，我可以通过更改这些。类来改变那个样式，所以一个主要的警报显示为。
- en: blue a success alert shows up as green a。![](img/d15ab487c4bc1743a9156bbc67f2189c_47.png)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 成功警报显示为绿色。![](img/d15ab487c4bc1743a9156bbc67f2189c_47.png)
- en: danger alert is red so if I want to give，a danger alert the user is doing。something
    wrong on the webpage for，example I can change alert primary here。![](img/d15ab487c4bc1743a9156bbc67f2189c_49.png)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 危险警报是红色的，如果我想给用户一个危险警报，告诉他们在网页上做错了什么，我可以把警报改为主要的。![](img/d15ab487c4bc1743a9156bbc67f2189c_49.png)
- en: inside my HTML to something like alert，danger instead and now when i refresh。![](img/d15ab487c4bc1743a9156bbc67f2189c_51.png)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 将我的HTML中的内容改为警报危险，然后在刷新时。![](img/d15ab487c4bc1743a9156bbc67f2189c_51.png)
- en: this page I now see the alert shows up，as red instead of blue so bootstrap。gives
    us access to a lot of these，various different types of components。different ways
    of adding breadcrumbs and，alerts and carousels and other elements。to our page
    just to make it easy to make，our page look good very very quickly。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我看到警报显示为红色而不是蓝色，所以bootstrap让我们可以使用许多不同类型的组件、不同方式添加面包屑、警报、轮播以及其他元素到我们的页面上，便于快速美化页面。
- en: without having to worry too much about，writing our own CSS because bootstraps。written
    a lot of that for us bootstrap，even includes a way to make sure that。webpages
    are mobile responsive using，something called bootstraps column model。so I'll show
    you an example of that now，bootstrap divides its page into twelve。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 而无需过多担心自己编写CSS，因为bootstrap为我们编写了很多内容，bootstrap甚至包括了一种确保网页在移动设备上响应式的方法，使用称为bootstrap列模型的东西。我现在给你展示一个例子，bootstrap将其页面分成十二个单位。
- en: distinct columns so one thing I can do，is I've pulled this up in an example
    I。have an advanced called column zero HTML，notice that inside of the body of my。page
    now I have a div whose classes，container and then a div whose classes。row and
    bootstrap divides every row into，a twelve unit column。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 明确的列，所以我可以做的一件事是，我在一个名为列零的HTML示例中拉出了这个，注意在我的页面主体中，现在我有一个类为container的div，还有一个类为row的div，bootstrap将每行分成十二个单位的列。
- en: so here for example I have a whole bunch，of divs that are each three unit columns。![](img/d15ab487c4bc1743a9156bbc67f2189c_53.png)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这里我有一大堆每个宽度为三的div。![](img/d15ab487c4bc1743a9156bbc67f2189c_53.png)
- en: so if I have four three unit columns，that will take up a total amount of，space
    equal to 12。meaning filling up the entirety of the。![](img/d15ab487c4bc1743a9156bbc67f2189c_55.png)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果我有四个三单位的列，它们将占用总计为12的空间，也就是填满整个页面。![](img/d15ab487c4bc1743a9156bbc67f2189c_55.png)
- en: screen so if I now open up source，columns zero dot HTML here's what that。![](img/d15ab487c4bc1743a9156bbc67f2189c_57.png)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕，所以如果我现在打开源代码，columns zero dot HTML，看看这个。![](img/d15ab487c4bc1743a9156bbc67f2189c_57.png)
- en: looks like I have four columns each of，which is of width three and as a result。![](img/d15ab487c4bc1743a9156bbc67f2189c_59.png)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我有四列，每列宽度为三，因此。![](img/d15ab487c4bc1743a9156bbc67f2189c_59.png)
- en: as I shrink it those columns will，automatically resize to make sure that。![](img/d15ab487c4bc1743a9156bbc67f2189c_61.png)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当我缩小时，这些列将自动调整大小，以确保。![](img/d15ab487c4bc1743a9156bbc67f2189c_61.png)
- en: they're always the appropriate size now，as long as they add up to 12 they don't。all
    need to be the same size so for。![](img/d15ab487c4bc1743a9156bbc67f2189c_63.png)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在它们的大小总是合适的，只要加起来是12，它们不需要都是相同的大小。![](img/d15ab487c4bc1743a9156bbc67f2189c_63.png)
- en: example if I only wanted three columns，instead of four I could get rid of the。fourth
    column by deleting those rows and，maybe change the second column in。set of to
    being a column of size three，let's make it a column of size six so。there's a length
    six column instead and，now if i refresh the page now suddenly I。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我只想要三列而不是四列，我可以通过删除那些行来去掉第四列，或许将第二列的大小改为三，改为大小六的列。现在如果我刷新页面，突然我就得到了。
- en: see three columns where the middle one，is twice as large as the ones on either。end
    and as I shrink this down，I can see that it shrinks down as well。and one of the
    advantages of using，bootstrap columns is that they too can。be mobile responsive
    they too can wrap。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我看到三个列，中间的列是两边列的两倍大，随着我缩小这个页面，我也能看到它随之缩小。使用bootstrap列的一个优点是它们也可以是移动响应的，也可以换行。
- en: '![](img/d15ab487c4bc1743a9156bbc67f2189c_65.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d15ab487c4bc1743a9156bbc67f2189c_65.png)'
- en: around to other lines if they ever need，to so for example let me pull up columns。![](img/d15ab487c4bc1743a9156bbc67f2189c_67.png)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要的话，可以转到其他行，例如让我拉出列。![](img/d15ab487c4bc1743a9156bbc67f2189c_67.png)
- en: one dot HTML here for example I have a，row and let's take a look at what's。going
    on in here recall that every row，in bootstrap is divided up into twelve。column
    units but bootstrap in addition，to letting me specify how many units a。column
    should take up also lets me，specify how many units that column。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个HTML示例中，我有一行，让我们看看里面发生了什么。请记住，每行在bootstrap中被分成十二个列单位，但bootstrap除了让我指定列应该占多少单位外，还允许我指定该列的单位。
- en: should take up depending on the size of，the screen so if I'm on a large screen。as
    indicated by LG this is saying that，on a large screen this div should take。up
    three units of space and this day of，should also take up three units of space。and
    for each of these four divs on a，large screen each will take up three of。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该取决于屏幕的大小。因此，如果我在大屏幕上，如LG所示，这表示在大屏幕上，这个div应该占三个单位的空间，而这个div也应该占三个单位的空间。这四个div在大屏幕上每个都占三个单位。
- en: the total twelve units of space so，they'll all show up on one row what。happens
    on a small screen though well，here call SM for column on a small。screen I've said
    on a small screen each，column should only take up should take。up six units of
    space six or half of the，total twelve that I have in the row and。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有十二个单位的空间，因此它们都会显示在同一行上。但是在小屏幕上会发生什么呢？这里叫做SM，每列在小屏幕上我说每列应该只占六个单位的空间，即总共十二个中的一半。
- en: so I use up six here six here for a，total of twelve and one row which means。the
    next two also a size six need to go，on to a second row and bootstrap is，***********。figure
    out how exactly these elements，should ultimately be laid out so now if。I open
    up columns one dot HTML and see，what's there on a large screen I see。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这里用掉六个，那里也用掉六个，总共十二个，意味着接下来的两个六个需要放到第二行，而bootstrap是***********。确切地说，这些元素应该最终如何布局。因此，现在如果我打开columns
    one.dot HTML，看看大屏幕上有什么。
- en: four columns all on the same row but as。![](img/d15ab487c4bc1743a9156bbc67f2189c_69.png)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 四个列全部在同一行，但随着。![](img/d15ab487c4bc1743a9156bbc67f2189c_69.png)
- en: I found a smaller screen eventually，we'll see that things change I now see。the
    third and fourth sections，move down on to the second row because。on a smaller
    screen now when the caught，when the window is smaller now I only。![](img/d15ab487c4bc1743a9156bbc67f2189c_71.png)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当我找到一个更小的屏幕时，最终我们会看到一些变化。我现在看到第三和第四部分移动到第二行，因为在小屏幕上，窗口变小时，我只有。![](img/d15ab487c4bc1743a9156bbc67f2189c_71.png)
- en: have the ability to show two elements in，first，and then two on the row underneath
    that。so all in all there are a lot of，different ways to know that we can use。CSS
    in order to make sure our pages are，mobile responsive we can use bootstraps。column
    model to make sure that columns，move around whenever a size of the。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我有能力在第一行显示两个元素，然后在下面的行显示两个元素。总之，有很多不同的方法可以使用CSS，以确保我们的页面在移动设备上是响应式的。我们可以使用bootstrap的列模型来确保列在屏幕大小变化时会移动。
- en: window shrinks or grows and we can also，use things like flexbox。and the grid
    model writing our own CSS，to make sure that our page is responsive。depending on
    the size of the screen that，the user happens to be using in order to，visit our
    web page。so these are some of the very powerful，features that we get using just
    CSS but。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当窗口缩小或扩大时，我们也可以使用像flexbox和网格模型这样的东西，编写自己的CSS，以确保我们的页面是响应式的。这取决于用户正在使用的屏幕大小，以便访问我们的网站。因此，这些是我们仅使用CSS即可获得的一些非常强大的功能。
- en: one thing you might imagine is that as，we begin to write more and more CSS。there's
    going to be more and more，repetition things that appear again and。again and again
    and we've already seen，in some ways that we can minimize。redundancy in CSS we've
    seen how we can，move CSS into the Style section of our。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想象，随着我们开始编写越来越多的CSS，会有更多的重复内容不断出现，我们已经在某种程度上看到了如何最小化CSS中的冗余。我们已经看到如何将CSS移动到网页的样式部分。
- en: web page we've even seen how we can move，CSS to an entirely different file。however
    what we haven't yet seen is how，to deal with other types of redundancy。and so
    let's take a look at an example，of that now let's imagine for example。that I want
    to style multiple different，elements in different ways but using。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至看到如何将CSS移动到一个完全不同的文件。然而，我们尚未看到如何处理其他类型的冗余。因此，让我们现在来看一个例子，假设我想以不同的方式为多个不同的元素设置样式，但使用一些共同的属性。
- en: some common properties so for example，let me create a new file that all in。this
    case call variables HTML and you'll，see why in a moment I'll go ahead and。copy
    hello dot HTML but I'll get rid of，all this bootstrap inside of it let's。imagine
    that here I have in maybe two，lists an ordered list and an unordered。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我创建一个新文件，这里称为variables HTML，你马上就会明白为什么。我会继续复制hello.dot HTML，但我会去掉里面的所有bootstrap。假设这里我有两个列表，一个有序列表和一个无序列表。
- en: list where my unordered list has，unordered item maybe three unordered。![](img/d15ab487c4bc1743a9156bbc67f2189c_73.png)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中我的无序列表有可能是三个无序项。![](img/d15ab487c4bc1743a9156bbc67f2189c_73.png)
- en: items and my ordered list also has three，ordered items again just for sake of。demonstration
    I'm showing that we have。![](img/d15ab487c4bc1743a9156bbc67f2189c_75.png)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 项目，我的有序列表也有三个有序项，再次只是为了演示，我展示了我们有。![](img/d15ab487c4bc1743a9156bbc67f2189c_75.png)
- en: these two lists now and I'll open up，variables HTML just to give you a sense。for
    what that could look like we have，three unordered items in an unordered。![](img/d15ab487c4bc1743a9156bbc67f2189c_77.png)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个列表现在我将打开variables.html给你一个关于它可能看起来的感觉，我们有三个无序项在无序列表中。![](img/d15ab487c4bc1743a9156bbc67f2189c_77.png)
- en: list three ordered items in an ordered，list let's imagine I wanted to style。these
    a little bit differently maybe，inside the Style section of my page I。want to style
    the unordered list to have，a font size of 14 pixels and maybe a，color of red。and
    my ordered list I would like that to，have a font size of maybe larger 18。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在有序列表中列出三个有序项，假设我想稍微以不同的方式来为这些项添加样式，也许在页面的样式部分，我想将无序列表的字体大小设置为14像素，并可能将颜色设置为红色。而我的有序列表我希望它的字体大小也许设置为更大的18。
- en: pixels but also a color of red I want to，keep the same color for all the text
    but。I want the font sizes to be different，now if i refresh this page here's what
    I。see they are indeed of different sizes，the ordered list items are larger than。the
    unordered list items and they're all，red but there was some redundancy some。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 像素和红色的颜色，我想保持所有文本的颜色相同，但我希望字体大小有所不同。现在如果我刷新这个页面，我看到它们确实是不同的大小，有序列表项的大小大于无序列表项，并且它们都是红色，但有一些冗余。
- en: repetition that was introduced when I，was writing my CSS code in particular。when
    I was writing my CSS code I've，repeated this usage of the color red if。I ever
    want to change the color from red，to blue for example I'm going to have to。change
    my code in two different places，ultimately I'd just like for my CSS to。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在我写CSS代码时引入了重复。当我写CSS代码时，我重复使用了红色。如果我想将颜色从红色更改为蓝色，我就得在两个不同的地方修改我的代码，最终我希望我的CSS能够。
- en: be a little bit more powerful and so，that brings us to our last topic today。which
    is a language called sass and sass，is a language that is essentially an。extension
    to CSS it adds additional，features to what CSS has to offer just。to make it a
    little bit more powerful，for us to be able to use and manipulate。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 变得更强大，因此这引出了我们今天的最后一个主题，一个叫做sass的语言，sass本质上是CSS的扩展，它为CSS提供了额外的功能，只是为了让我们能够更强大地使用和操控。
- en: CSS in a way that's going to be faster，and remove some of the repetition that。we
    might have had in CSS previously and，one of the key features of sass is the。ability
    to have variables so let's take，a look at an example of this now I'm。going to
    create a new file normally when，we created our CSS files we call them。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 以一种更快的方式来使用CSS，并消除我们在以前的CSS中可能存在的一些重复，而sass的一个关键特性是能够拥有变量。因此，让我们来看一个示例，现在我要创建一个新文件，通常我们创建CSS文件时会称它们为。
- en: like variables dot CSS something dot CSS，to stand for a CSS file sass is a。different
    language though so it's going，to require a different extension we're。going to
    conventionally use dot s CSS to，stand for this is a sass file so here's。now variables
    that dot s CSS and now，what I can do in sass is I can actually。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 像variables.dot CSS这样的命名来表示CSS文件，然而sass是另一种语言，所以它需要不同的扩展名。我们通常使用.dot s CSS来表示这是一个sass文件，因此现在这是variables.dot
    s CSS，现在我可以在sass中实际。
- en: create variables in the same way that we，could create variables in a programming。language
    like Python which we'll see in，C CSS normally doesn't support variables。but sass
    is going to give us that power，in sass all variables begin with a。dollar sign
    so I can create a variable，dollar sign color to create a variable。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以我们在像Python这样的编程语言中创建变量的方式来创建变量，尽管CSS通常不支持变量，但sass将赋予我们这种能力。在sass中，所有变量都以美元符号开头，所以我可以创建一个变量$dollar
    sign color来创建一个变量。
- en: called color and I can say the variable，called color is going to be equal to
    red。so this line here line one is my way of，telling sass I'd like to create a。variable
    called color and I'd like for，its value to be red and now I can add。the same styling
    I had before，I can just use normal CSS and say for an。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个叫做color的变量，我可以说这个变量color的值将是红色。所以这一行，即第一行，是我告诉sass我想创建一个叫做color的变量，并希望它的值为红色，现在我可以添加之前的样式，我只需使用普通的CSS，并说对于一个。
- en: unordered list I'd like the font size to，be 14 pixels but the color instead
    of。saying red here I can use the name of a，variable I can say dollar sign color
    to。mean go ahead and use the value of the，variable color as the color for this。unordered
    list then for an ordered list，I'll also say font size 18 pixels and。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 无序列表中，我希望字体大小为 14 像素，但颜色不说红色，我可以使用变量的名称，可以说美元符号 color，意味着使用变量 color 的值作为这个无序列表的颜色。然后对于有序列表，我也会说字体大小为
    18 像素，并且。
- en: say color should also be this variable，called color by using a variable I've。removed
    the repetition rather than，having the word red show up in multiple。places in my
    code where I would need to，change it twice if I ever needed to。change it now I
    have defined the，variable once and I only ever need to。
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色也应该是这个叫做 color 的变量。通过使用变量，我消除了重复，而不是在多个地方出现红色这个词，如果我需要更改它，我只需要更改一次，现在我只需定义一次变量。
- en: change it in one place if I ever need to，make modifications to this particular。file
    so now let's try and link this file，instead of we'll go back to variables。HTML
    instead of putting the style code。![](img/d15ab487c4bc1743a9156bbc67f2189c_79.png)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我需要对这个特定文件进行修改，可以在一个地方进行更改。现在，让我们尝试链接这个文件，而不是返回到变量 HTML，而是放置样式代码。![](img/d15ab487c4bc1743a9156bbc67f2189c_79.png)
- en: here I'll go ahead and link a stylesheet，and say the href should be variables
    s。CSS because that's the file where my，styling exists so now let me try and。open
    up variables HTML after I've linked。![](img/d15ab487c4bc1743a9156bbc67f2189c_81.png)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我将继续链接样式表，并说 href 应该是 variables s CSS，因为这是我的样式所在的文件。现在让我尝试打开链接后的变量 HTML。![](img/d15ab487c4bc1743a9156bbc67f2189c_81.png)
- en: the CSS and all right something seems，not quite right I specified font size
    as。I specified that everything should be，read but it's not showing up everything。![](img/d15ab487c4bc1743a9156bbc67f2189c_83.png)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: CSS 和所有的东西似乎没什么问题，但我指定的字体大小。 我指定了一切应该是可读的，但它并没有显示出所有内容。![](img/d15ab487c4bc1743a9156bbc67f2189c_83.png)
- en: is showing up black and I don't see any，of the differences in sizing and the。reason
    for this is while the web browser，things like Chrome and Safari and。Firefox can
    understand CSS they can't by，default understand s CSS or sass sass is。![](img/d15ab487c4bc1743a9156bbc67f2189c_85.png)
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的是黑色，我没有看到任何大小的差异。原因是，尽管网页浏览器如 Chrome、Safari 和 Firefox 可以理解 CSS，但它们默认无法理解
    s CSS 或 sass。sass 是。![](img/d15ab487c4bc1743a9156bbc67f2189c_85.png)
- en: an extension to CSS that web browsers，don't understand out of the box so in。order
    to solve this problem once we've，it，chain convert it translate it so to。speak
    from sass into plain old CSS so，that our browser is able to understand。it and
    so you'll need to in order to do，this you'll need to install a program。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一个浏览器默认不理解的 CSS 扩展。因此，为了解决这个问题，一旦我们有了它，我们需要将其链式转换，也就是将 sass 翻译成纯老式的 CSS，以便我们的浏览器能够理解。为了做到这一点，您需要安装一个程序。
- en: called sass onto your computer you can，install it on Mac or PC or Linux and
    now。in the terminal in order to do this，compilation I'm going to say sass。variables
    dot s CSS the file I'd like to，compile colon variables dot CSS。so variables got
    SCSS is the file that I，would like to compile and the file I'd。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 叫做 sass 的程序可以安装在您的电脑上，无论是 Mac、PC 还是 Linux。现在在终端中，为了进行这个编译，我将输入 sass。variables
    dot s CSS，这是我想编译的文件：colon variables dot CSS。因此，variables dot SCSS 是我想编译的文件。
- en: like to generate is variables dot CSS，I'd like to turn my sass file into a。![](img/d15ab487c4bc1743a9156bbc67f2189c_87.png)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望生成的是 variables dot CSS，我想把我的 sass 文件转化为一个。![](img/d15ab487c4bc1743a9156bbc67f2189c_87.png)
- en: plain old CSS file I'll go ahead and，press return and the write that。![](img/d15ab487c4bc1743a9156bbc67f2189c_89.png)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 纯老式的 CSS 文件，我将继续按回车并写下。![](img/d15ab487c4bc1743a9156bbc67f2189c_89.png)
- en: compilation process is now done and so，now inside a variables data HTML instead。of
    representing the s CSS file I'm going，to reference the CSS file as the style。sheet
    because my web browser only，understands CSS it doesn't understand。sass now when
    I load the page now I see，the result I expect everything shows up。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 编译过程现在完成了，所以，现在在变量数据 HTML 中。不是代表 CSS 文件，我将要将 CSS 文件作为样式表引用。因为我的网页浏览器只理解 CSS，它不理解
    sass。现在，当我加载页面时，我看到了预期的结果，一切都显示出来了。
- en: as red and the font sizes are different，so ultimately this was a two-step。process
    I first needed to take my sass，code compile it into CSS and then I。could link
    the CSS to this particular，page but the advantage now is that if。ever I want to
    make some sort of change，I want to change the color rather than。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 还是红色，字体大小不同，因此最终这是一个两步的过程。我首先需要将我的Sass代码编译成CSS，然后我可以将CSS链接到这个特定的页面，但现在的好处是，如果我想进行某种更改，我想更改颜色而不是。
- en: change it in two places or you might，imagine in a more complex page like tens。or
    dozens of places I just go to the CS，CSS file and I change the color from red。to
    blue now if i refresh the page all，right everything is still red and it's，because
    I forgot a step。I changed the sass file but that doesn't，automatically change
    the CSS file I need。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个地方进行更改，或者你可以想象在一个更复杂的页面中，可能有十几个或几十个地方。我只需去CSS文件，将颜色从红色更改为蓝色。现在，如果我刷新页面，一切仍然是红色的，这因为我忘记了一个步骤。我更改了Sass文件，但这不会自动更改CSS文件，我需要。
- en: '![](img/d15ab487c4bc1743a9156bbc67f2189c_91.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d15ab487c4bc1743a9156bbc67f2189c_91.png)'
- en: to now recompile the CSS file by saying，sass variables des CSS variables dot
    CSS。to compile the file again using the。![](img/d15ab487c4bc1743a9156bbc67f2189c_93.png)
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 通过说 `sass variables.des CSS variables.dot CSS` 重新编译CSS文件。![](img/d15ab487c4bc1743a9156bbc67f2189c_93.png)
- en: updated sass file and now I see the，updated changes and if you're curious as。what
    the updated file looks like I'm，actually look at variables dot CSS to。see what
    code happens to be there and，though it's styled a little bit。strangely you can
    see that I have a ul，with a font size of 14 and a color of。
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的Sass文件，现在我看到了更新的变化。如果你想知道更新后的文件看起来怎么样，我其实可以查看变量.dot CSS文件，看看那里有什么代码，虽然它的样式有点奇怪，但你可以看到我有一个ul，字体大小为14，颜色为。
- en: blue so they've substituted the word，blue for this variable and they've done。the
    same thing for ordered lists as well，now in practice it's going to be pretty。annoying
    if I'm building a web page，building using sass if I constantly need。to go back
    and recompile my sass into，CSS every single time what I'd like to。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '蓝色，因此他们用这个变量替代了蓝色这个词，并且他们对有序列表也做了同样的事情。现在在实践中，如果我在构建网页，使用Sass时，如果我每次都需要回去重新编译我的Sass为CSS，这将相当烦人。我希望能够。 '
- en: '![](img/d15ab487c4bc1743a9156bbc67f2189c_95.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d15ab487c4bc1743a9156bbc67f2189c_95.png)'
- en: do is just automate that process and，sass makes it easy to do this I can just。say
    sass - - watch variables that a CSS，variables dot CSS，and what that's going to
    do is now you。see sass is watching for changes sass is，going to monitor the variables
    dot CSS。CSS file and if ever I change my sass，file sass is going to know about
    it and。
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我所要做的就是自动化这个过程，而Sass使得这一切变得简单。我可以直接说 `sass --watch variables.s CSS variables.dot
    CSS`，这样你就会看到Sass正在监视变化，Sass会监控variables.dot CSS文件。如果我改变了我的Sass文件，Sass会知道。
- en: it's automatically going to recompile，the corresponding CSS file and you can。do
    this now just with single files but。![](img/d15ab487c4bc1743a9156bbc67f2189c_97.png)
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 它会自动重新编译对应的CSS文件。现在你可以仅使用单个文件来做到这一点，但。![](img/d15ab487c4bc1743a9156bbc67f2189c_97.png)
- en: entire directories as well if you have，multiple different sass files so now。what
    I can do is if in the variables s，CSS file I change the color instead of。![](img/d15ab487c4bc1743a9156bbc67f2189c_99.png)
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有多个不同的Sass文件，也可以对整个目录进行处理。那么现在我可以做的是，如果在变量的CSS文件中更改颜色，而不是。![](img/d15ab487c4bc1743a9156bbc67f2189c_99.png)
- en: blue I now want it to be green for，example I now save the variables that s。CSS
    file and now without doing anything，take a look at my terminal sass detected。a
    change to variables s CSS so it gave。![](img/d15ab487c4bc1743a9156bbc67f2189c_101.png)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝色，我现在想要将其更改为绿色。例如，我现在保存了variables.s CSS文件，现在在没有做任何事情的情况下，看看我的终端，Sass检测到了对variables.s
    CSS的更改，因此它给。![](img/d15ab487c4bc1743a9156bbc67f2189c_101.png)
- en: me a new version of my original CSS file，if I go back to my web browser now。![](img/d15ab487c4bc1743a9156bbc67f2189c_103.png)
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 给我一个我原始CSS文件的新版本，如果我现在回到我的网页浏览器。![](img/d15ab487c4bc1743a9156bbc67f2189c_103.png)
- en: refresh the page now all of the text is，green as I would expect it to be so。that's
    one of the very powerful features，that sass gives us it gives us the。ability to
    add variables to our CSS code，just to factor out commonalities if。there are collin
    fonts common colors，common borders common styling that i。
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在刷新页面，所有文本都是绿色的，这正是我所期望的。这是**Sass**给我们带来的一个非常强大的特性，它让我们能够将变量添加到我们的CSS代码中，以提取共同点。如果有重复的字体、常用的颜色、常见的边框或样式，我可以。
- en: want to apply to a lot of different，things it becomes much easier just to。use
    sass in order to do so and finally，we'll take a look at a couple of other。features
    that sass gives us the ability，to do one of them is the ability to nest。CSS selectors
    inside of other CSS，selectors so one thing you've seen so。
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 想要应用于很多不同的东西，使用sass变得更简单，最后，我们将看看sass给我们能力的其他几个特性，其中之一是能够嵌套。CSS选择器在其他CSS选择器内部，所以你已经看到的一件事是。
- en: far for example is that in CSS if i，wanted to style all of the unordered。lists
    that are inside of divs for，example i could say like div arrow。unordered list
    in order to style，unordered lists that are inside of divs。what CSS what sass will
    do is that will，give us a bit of a nicer syntax for。
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果在CSS中，我想样式化所有在div内部的无序列表，我可以说像div箭头无序列表，以便样式化在div内部的无序列表。sass会给我们一种更好的语法。
- en: doing this type of thing in particular，by allowing us to nest CSS inside of。other
    pieces of CSS so just as an，example of this i'll go ahead and open。up a file i
    already brought called，nesting HTML and so here's what we might。see inside of
    nesting dot HTML here's，the body of the page inside the body of。
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 特别做这种事情，通过允许我们在其他CSS片段内部嵌套CSS，作为一个示例，我会打开一个我已经带来的文件，叫做，嵌套HTML，所以这是我们可能会在嵌套HTML中看到的，页面的主体在主体内部。
- en: the page I have a div inside of which is，a paragraph inside the div and also
    a，list in。ordered list or ul that's inside of this，div as well and then we also
    have a。paragraph that's outside of the div and，a list that's outside of the div
    in。![](img/d15ab487c4bc1743a9156bbc67f2189c_105.png)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 页面中我有一个div，里面是一个段落和一个，列表（无序列表或ul）也在这个div内部，我们还有一个段落在div外部，还有一个列表在div外部。![](img/d15ab487c4bc1743a9156bbc67f2189c_105.png)
- en: addition to that so a number of，different elements some of which are。located
    inside of other elements and，what I'd like to do is be very precise。about how
    I style these pages，what sass is going to allow us to do is。it lets us write a
    sass file that looks，a little something like this。
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，还有许多不同的元素，其中一些位于其他元素内部，我想做的是非常精确地样式化这些页面，sass将允许我们编写一个看起来像这样的sass文件。
- en: let's take a look at what it's doing，it's saying for the entire div I would。like
    to give that div a font size of 18，pixels and then what CSS normally。doesn't allow
    us to do but we can do now，using the power of sass is say for any。paragraphs that
    are inside of that div，go ahead and give those paragraphs a。
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它在做什么，它说对于整个div，我想给这个div一个18像素的字体大小，然后CSS通常不允许我们做的，但我们现在可以用sass的力量做到的是，对于在该div内部的任何段落，继续给这些段落一个。
- en: color of blue and for any unordered，lists that are inside of the div give。those
    unordered lists a color of green，by nesting these CSS selectors inside of。others
    we've been able to get across the，idea that I only want to style the。paragraph
    if it is inside of a div and，this is just a little bit of a nicer。
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝色的颜色，对于任何在div内部的无序列表，给这些无序列表一个绿色的颜色，通过将这些CSS选择器嵌套在其他选择器内部，我们能够表达出，我只想样式化段落，如果它在一个div内部，这只是一种更好的方式。
- en: cleaner syntax for doing some of these，more complex styling tasks that might。come
    up so what does this actually look，like if I like take this as CSS file and。turn
    it into normal CSS what is the，result going to be well let's take a。look we can
    try it out by let me go into，my nesting folder where all these files。
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 进行一些更复杂的样式任务的更干净的语法，可能会出现，那么如果我像这样把这个CSS文件，转换为普通CSS，结果会是什么呢？让我们来看看，我们可以尝试一下，让我进入，我的嵌套文件夹，里面有所有这些文件。
- en: are located and if I run sass nesting。![](img/d15ab487c4bc1743a9156bbc67f2189c_107.png)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 位于的位置，如果我运行sass嵌套。![](img/d15ab487c4bc1743a9156bbc67f2189c_107.png)
- en: data CSS turn it into nesting dot CSS，now let's open up nesting CSS and see。what
    it looks like here it's turned into，take all of the divs that give them a。font
    size of 18 pixels and then we're，using the same descendant selector。notation that
    we saw before where all，the paragraphs inside of Dizz should be。
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 数据CSS将其转换为嵌套的点CSS，现在让我们打开嵌套CSS，看看。它在这里的样子，变成了，给所有div一个18像素的字体大小，然后我们，使用之前看到的相同后代选择器。表示法，所有在Dizz内的段落应该是。
- en: colored blue all the unordered lists，inside of a div should be colored green。and
    this certainly works and we could，have just written this CSS from the。beginning
    but it can be a little bit，cleaner a little bit easier to read to。use sass in
    order to really say，paragraphs inside of dans should be。
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 所有未排序列表的颜色应为绿色，并且这确实有效，我们可以从一开始就写这个 CSS，但使用 sass 可以更干净，更易于阅读，真正表达段落应在。
- en: structured this way unordered lists are，styled in some other way and using this。nesting
    approach just makes it often，easier to take a look at this s CSS page，and。really
    understand how all of the。![](img/d15ab487c4bc1743a9156bbc67f2189c_109.png)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式结构化，未排序列表以其他方式进行样式，使用这种嵌套方法通常使我们更容易查看这个 CSS 页面，并且。![](img/d15ab487c4bc1743a9156bbc67f2189c_109.png)
- en: different style code interacts with each，other so after all of this now if I
    open。![](img/d15ab487c4bc1743a9156bbc67f2189c_111.png)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 不同样式代码彼此之间的交互，所以经过这一切，如果我打开。![](img/d15ab487c4bc1743a9156bbc67f2189c_111.png)
- en: up nesting HTML we might see something，that looks a little something like this。the
    paragraph inside the daiva and the，list inside of the div those both get。changes
    to the way that they've been，styled but unlike them these paragraphs。outside of
    the David and the list that，is also outside of the div those get。
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在嵌套 HTML 时，我们可能会看到像这样的东西。段落位于 div 内部，列表也在 div 内部，这两者的样式都发生了变化，但与之不同的是，这些段落位于
    David 外部，列表也位于 div 外部，它们的样式。
- en: styled a little bit differently so two，features now we've seen inside of sass。we've
    first seen the ability to have，variables to make sure we're not。repeating ourselves
    in many places，throughout the code and now we've seen。the ability to nest CSS
    selectors inside。
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 样式有所不同，所以现在我们在 sass 中看到的两个功能。我们首先看到了拥有变量的能力，以确保我们在代码的许多地方不重复自己，现在我们看到了将 CSS
    选择器嵌套的能力。
- en: '![](img/d15ab487c4bc1743a9156bbc67f2189c_113.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d15ab487c4bc1743a9156bbc67f2189c_113.png)'
- en: of each other by taking advantage of，sass and finally we'll take a look at。one
    last feature that sass is going to，give us and that is something called。inheritance
    if we have certain CSS，selectors that are related to other CSS。selectors but they're
    maybe adding some，additional information and in this case。
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用 sass 之间的关系，最后我们将看一下 sass 将给我们的最后一个功能，这被称为继承。如果我们有某些 CSS 选择器与其他 CSS 选择器相关，但它们可能添加了一些额外的信息，在这种情况下。
- en: I'm actually going to show you the。![](img/d15ab487c4bc1743a9156bbc67f2189c_115.png)
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我实际上要向你展示。![](img/d15ab487c4bc1743a9156bbc67f2189c_115.png)
- en: finished product first so let's go into，inheritance and let me open up。inheritance
    dot HTML and here you see，I've tried to almost implement bootstrap。style alert
    messages in HTML I have a，success message up at the top a warning。message and
    then an error message in，each of these messages you'll notice our。
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 首先完成产品，让我们进入继承，并打开 inheritance.html。在这里你可以看到，我几乎尝试实现了 bootstrap。样式警报消息在 HTML
    中，我有一个位于顶部的成功消息，一个警告消息，然后是每条消息中的错误消息，你会注意到我们的。
- en: style differently in particular they're。![](img/d15ab487c4bc1743a9156bbc67f2189c_117.png)
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以不同的方式进行样式，尤其是它们。![](img/d15ab487c4bc1743a9156bbc67f2189c_117.png)
- en: each a different color but despite that，they share a lot in common they share
    a。common border they share a common font，they share a common size and many other。properties
    are all shared between these，elements there are just some things that。are a little
    bit different about them I，could have written three different CSS。
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 每个颜色不同，但尽管如此，它们有很多共同点，它们共享一个公共边框，共享一个公共字体，共享一个共同的大小，以及许多其他属性都在这些元素之间共享，只是它们之间有一些不同的地方，我本可以写三种不同的
    CSS。
- en: selectors to deal with all of these，cases but there might be some repetition。there
    so here's what I can do by taking，advantage of the features that sass。gives me
    let me go ahead and look at，inheritance s CSS to look at the code。for doing this
    and it looks a little bit，cryptic at first but here's what I've。
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器处理所有这些情况，但可能会有一些重复。所以我可以利用 sass 提供的功能，让我们看看 inheritance 的 CSS，查看代码。虽然一开始看起来有点晦涩，但这就是我所做的。
- en: defined I've here defined using a % that，this is what a generic message is going。to
    be something that I can extend later，to add additional information to all of。the
    messages whether they be success，messages or danger messages or warning，same。they're
    all going to have the same，border they're all gonna have the same。
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里定义了一个%，这就是通用消息将是什么，我可以稍后扩展以添加额外信息到所有消息，无论是成功消息、危险消息还是警告消息。它们都会有相同的边框。
- en: padding and margin spacing around and，outside of it but each of the specific。messages
    are going to be slightly，different how are they different well，let's take a look
    down here。anything with a class of success I'm，going to say extends this message
    and by。extends this message what I mean is that，anything with a class of success
    is。
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在它周围添加填充和边距，但每个特定消息会略有不同。它们有什么不同呢？让我们来看这里。任何具有成功类的内容，我将说它扩展了这个消息，通过扩展这个消息，我的意思是，任何具有成功类的内容。
- en: going to inherit all of these CSS，properties the font the border the。padding
    and the margin but it's going to，add additional information to it in。particular
    we're going to add a color，we're going to say that for success。messages the background
    color is going，to be green I've extended the basics of。
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 将会继承所有这些CSS属性，包括字体、边框、填充和边距，但它会添加额外的信息。特别是，我们将添加一个颜色，成功消息的背景颜色将是绿色，我扩展了。
- en: what a message is but said that this，message in particular has some。additional
    style that we're going to，assign to it as well and the other two。messages behave
    in very similar ways my，warning message extends the message but。instead says the
    background color should，be orange and finally the error message。
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 消息是什么，但特别说这个消息有一些额外的样式，我们也将分配给它，其他两个消息的行为非常相似，我的警告消息扩展了消息，但背景颜色应该是橙色，最后错误消息。
- en: also extends the message but this time，gives us a background color of red。instead
    so now when you compile this all，together into inheritance dot CSS which。are compiled
    in advance this is what，this is ultimately going to look like it。translates what
    I've written into saying，all right success and warning and errors。
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这也扩展了消息，但这次，给我们一个红色的背景颜色。因此，现在当你将所有这些编译到 inheritance.dot CSS 中时，预先编译的就是这个，最终会看起来像这样。它将我写的内容翻译为成功、警告和错误。
- en: should have all of these properties but，success should also have this background。color
    warning should have this。![](img/d15ab487c4bc1743a9156bbc67f2189c_119.png)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 应该有所有这些属性，但成功还应该有这个背景颜色，警告应该有这个。![](img/d15ab487c4bc1743a9156bbc67f2189c_119.png)
- en: background color error should have this，background color so you again we could。have
    written this CSS there's nothing，that SAS does that we couldn't have。written ourselves
    using CSS SAS we'll，just make it a little bit easier to do。many of the same things
    so we can write，things on a little bit of a nicer syntax。
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 背景颜色错误应该有这个，背景颜色所以我们又可以。我们可以写这段CSS，SAS没有做我们自己用CSS不能做到的。SAS只会让我们更容易做很多相同的事情，所以我们可以用更好的语法写东西。
- en: by saying the success message inherits，from the message but adds a background。color
    and likewise the warning and error，messages do the same thing but in a。simpler
    syntax and a bit of a nicer，syntax such that later we can let the。computer take
    the SAS code and compile，it into CSS instead and so those now are。
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 通过说成功消息从消息中继承，但添加了背景颜色，警告和错误消息也是如此，但使用更简单、更好的语法，这样我们就可以让计算机将SAS代码编译成CSS。
- en: some of the fundamentals of what we've，seen in building web programs using HTML。and
    CSS we've seen how we can use HTML，to describe the structure of our web。page deciding
    what's going to show up，where on the page and then we looked at。CSS and how CSS
    can then be used to，style our，Paige in various different ways adding。
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们在使用HTML和CSS构建网页程序时所见的一些基本知识。我们看到如何使用HTML描述网页的结构，决定页面上要显示什么，然后我们看了CSS，如何用不同的方式来美化我们的页面。
- en: custom styling like colors and layouts，but also thinking about things like。responsive
    design like what happens on a，mobile screen or on a tablet and making。sure that
    our web pages look good on，those screens too and then finally we。took a look at
    sass an extension to CSS，that adds a number of additional。
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义样式，比如颜色和布局，但也考虑响应式设计，比如在手机屏幕或平板上的表现，确保我们的网页在这些屏幕上看起来也不错，最后我们看了一下Sass，作为CSS的扩展，增加了许多额外的功能。
- en: features features like variables and，nesting and inheritance that make it。even
    easier for us to be able to write，style that we can apply to our webpages。from
    there we're going to be，transitioning now to looking at how we。can use HTML and
    CSS in larger web，applications as we begin to incorporate。
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 具有变量、嵌套和继承等特性的功能，使我们更容易编写可以应用于网页的样式。
- en: other tools tools like Python and，JavaScript and other languages and。frameworks
    altogether so this is web，programming with Python and JavaScript。![](img/d15ab487c4bc1743a9156bbc67f2189c_121.png)
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将过渡到如何在更大的网络应用中使用HTML和CSS，同时开始整合其他工具，如Python、JavaScript和其他语言及框架。这就是使用Python和JavaScript的网络编程。![](img/d15ab487c4bc1743a9156bbc67f2189c_121.png)
