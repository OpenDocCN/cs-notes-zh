- en: 2\.   Sorting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\.   排序
- en: 原文：[https://algs4.cs.princeton.edu/20sorting](https://algs4.cs.princeton.edu/20sorting)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://algs4.cs.princeton.edu/20sorting](https://algs4.cs.princeton.edu/20sorting)
- en: Overview.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述。
- en: Sorting is the process of rearranging a sequence of objects so as to put them
    in some logical order. Sorting plays a major role in commercial data processing
    and in modern scientific computing. Applications abound in transaction processing,
    combinatorial optimization, astrophysics, molecular dynamics, linguistics, genomics,
    weather prediction, and many other fields.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 排序是重新排列一系列对象的过程，使它们按照某种逻辑顺序排列。排序在商业数据处理和现代科学计算中起着重要作用。在交易处理、组合优化、天体物理学、分子动力学、语言学、基因组学、天气预测等领域都有广泛的应用。
- en: In this chapter, we consider several classical sorting methods and an efficient
    implementation of a fundamental data type known as the priority queue. We discuss
    the theoretical basis for comparing sorting algorithms and conclude the chapter
    with a survey of applications of sorting and priority-queue algorithms.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们考虑了几种经典的排序方法以及一个称为优先队列的基本数据类型的高效实现。我们讨论了比较排序算法的理论基础，并以对排序和优先队列算法的应用进行调查来结束本章。
- en: '[*2.1 Elementary Sorts*](../21elementary) introduces selection sort, insertion
    sort, and shellsort.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*2.1 Elementary Sorts*](../21elementary)介绍了选择排序、插入排序和希尔排序。'
- en: '[*2.2 Mergesort*](../22mergesort) describes megesort, a sorting algorithm that
    is guaranteed to run in linearithmic time.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*2.2 Mergesort*](../22mergesort)描述了归并排序，这是一种能够保证在线性对数时间内运行的排序算法。'
- en: '[*2.3 Quicksort*](../23quicksort) describes quicksort, which is used more widely
    than any other sorting algorithm.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*2.3 Quicksort*](../23quicksort)描述了快速排序，它比其他任何排序算法都被广泛使用。'
- en: '[*2.4 Priority Queues*](../24pq) introduces the priority queue data type and
    an efficient implementation using a binary heap. It also introdues heapsort.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*2.4 Priority Queues*](../24pq)介绍了优先队列数据类型以及使用二叉堆的高效实现。它还介绍了堆排序。'
- en: '[*2.5 Applications*](../25applications) describes applications of sorting,
    including using alternate orderings, selection, the system sort, and stability.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*2.5 Applications*](../25applications)描述了排序的应用，包括使用替代排序、选择、系统排序和稳定性。'
- en: Java programs in this chapter.
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本章的Java程序。
- en: Below is a list of Java programs in this chapter. Click on the program name
    to access the Java code; click on the reference number for a brief description;
    read the textbook for a full discussion.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本章中的Java程序列表。点击程序名称以访问Java代码；点击参考号以获取简要描述；阅读教材以获取全面讨论。
- en: '| REF | PROGRAM | DESCRIPTION / JAVADOC |'
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| REF | PROGRAM | DESCRIPTION / JAVADOC |'
- en: '| [2.1](../21elementary/index.php#2.1) | [Insertion.java](../21elementary/Insertion.java.html
    "insertion sort") | insertion sort |'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [2.1](../21elementary/index.php#2.1) | [Insertion.java](../21elementary/Insertion.java.html
    "插入排序") | 插入排序 |'
- en: '| [-](../21elementary/index.php#-) | [InsertionX.java](../21elementary/InsertionX.java.html
    "insertion sort (optimized)") | insertion sort (optimized) |'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../21elementary/index.php#-) | [InsertionX.java](../21elementary/InsertionX.java.html
    "插入排序（优化版）") | 插入排序（优化版） |'
- en: '| [-](../21elementary/index.php#-) | [BinaryInsertion.java](../21elementary/BinaryInsertion.java.html
    "binary insertion sort") | binary insertion sort |'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../21elementary/index.php#-) | [BinaryInsertion.java](../21elementary/BinaryInsertion.java.html
    "二分插入排序") | 二分插入排序 |'
- en: '| [2.2](../21elementary/index.php#2.2) | [Selection.java](../21elementary/Selection.java.html
    "selection sort") | selection sort |'
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [2.2](../21elementary/index.php#2.2) | [Selection.java](../21elementary/Selection.java.html
    "选择排序") | 选择排序 |'
- en: '| [2.3](../21elementary/index.php#2.3) | [Shell.java](../21elementary/Shell.java.html
    "shellsort") | shellsort |'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [2.3](../21elementary/index.php#2.3) | [Shell.java](../21elementary/Shell.java.html
    "希尔排序") | 希尔排序 |'
- en: '| [2.4](../22mergesort/index.php#2.4) | [Merge.java](../22mergesort/Merge.java.html
    "top-down mergesort") | top-down mergesort |'
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [2.4](../22mergesort/index.php#2.4) | [Merge.java](../22mergesort/Merge.java.html
    "自顶向下的归并排序") | 自顶向下的归并排序 |'
- en: '| [-](../22mergesort/index.php#-) | [MergeBU.java](../22mergesort/MergeBU.java.html
    "bottom-up mergesort") | bottom-up mergesort |'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../22mergesort/index.php#-) | [MergeBU.java](../22mergesort/MergeBU.java.html
    "自底向上的归并排序") | 自底向上的归并排序 |'
- en: '| [-](../22mergesort/index.php#-) | [MergeX.java](../22mergesort/MergeX.java.html
    "optimized mergesort") | optimized mergesort |'
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../22mergesort/index.php#-) | [MergeX.java](../22mergesort/MergeX.java.html
    "优化的归并排序") | 优化的归并排序 |'
- en: '| [-](../22mergesort/index.php#-) | [Inversions.java](../22mergesort/Inversions.java.html
    "number of inversions") | number of inversions |'
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../22mergesort/index.php#-) | [Inversions.java](../22mergesort/Inversions.java.html
    "逆序对数量") | 逆序对数量 |'
- en: '| [2.5](../23quicksort/index.php#2.5) | [Quick.java](../23quicksort/Quick.java.html
    "quicksort") | quicksort |'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [2.5](../23quicksort/index.php#2.5) | [Quick.java](../23quicksort/Quick.java.html
    "快速排序") | 快速排序 |'
- en: '| [-](../23quicksort/index.php#-) | [Quick3way.java](../23quicksort/Quick3way.java.html
    "quicksort with 3-way partitioning") | quicksort with 3-way partitioning |'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../23quicksort/index.php#-) | [Quick3way.java](../23quicksort/Quick3way.java.html
    "三向切分的快速排序") | 三向切分的快速排序 |'
- en: '| [-](../23quicksort/index.php#-) | [QuickX.java](../23quicksort/QuickX.java.html
    "optimized 2-way quicksort") | optimized 2-way quicksort |'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../23quicksort/index.php#-) | [QuickX.java](../23quicksort/QuickX.java.html
    "优化的双向快速排序") | 优化的双向快速排序 |'
- en: '| [-](../23quicksort/index.php#-) | [QuickBentleyMcIlroy.java](../23quicksort/QuickBentleyMcIlroy.java.html
    "optimized 3-way quicksort") | optimized 3-way quicksort |'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../23quicksort/index.php#-) | [QuickBentleyMcIlroy.java](../23quicksort/QuickBentleyMcIlroy.java.html
    "优化的三向快速排序") | 优化的三向快速排序 |'
- en: '| [-](../24pq/index.php#-) | [TopM.java](../24pq/TopM.java.html "priority queue
    client") | priority queue client |'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../24pq/index.php#-) | [TopM.java](../24pq/TopM.java.html "优先队列客户端")
    | 优先队列客户端 |'
- en: '| [2.6](../24pq/index.php#2.6) | [MaxPQ.java](../24pq/MaxPQ.java.html "max
    heap priority queue") | max heap priority queue |'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [2.6](../24pq/index.php#2.6) | [MaxPQ.java](../24pq/MaxPQ.java.html "最大堆优先队列")
    | 最大堆优先队列 |'
- en: '| [-](../24pq/index.php#-) | [MinPQ.java](../24pq/MinPQ.java.html "min heap
    priority queue") | min heap priority queue |'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../24pq/index.php#-) | [MinPQ.java](../24pq/MinPQ.java.html "最小堆优先队列")
    | 最小堆优先队列 |'
- en: '| [-](../24pq/index.php#-) | [IndexMinPQ.java](../24pq/IndexMinPQ.java.html
    "index min heap priority queue") | index min heap priority queue |'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../24pq/index.php#-) | [IndexMinPQ.java](../24pq/IndexMinPQ.java.html
    "index min heap priority queue") | 索引最小堆优先队列 |'
- en: '| [-](../24pq/index.php#-) | [IndexMaxPQ.java](../24pq/IndexMaxPQ.java.html
    "index max heap priority queue") | index max heap priority queue |'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../24pq/index.php#-) | [IndexMaxPQ.java](../24pq/IndexMaxPQ.java.html
    "index max heap priority queue") | 索引最大堆优先队列 |'
- en: '| [-](../24pq/index.php#-) | [Multiway.java](../24pq/Multiway.java.html "multiway
    merge") | multiway merge |'
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [-](../24pq/index.php#-) | [Multiway.java](../24pq/Multiway.java.html "multiway
    merge") | 多路归并 |'
- en: '| [2.7](../24pq/index.php#2.7) | [Heap.java](../24pq/Heap.java.html "heapsort")
    | heapsort |'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| [2.7](../24pq/index.php#2.7) | [Heap.java](../24pq/Heap.java.html "heapsort")
    | 堆排序 |'
- en: Sorting demos.
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排序演示。
- en: Below are some interesting sorting demos.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有趣的排序演示。
- en: '[Sorting Algorithm Animations](http://www.sorting-algorithms.com) by David
    Martin.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[排序算法动画](http://www.sorting-algorithms.com)，作者David Martin。'
- en: '[Audibilization and Visualization of Sorting Algorithms](http://panthema.net/2013/sound-of-sorting/)
    by Timo Bingmann.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[排序算法的声音和可视化](http://panthema.net/2013/sound-of-sorting/)，作者Timo Bingmann。'
- en: '[The Sound of Quicksort](https://www.youtube.com/watch?v=m1PS8IR6Td0).'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[快速排序的声音](https://www.youtube.com/watch?v=m1PS8IR6Td0)。'
- en: Robot visualizations of [quicksort](https://www.youtube.com/watch?v=aXXWXz5rF64)
    and [mergesort](https://www.youtube.com/watch?v=es2T6KY45cA).
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人可视化展示[快速排序](https://www.youtube.com/watch?v=aXXWXz5rF64)和[归并排序](https://www.youtube.com/watch?v=es2T6KY45cA)。
- en: '[Sorting visualizations](http://sorting.at) by Carlo Zapponi, using inversion
    count as a measure of progress.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Carlo Zapponi的排序可视化](http://sorting.at)，使用逆序计数作为进度的衡量标准。'
