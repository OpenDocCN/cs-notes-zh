- en: 哈佛CS50-CS ｜ 计算机科学导论(2020·完整版) - P14：L7- 数据库与SQL知识体系 1 - ShowMeAI - BV1Hh411W7Up
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛CS50-CS ｜ 计算机科学导论(2020·完整版) - P14：L7- 数据库与SQL知识体系 1 - ShowMeAI - BV1Hh411W7Up
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_0.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_0.png)'
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_1.png)'
- en: all right。![](img/f5dc569293e2d8c4779cf89dd8d3088f_3.png)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧。![](img/f5dc569293e2d8c4779cf89dd8d3088f_3.png)
- en: this is cs50 and this is week seven and，today's focus is going to be entirely
    on。![](img/f5dc569293e2d8c4779cf89dd8d3088f_5.png)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这是CS50，这是第七周，今天的重点将完全放在。![](img/f5dc569293e2d8c4779cf89dd8d3088f_5.png)
- en: data the process of collecting it the，process of storing it the process of。searching
    it and so much more，you'll recall that last week we started。off by playing around
    with a relatively，small data set we asked everyone for。what their preferred house
    at hogwarts，might be and then we proceeded to，some python。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的收集过程，存储过程，搜索过程，以及更多，你可能还记得上周我们开始时，玩弄一个相对较小的数据集，我们问了每个人，他们在霍格沃茨的首选房子是什么，然后我们继续使用了一些Python。
- en: and counting up how many people wanted，well，and we ultimately did that by using
    a。google form to collect it and we stored，all of the data in a google spreadsheet。![](img/f5dc569293e2d8c4779cf89dd8d3088f_7.png)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 统计有多少人想要，好的，最终我们是通过使用一个。谷歌表单来收集这些信息，并将所有数据存储在谷歌电子表格中。![](img/f5dc569293e2d8c4779cf89dd8d3088f_7.png)
- en: which we then exported of course，as a csv file so this week we thought。we'd
    collect a little more data and see，start using，only a spreadsheet or in turn a
    csv file。to store the data that we care about so，this url，here that you see you
    should see another。google form，this one asking you some different，questions all
    of us probably have some，perhaps。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们当然将其导出为CSV文件，所以这周我们想收集更多数据，看看开始使用，仅仅一个电子表格或转而使用一个CSV文件，来存储我们关心的数据，所以，您看到的这个网址，应该能看到另一个。谷歌表单，这个表单向您提出一些不同的问题，我们所有人可能都有一些，也许。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_9.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_9.png)'
- en: and what we'd like to do is ask everyone，to input into that form，genre or。![](img/f5dc569293e2d8c4779cf89dd8d3088f_11.png)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要做的是请每个人在那个表单中输入，类型或。![](img/f5dc569293e2d8c4779cf89dd8d3088f_11.png)
- en: show，falls so go ah**d and take a moment to，do that。![](img/f5dc569293e2d8c4779cf89dd8d3088f_13.png)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 类型，属于，所以请**花一点时间**来这样做。![](img/f5dc569293e2d8c4779cf89dd8d3088f_13.png)
- en: and if you're unable to follow along at，home what folks are looking at is a
    form。quite like this one here，whereby we're just asking them for the，title of
    their preferred tv show。and the genre or genres of，that specific tv show so go
    ah**d and，fill that out if you could。we'll keep an eye on the responses。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在家无法跟上，大家正在查看的是一个表单。就像这个表单一样，我们在询问他们，首选电视剧的标题和该特定电视剧的类型或类型，所以请**填写**一下，如果可以的话。我们会关注回应。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_15.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_15.png)'
- en: coming in we'll give everyone a few，moments to think about，their preferred tv
    show。i myself have uh been re-watching a bit，of the office，i have been watching
    a lot。of reruns of older shows i probably i，think the point is been watching too，much
    tv。during all of this but in my defense，it's on in the background while i'm。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入的时候，我们会给每个人几分钟时间思考，自己首选的电视剧。我自己最近在重看《办公室》，我看了很多旧剧的重播，我想我，看电视的时间有点多。在这一切中，不过为了辩解，它一直在背景中播放，而我在。
- en: doing work on my laptop so hopefully，that makes it okay，let me take a look at
    the responses that。have come in all right we're getting a，hundreds，of responses
    give you just another，moment or so。the question at hand again is favorite，tv show
    the title thereof，and the genre or genres into which。that tv show falls，brian
    are you okay with my starting to，look at the data it's okay if we keep。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我在我的笔记本电脑上工作，所以希望这没问题，让我看看已收集的回应。好吧，我们收到了，数百条回应，再给你一会儿。当前的问题是最喜欢的，电视剧的标题，以及该电视剧所属的类型或类型，布赖恩，你觉得我开始查看数据可以吗？如果我们继续这样也没问题。
- en: collecting some more but i'm going to go，ahead and show the top，uh few rows
    if that sounds good。all right so let's go ah**d and start to，look at some of this
    data that's come in。here is the resulting google spreadsheet，that google forms
    has created for us and，forms。this particular tool has three different，columns
    at least for this form one is a，gives us that。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 收集一些更多的信息，但我会继续展示前几行，如果这样听起来不错。好吧，所以让我们去**看一下**一些已收集的数据。这是谷歌表单为我们创建的谷歌电子表格，和表单。这个特定的工具至少有三列，用于这个表单，一列是给我们的。
- en: based on what day and time everyone was，buzzing in with their responses，for
    title。and genres i've manually bold faced it。![](img/f5dc569293e2d8c4779cf89dd8d3088f_17.png)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 根据大家在标题和类型方面反馈的日期和时间，我手动加粗了它。![](img/f5dc569293e2d8c4779cf89dd8d3088f_17.png)
- en: in advance just to make it stand out but，you'll notice that the。headings here
    title and genres perfectly，matches the question that we asked in，the google form。responses，with
    our questions and you can see here，punisher was the first。favorite tv show to
    be inputted followed，archer，another office and so forth and in the，third column。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 提前突出显示，但你会注意到这里的标题和类型完美匹配我们在谷歌表单中提出的问题。回复中，我们的问题可以看到，惩罚者是输入的第一个最喜欢的电视节目，接着是《阿奇》，《办公室》等等，在第三列。
- en: under genres you'll see that there's，something curious here while some of the。cells
    that is the little boxes，of text have just single words like，comedy or drama。you'll
    notice that some of them have a，comma separated list and that comma，separated
    list is because。some of you checked as you could，multiple check boxes to indicate
    that，drama。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在类型下，你会看到这里有一些有趣的内容，尽管某些单元格，即文本的小框框只有像喜剧或剧情这样的单词。你会注意到其中一些有一个用逗号分隔的列表，而这个逗号分隔的列表是因为你们中的一些人勾选了多个复选框以表示剧情。
- en: and also thriller and so the way google，forms handles this is a bit。lazily in
    the sense that they just drop，all of those values，as a comma separated list inside
    of the。spreadsheet itself and that's，potentially a problem if we ultimately，download
    this as a csv。now you have，commas inside in between the commas，fortunately there's
    a solution。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 还有惊悚片，因此谷歌表单处理这个问题的方式有点懒惰，因为它们只是将所有这些值作为用逗号分隔的列表放入电子表格中，如果我们最终将其下载为CSV，这可能是一个问题。现在在逗号之间又有逗号，幸运的是有解决方案。
- en: to that that we'll ultimately see so，we've got a good amount of data here in。fact
    if i keep scrolling down we'll see，a few hundred responses now。and would be nice
    to analyze this data，in some way and figure out what the most，popular tv show
    is。maybe search for new shows i might like，via their genre，so you can imagine
    some number of。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终会看到的，所以我们这里有相当多的数据。实际上，如果我继续向下滚动，我们会看到几百条回复，现在以某种方式分析这些数据并找出最受欢迎的电视节目会很好。也许通过它们的类型搜索我可能喜欢的新节目，所以你可以想象一些。
- en: queries that could be uh answered by way，consider，just，a spreadsheet like this
    all of us are。probably in the habit of using，occasionally google spreadsheets
    apple，numbers。microsoft excel or some other tool so，let's consider what spreadsheets
    are，good at。and what they are bad at would anyone，like to volunteer and answer，to
    the first of those what is a。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 查询可以通过考虑像这样的电子表格来回答，我们都可能偶尔使用谷歌电子表格、苹果数字、微软Excel或其他工具，所以让我们考虑一下电子表格擅长什么，以及它们不擅长什么。有没有人愿意自愿回答第一个问题，是什么？
- en: spreadsheet good at or good for，or not quite sure how to answer that。what do
    you use spreadsheets for，what are some useful problems they solve。uh yeah andrew
    what's your thinking on，over to andrew park oh hey um。they're very good for quickly
    sorting，okay very good for quickly sorting i。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 电子表格擅长什么，或不太确定如何回答。你用电子表格做什么，它们解决了哪些有用的问题？呃，安德鲁，你怎么看，接下来让安德鲁·帕克说说。哦，嘿，它们非常适合快速排序，好的，非常适合快速排序。
- en: like that i could click on the top of，the title column for instance。and immediately
    sort all of those titles，by alphabetically i like that。other reasons to use a
    spreadsheet what，problems do they solve what are they，good at。other thoughts on
    spreadsheets yeah how，storing large amounts of data that you，can later analyze。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 像我可以点击标题列的顶部，立刻按字母顺序对所有这些标题进行排序，我喜欢这样。使用电子表格的其他原因是什么，它们解决了哪些问题，它们擅长什么？关于电子表格的其他想法是，存储大量数据，以便你可以稍后分析。
- en: okay so storing large amounts of data，that you can later analyze it's kind of。a
    nice model for storing lots of，rows of data so to speak i will say that。there
    actually is a limit and in fact，limit is。![](img/f5dc569293e2d8c4779cf89dd8d3088f_19.png)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，存储大量数据，以便你可以稍后分析，这是一种很好的存储大量数据的模型，可以这么说。我会说实际上是有一个限制，事实上，限制是。![](img/f5dc569293e2d8c4779cf89dd8d3088f_19.png)
- en: long story short in graduate school i，research data，excel，supported rows for
    specifically i had。some 65，536 rows which was too many at that，point for excel
    at the time because。long story short if you recall from a，spreadsheets，every row
    is numbered from one on up。well unfortunately at the time microsoft。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 长话短说，在研究生院我研究数据，Excel，支持的行具体来说我有 65,536 行，这在当时对 Excel 来说已经太多了，因为长话短说，如果你回忆起电子表格，每一行都从一开始编号。不幸的是，那时微软。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_21.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_21.png)'
- en: had used a 16 bit integer。![](img/f5dc569293e2d8c4779cf89dd8d3088f_23.png)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 曾经使用过 16 位整数。！[](img/f5dc569293e2d8c4779cf89dd8d3088f_23.png)
- en: of those numbers，and it turns out the 2 to the 16th power，is roughly 65 000。so
    at that point i maxed out the total，number of rows now to peter's point。they've
    increased that in recent years，and you can actually store a lot more。data so spreadsheets
    are indeed good，at，everything because at some point you're，spreadsheet。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数字中的 2 的 16 次方大约是 65,000。所以在那时我达到了总行数的上限，现在对彼得的观点，他们在最近几年增加了这一点，你实际上可以存储更多数据，所以电子表格确实在所有方面都很好，因为在某个时刻你的电子表格。
- en: than your mac or pc can handle in fact，if you're actually trying to build an。application
    whether it's twitter or，instagram or facebook or anything。of that scale those
    companies are，certainly not storing their data suffice。it to say in a spreadsheet
    because there，would just be way too much data to use。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 比你的 Mac 或 PC 能处理的更多，事实上，如果你实际上是在尝试构建一个应用，无论是 Twitter、Instagram 还是 Facebook，或者任何那种规模的东西，这些公司肯定不会将它们的数据仅仅存储在电子表格中，因为那样会有太多数据可供使用。
- en: and no one could literally open it，on their computer so we'll need a。solution
    to that problem of scale，but i don't think we need to throw out。what works well
    about spreadsheets so，row form，but it would seem that you can also。store a lot
    of data in column form and，even though i'm only showing columns a b。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 而且没有人能真正地在他们的电脑上打开它，因此我们需要一个解决方案来解决这个规模的问题，但我认为我们不需要抛弃电子表格中有效的部分，所以以行的形式，但似乎你也可以以列的形式存储大量数据，尽管我只展示了列
    a 和 b。
- en: and c of course you've probably used，d e f，model，for how to think about rows
    versus。columns in a spreadsheet，i feel like we probably use them in a，somewhat
    different way。conceptually we might think about them a，little differently，what's
    the difference between rows and。um adding more entries like adding more，data is，those
    are within the rows but then like。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可能用过 d e f 模型来思考电子表格中的行与列，我觉得我们可能在某种程度上以稍微不同的方式使用它们，从概念上讲，我们可能会稍微不同地看待它们，行和添加更多条目（如添加更多数据）之间的区别是，那些是在行内，但像是。
- en: the actual attributes or characteristics，of the data should be in columns。exactly
    when you add more data to the。![](img/f5dc569293e2d8c4779cf89dd8d3088f_25.png)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的实际属性或特征应该在列中。确切地说，当你向其中添加更多数据时，！[](img/f5dc569293e2d8c4779cf89dd8d3088f_25.png)
- en: spreadsheet you should really be adding，to the bottom of it，adding more and
    more rows so these。things sort of grow，vertically even though of course that's，just
    a human's perception of it。they grow from top to bottom by adding，more and more
    rows but to sophia's point。your columns represent what we might，call attributes
    or，fields or any other such characteristic。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 电子表格你应该真的在底部添加数据，添加更多和更多的行，所以这些东西在垂直方向上生长，尽管当然这只是人类的感知。它们从上到下生长，通过添加更多和更多的行，但为了索非亚的观点，你的列代表我们可能称之为属性或字段或任何其他这样的特征。
- en: that kind of is a type of data that，form，timest*mp is the first column title
    is，the second column。genres is the third column and those，fields or，attributes
    properties of your data and。really decide on，in advance when you're first creating，the
    form in our case or when you're，your in。another case you should not really be
    in，the habit when using spreadsheets。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这类数据的类型是，表单，时间戳是第一列的标题，第二列是流派，第三列是那些字段或数据的属性，实际上在你第一次创建表单时，提前决定这些，在我们的案例中，或者在你其他的案例中，使用电子表格时不应该养成这样的习惯。
- en: be in the habit of adding data from left，unless，you decide to collect more types
    of data。so just because someone adds a new，favorite tv show，to your data set you
    shouldn't be adding。that from left to right in a new column，to bottom，but suppose
    that we actually decided to。collect more information from everyone，maybe that
    form had instead asked you。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 养成从左侧添加数据的习惯，除非你决定收集更多类型的数据。所以仅仅因为有人在你的数据集中添加了一部新的最爱电视剧，你不应该从左到右在新列中添加，而是向下添加，但假设我们实际上决定从每个人那里收集更多信息，也许那个表单曾问过你。
- en: for your name or your email address or，any other questions，those properties
    or attributes or fields。would belong as new columns so this is，to say we generally
    decide on the，data。in advance and then from there on out we，proceed to add add
    add more rows。not columns unless we change our mind，and need to change the schema。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你的姓名或电子邮件地址或其他问题，这些属性或字段将作为新列，因此我们通常提前决定数据，然后再添加更多行，而不是列，除非我们改变主意，需要更改架构。
- en: of our particular data so it turns out，that spreadsheets are indeed wonderfully。useful
    to peter's point for you know，large or reasonably large。data sets that um we might
    collect and，we can of course per last week export，those data sets as。csv files
    and so we can go from a，spreadsheet to a simple text file rep。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们特定数据的情况表明，电子表格确实非常有用，正如彼得所说，对于你知道的大型或合理规模的数据集，我们可以当然根据上周导出那些数据集为.csv文件，因此我们可以从电子表格转到一个简单的文本文件。
- en: stored in ascii or unicode more，generally on your own hard drive or，somewhere
    in the cloud。and you can actually think of that file，that dot csv，database。a database
    is generally speaking a file，that stores data，or it's a program that stores data
    for。you and all of us have probably thought，about or use databases in some sense，you're
    probably。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在ASCII或Unicode中，通常在你自己的硬盘上或云端的某个地方。你实际上可以把那个文件，那个.csv数据库想象成一个数据库。一般来说，数据库是一个存储数据的文件，或者是一个为你存储数据的程序，大家可能都考虑过或者在某种程度上使用过数据库。
- en: familiar with the fact that all of those，same big websites google and twitter
    and。facebook and others，use databases to store our data well，those databases are
    either just really。big files containing lots of data，or special programs that
    are storing our，data for us。and a flat file is just referring to the，design，decided，when
    storing data in simple text files。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能熟悉这些大型网站，比如谷歌、推特和脸书等，它们使用数据库存储我们的数据，而这些数据库要么是包含大量数据的巨型文件，要么是为我们存储数据的特殊程序。平面文件只是指在简单文本文件中存储数据时的设计选择。
- en: that if you want to store different，types of data like to sophia's point。different
    properties or attributes，well let's keep it simple let's just，separate those columns，aka。a
    csv you can use other things you can，use tabs there's things called，frankly you
    can use。anything you want but there is a corner，it，what if your actual data has
    a comma in。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想存储不同类型的数据，比如索非亚提到的不同属性或者特征，简单起见，我们只需分隔那些列，也就是.csv，你可以使用其他方式，使用制表符，甚至可以使用任何你想要的东西，但如果你的实际数据中包含逗号，那就会有问题。
- en: it what if the title of your favorite tv，show has a comma，what if google is
    presuming to store。genres as a comma separated list，bad things can happen if using
    a csv as。![](img/f5dc569293e2d8c4779cf89dd8d3088f_27.png)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你最喜欢的电视节目标题中有逗号，或者谷歌假设将流派存储为逗号分隔的列表，使用.csv文件时可能会出现不好的情况。
- en: your flat file database，but there's solutions to that and in，whenever you have。![](img/f5dc569293e2d8c4779cf89dd8d3088f_29.png)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于你的平面文件数据库，这里有解决方案，在你有的时候。
- en: commas inside of your csv file，you just make sure that the whole string，is double
    quoted。on the far left and far right and，anything inside of double quotes。![](img/f5dc569293e2d8c4779cf89dd8d3088f_31.png)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的.csv文件中，如果有逗号，你只需确保整个字符串在最左边和最右边都用双引号括起来，双引号内的任何内容。
- en: is not mistaken thereafter as，delineating a column，as the other commas in the
    file might so。that's all that's meant by a flat file，database and csv is perhaps
    one of the，thereof。if only because all of these programs，numbers，allow you to
    save your files as csvs now。long story short those of you who have，used fancier
    features of spreadsheets。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以免被误解为划分列，就像文件中的其他逗号一样。这就是平面文件数据库的含义，而.csv可能是其中之一，仅仅因为所有这些程序，数字，都允许你将文件保存为.csv文件。长话短说，那些使用过电子表格高级功能的人。
- en: like built-in functions and formulas and，those kinds of things，those are built-in
    and proprietary to。google spreadsheets and excel，csv，file or a tsv file or in
    a flat file，database more generally。unchanging，values so when you export the data
    what，you see is what you get and that's why。people use fancier programs like excel，and
    numbers in google spreadsheets。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 像内置函数和公式这些功能，都是谷歌电子表格和Excel专有的，.csv文件或.tsv文件，或更一般的平面文件数据库是不可更改的值，因此当你导出数据时，所见即所得，这就是为什么人们使用更高级的程序，比如Excel和谷歌电子表格。
- en: because you get more functionality，but if you want to export the data you。can
    only get indeed the raw，textual data out of it but i dare say。that's going to
    be okay in fact brian do，you mind if i go ah**d and download。this spreadsheet
    as a csv file now yep，all right i'm going to go ah**d in。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 因为你获得了更多的功能，但如果你想导出数据，你只能获取原始的文本数据，但我敢说，这将是可以的，实际上布莱恩，你介意我继续下载这个电子表格作为CSV文件吗？好的，我将继续去。
- en: google spreadsheets and go to file，download and you can see a whole bunch，of
    options pdf。web page comma separated values which is，the one i want so i'm going
    to indeed go，ahead and choose。csv from this drop down in spreadsheets，that of
    course downloaded that file for。me and now i'm going to go ah**d and go，that last
    week，i was able to upload a file into the ide。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Google表格，点击文件，下载，你会看到一大堆选项，PDF，网页，逗号分隔值，这就是我想要的，所以我确实要选择。csv，从这个下拉菜单中，在表格中，这当然会为我下载该文件，现在我将要继续去，正如上周，我能够将一个文件上传到IDE。
- en: and i'm going to go ah**d and do the，same here this week as well。i'm going to
    go ah**d and grab my file，which ended up in my downloads folder on。![](img/f5dc569293e2d8c4779cf89dd8d3088f_33.png)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我这周也要继续这样做。我将继续抓取我的文件，它最终在我的下载文件夹中。![](img/f5dc569293e2d8c4779cf89dd8d3088f_33.png)
- en: my particular computer here，and i'm going to go ah**d and drag and，drop this。![](img/f5dc569293e2d8c4779cf89dd8d3088f_35.png)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在我这台特定的计算机上，我将继续拖放这个文件。![](img/f5dc569293e2d8c4779cf89dd8d3088f_35.png)
- en: into the ide such that it ends up in my。![](img/f5dc569293e2d8c4779cf89dd8d3088f_37.png)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 进入这个IDE，最终到了我的。![](img/f5dc569293e2d8c4779cf89dd8d3088f_37.png)
- en: home directory so to speak so now i have，this file favorite tv shows forms and
    in，ide。![](img/f5dc569293e2d8c4779cf89dd8d3088f_39.png)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 所以可以这么说，现在我有这个文件《最爱的电视节目》在IDE中。![](img/f5dc569293e2d8c4779cf89dd8d3088f_39.png)
- en: comma，title comma genres is our header row，that contains the names of the。properties
    or attributes in this file，then we've got our timest*mps comma，favorite title。comma
    and then a comma separated list of，genres and here indeed notice，quotes around。any
    values that themselves had commas so，it's a relatively simple file format。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 逗号，标题，逗号，类型是我们的标题行，包含了这个文件中的属性或特征的名称，然后我们有时间戳，逗号，最爱标题，逗号，然后是一个逗号分隔的类型列表，这里确实注意到任何值本身有逗号时的引号，所以这是一种相对简单的文件格式。
- en: and i could certainly just kind of skim，through this figuring out who likes
    the，shows。but per last week we now have a pretty，useful programming language at
    our，disposal python。that could allow us to start，manipulating and analyzing this
    data。more readily and here to my point last，job，you could absolutely do everything
    we're。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我当然可以浏览一下，看看谁喜欢这些节目。但根据上周的情况，我们现在有了一种相当有用的编程语言供我们使用，Python。这可以让我们更容易地开始操作和分析这些数据。回到我的观点，最后的工作，你绝对可以完成我们要做的一切。
- en: about to do in all weeks prior of cs50，we could have used c，for what we're about
    to do but as you。can probably glean c tends to be painful。![](img/f5dc569293e2d8c4779cf89dd8d3088f_41.png)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的CS50周中，我们可以使用C来做我们即将要做的事情，但你可能会发现C通常是很麻烦的。![](img/f5dc569293e2d8c4779cf89dd8d3088f_41.png)
- en: for certain things like anything，involving string manipulation，changing strings
    analyzing strings is。just a real pain，right god forbid you had to take the csv，file
    and load it all into memory not。unlike your spell checker you would have，to be
    using malloc，all over the place or reallock or the。like like there's just a lot
    of heavy，lifting involved in just。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 某些事情，比如任何涉及字符串操作的，改变字符串、分析字符串的，都是一种真正的麻烦，天哪，如果你不得不将CSV文件加载到内存中，不同于你的拼写检查器，你将不得不在各处使用malloc，或者realloc等等，涉及的工作量非常大。
- en: analyzing a text file so python does all，of that for us by just giving us more。functions
    at our disposal，opening data，so let me go ah**d and close this file。let me go
    ah**d and create a new one，called favorites。pi wherein i'm going to，if we can
    start。answering some questions about it and，frankly to this day 20 plus years
    after，time。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 分析文本文件时，Python为我们处理了所有这些，通过提供更多的功能，让我们可以打开数据，所以让我继续关闭这个文件。让我继续创建一个新的文件，叫做favorites.py，在这个文件中，我将开始回答一些关于它的问题，坦率地说，即使到今天，20多年后。
- en: i myself am very much in the habit when，simple，and not solving the problem i
    ultimately。want to but something，simpler just as a sort of proof of，plumbing，ahead
    and write a quick。program that simply opens up this file，bottom，and just prints
    out each of the titles。just as a quick sanity check that i know，data，they're in
    so let me go ah**d and import。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我自己非常习惯于，当简单，并且没有解决我最终。想要的问题，但一些，简单的作为一种管道的证明，去写一个快速的。程序，仅仅打开这个文件，底部，并逐一打印出每个标题。作为一个快速的理智检查，我知道，数据，他们在这里，所以让我去啊**d
    并导入。
- en: csv and then i can do this in a few，different ways but by now you've。probably
    seen or remembered by using，something like the open command。and the with keywords
    to sort of open，file for me，dash，form responses 1 dot csv。and i'm going to open
    this up in read，mode strictly speaking the r。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: csv 然后我可以以几种不同的方式做到这一点，但到现在为止你可能已经看到或记得使用，像打开命令这样的东西。和 with 关键字来打开，文件给我，dash，表单响应
    1.dot csv。我将严格地以读取模式打开这个 r。
- en: is not required you might see examples，online not including it that's because，c。and
    f open i'm going to be explicit and，actually do quote unquote r。and i'm going
    to go ah**d and give this。![](img/f5dc569293e2d8c4779cf89dd8d3088f_43.png)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是必需的，你可能会在网上看到例子，不包括它，那是因为，c。和 f 打开我将明确并，实际上做引号中的 r。我将去啊**d 并给这个。![](img/f5dc569293e2d8c4779cf89dd8d3088f_43.png)
- en: a variable name of file so this，that csv，file in read-only mode and creating
    a，reference it。now i'm going to go ah**d and use some，of that csv functionality
    i'm going to，reader。which i could call it xyz anything else，but reader kind of
    describes。what this variable is going to do and，it's going to be the return value，of
    calling csv。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一个文件的变量名，因此这个，csv，文件以只读模式打开并创建一个，引用。现在我将去啊**d 并使用一些，csv 功能，我将要，读取器。这个我可以叫 xyz
    其他任何东西，但读取器很好地描述了。这个变量将要做什么，并且，它将是调用 csv 的返回值。
- en: reader on that file，and so essentially the csv library per。![](img/f5dc569293e2d8c4779cf89dd8d3088f_45.png)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那个文件的读取器，基本上是 csv 库的每个。![](img/f5dc569293e2d8c4779cf89dd8d3088f_45.png)
- en: last week has a lot of fancy features，built in and all it needs as input。is
    an already opened text file and then，it will then wrap that file so to speak，functionality。like
    the ability to read it column，and row at a time all right now i'm，for now。i'm
    going to skip the first row，i'm going to skip the first row because。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 上周有很多炫酷的功能，内置的，所需输入的只是一个已经打开的文本文件，然后可以说，它会将那个文件包装起来，功能。像现在我可以逐列、逐行读取，好的，现在我，我将跳过第一行，因为。
- en: the first row has my headings timest*mp，title and genres and i know what my，that。line
    for now and now i'm going to do，this for row in，reader let me go ah**d and print
    out。quite simply，row and i only want title so i think if，it's three columns。from
    left to right it's 0 1 2 so i want，to print out column，bracket 1 which is going
    to be the。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行有我的标题 timest*mp、标题和类型，我知道我的，那。行现在我将这样做，对于行中的，读取器让我去啊**d 并简单地打印。行，我只想要标题，所以我想如果，它有三列。从左到右是
    0 1 2，所以我想，打印出列，括号 1，这将是。
- en: second column 0，indexed all right let me go ah**d and，save that go down to my
    terminal window。and run python of favorites dot pi and，cross my fingers，okay voila
    it looks like it flied it。flew by super fast，but it looks like indeed these are
    all，of the tv shows that folks have inputted。scrolling up，so it looks like my
    program is working，but let's improve it just a little。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 第二列 0，索引好的，让我去啊**d 并，保存它，然后去我的终端窗口。运行 python favorites.dot pi 并，交叉我的手指，好的，瞧，它看起来飞快地过去了。它看起来确实这些都是，大家输入的电视节目。向上滚动，所以我的程序似乎在工作，但让我们稍微改进一下。
- en: bit it turns out that using the csv，reader isn't necessarily the best。approach
    in python many of you have，already discovered a，dict reader a dictionary reader
    which is。nice because then you don't have to know，or keep double checking。what
    number column your data is in you，can instead refer it to by the。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有一点，结果是使用 csv，读取器不一定是最好的。方法在 python 中，许多人已经发现了，一个字典读取器，这很好，因为你不必知道，或者不断检查。你的数据在哪一列，你可以通过的方式来引用它。
- en: header itself so by title quote unquote，or by genres，this is also good because
    if you or。maybe a colleague are sort of messing，around with the spreadsheet and
    they。rearrange the columns by dragging them，left or right，any numbers you have
    used in your code 0。1 2 on up，could suddenly be incorrect if your，colleague has
    reordered those columns。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 标头本身，因此通过标题引号中的，或者通过类型，这也是好的，因为如果你或。也许一个同事在搞定，电子表格并且他们。通过拖动列左右重新排列它们，任何在代码中使用的数字
    0。1 2 等等，可能会突然不正确，如果你的，同事重新排列了那些列。
- en: so using a dictionary reader tends to be，titles，not the mere numbers it's still
    fallible。if someone yourself or someone else，changes the values in that very first。row
    and renames titles or genres，then things are going to break but at。that point
    we kind of have to blame you，for not having kept track of your code，versus your
    data but。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，使用字典阅读器通常是标题，而不是单纯的数字。如果有人，比如你自己或者其他人，改变了那第一行的值并重命名标题或类型，那么事情会崩溃，但在那时我们不得不责怪你没有跟踪你的代码与数据。
- en: still a risk so i'm going to change this，to dictionary reader or dict reader
    here。and pretty much the rest of my code can，be the same except i don't need this，hack
    here on line five。i don't need to just skip over to the，next row from the get
    go。because i now want the dictionary reader，to handle the process of，reading that
    first row for me but。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然存在风险，所以我将这里改为字典阅读器或字典读取器。我的代码几乎可以保持不变，除了我不需要在第五行这里的黑客技巧。我不需要直接跳到下一行，因为我现在想让字典阅读器为我处理读取第一行的过程，但。
- en: otherwise everything else stays the same，except for this last line where now
    i，think i can now use。row as a dictionary not as a list，title，from each given
    row so let me go ah**d。and run python of favorites。pi again，and voila it looks
    like i got the same。results several hundred of them but let，me stipulate that
    it's doing the same，those。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 其他方面都保持不变，除了最后一行，现在我认为我可以将行作为字典使用，而不是作为列表，标题，来自每一行。因此让我去运行 Python 的 favorites.py，再次运行，哇，看起来我得到了相同的结果，几百个，但让我说明它做的事情是一样的。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_47.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_47.png)'
- en: side by side all right before i forge，ahead now to actually augment this with，new
    functionality。any questions or confusion on this，python script we just wrote。to
    open a file wrap it with a reader or，dict reader，and then iterate over the rows
    one at a。time printing，the titles any questions confusion on，syntax at all it's
    okay we've only known。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，在我继续之前，实际上想要在此基础上增强新的功能。对于我们刚刚写的这个 Python 脚本，打开一个文件，用阅读器或字典阅读器包装它，然后逐行迭代打印标题，有什么问题或困惑吗？没关系，我们只知道。
- en: or seen python for a week it's fine if，it's still quite new，anything brian we
    should address。yeah so why is it that you don't need to，close the file，using the
    syntax that you're using right。here really good question last week i，more pedantically
    used open on its own，and then i later used。a close function that was associated，with
    the file that i had just opened，if you will。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看过 Python 一周，没关系，如果它仍然很新，布莱恩，我们应该解决任何问题吗？是的，为什么你不需要在使用你所用的语法时关闭文件呢？这里是个很好的问题，上周我更严格地单独使用了
    open，然后我使用了与我刚刚打开的文件相关联的关闭函数。
- en: is actually to use this with keyword，which didn't exist in c。and it just tends
    to be a useful feature，in python whereby if you say。with open dot dot dot it will
    open the，file for you。![](img/f5dc569293e2d8c4779cf89dd8d3088f_49.png)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上是使用这个关键字，它在 C 语言中并不存在。它在 Python 中通常是一个有用的特性，如果你说 with open ... 它会为你打开文件。![](img/f5dc569293e2d8c4779cf89dd8d3088f_49.png)
- en: then it will remain open so long as your，code is indented inside of that。with
    keywords block and as soon as you，get to the end of your program。it will automatically
    be closed for you，so this is one of these features where，python in some sense。is
    trying to protect us from ourselves，it's probably pretty common for humans，file。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，只要你的代码缩进在那个关键字块内，它就会保持打开状态。一旦你到达程序的结尾，它会自动为你关闭。因此，这是 Python 在某种意义上试图保护我们的一项特性，这对于人类来说可能是相当普遍的。
- en: that can create problems with saving，things permanently it can create memory，leaks
    as we know from c。so the width keyword just assumes that，i'm not going to be an
    idiot and forget，to close the file。python is going to do it for me，automatically，other
    questions or confusions brian。how does dict reader know that title is，the name
    of the key，inside of the dictionary really good。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会导致保存问题，造成内存泄漏，正如我们在 C 语言中所知。因此，宽度关键字假设我不会傻到忘记关闭文件。Python 会为我自动处理这个问题，布莱恩，还有其他问题或困惑吗？字典阅读器如何知道标题是字典中的键名，这真是太好了。
- en: question too so，it is designed by the authors of the，python language。to look
    at the very first row in the，file，first row，phrase，before the first comma is the
    name of。the first column，that the second word or phrase after the，first comma
    is the。name of the second column and so forth，so a dict reader just presumes。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这是由 python 语言的作者设计的。查看文件中的第一行，第一行，短语，在第一个逗号之前是。第一列的名称，第二个词或短语在，第一个逗号之后是。第二列的名称，以此类推，因此
    dict 读取器仅假定。
- en: as is the convention with csvs that your，first row is going to contain。the headings
    that you want to use to，refer to those columns if your csv。happens not to have
    such a heading，whereby it just jumps right in on the。first row to real data then
    you're not，correctly，configuration，all right so。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 按照 csv 的惯例，你的，第一行将包含。你想用来，引用这些列的标题。如果你的 csv 恰好没有这样的标题，那么它将直接跳到。第一行的实际数据，那么你没有，正确的，配置，好吧。
- en: let's go ah**d and now i feel like，there's a whole mess here and you know。some
    of these shows are pretty popular，and as i'm glancing over this i，bunch of you
    like。the office a whole bunch of you like，breaking bad game of thrones and a whole。bunch
    of other shows as well，so it'd be nicer i think if we kind of。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续，现在我觉得，这里有一堆麻烦，你知道。某些节目相当受欢迎，当我浏览这个时，我，很多人喜欢。办公室，很多人喜欢，绝命毒师，权力的游戏以及许多其他节目，所以我认为如果我们这样做会更好。
- en: narrow the scope of our look at this，data by just looking at unique values。you're
    looking at unique values so，rather than just iterate over the file。top to bottom
    printing out one，title after another why don't we go。ahead and sort of accumulate
    all of this，data in some kind of data structure。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 通过仅查看唯一值来缩小我们对这些，数据的视角。你在查看唯一值，因此，不要只是从文件中遍历。自上而下打印出一个，标题接一个，为什么我们不继续积累这些，数据到某种数据结构中。
- en: so that we can throw away duplicate，values and then only print out。the unique
    titles that we've accumulated，so i bet we can do this in a few ways。but if we
    think back to last week's，demonstration of our dictionary。you'll recall that i
    used what was，called a set and i'm going to go ah**d。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我们就可以丢弃重复，值，然后只打印出。我们积累的唯一标题，我打赌我们可以用几种方式做到这一点。但如果我们回想上周的，字典演示。你会记得我使用了所谓的集合，我将继续执行这个。
- en: and create a variable called titles and，set it equal to something called。![](img/f5dc569293e2d8c4779cf89dd8d3088f_51.png)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为标题的变量，并，将其设置为等于某个名为。![](img/f5dc569293e2d8c4779cf89dd8d3088f_51.png)
- en: set and a set is just a collection of，values it's kind of like。a list but it
    eliminates duplicates for，me and that would seem to be exactly the。characteristic
    that i want，each title，which is now premature if i want to。first filter out duplicates，i'm
    going to go ah**d and do this i'm。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 集合只是一个，值的集合，它有点像。一个列表，但它为我消除了重复项，这似乎正是我想要的。每个标题，如果我想要。首先过滤掉重复项，我将继续执行这个。
- en: going to go ah**d and add to the titles，rows，i'm instead，adding to the title
    set that particular。deal the set，data structure in python is going to，throw away
    the duplicates for me and，uniques。now at the bottom of my file i need to，do a
    little more work，admittedly now i have to iterate over。the set to print out only
    those unique，titles so let me do this for title in。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 将继续添加到标题，行，我反而，添加到标题集合，特定的。处理，python 中的集合数据结构将为我丢弃重复项，并且，唯一。现在在我的文件底部，我需要，做更多的工作，诚然，现在我必须遍历。集合，只打印出那些唯一，标题，所以让我为标题执行这个。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_53.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_53.png)'
- en: titles go ah**d and print out title and，user friendly，less than。n or whatever
    you can just say for title，in titles，and if the titles variable is the type。of
    data structure that you can，list，or if it's a set or even if it's a。dictionary
    another data structure we saw，last week in python，the for loop in python will
    just know。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 标题继续前进，并打印出标题和，用户友好的，少于。n 或者你可以说标题，在标题中，如果标题变量是数据结构的类型。你可以，列表，或者如果它是一个集合，甚至如果它是一个。字典，我们上周在
    python 中看到的另一种数据结构，python 中的 for 循环将会知道。
- en: what to do this will loop over，all of the titles in the titles，sets so let me
    go ah**d and save this。file and go ah**d now and run python of，favorites。pi，and
    it looks like yeah the list is。different in some way，up，definitely fewer than
    before because my。scroll bar didn't jump nearly as far，down but honestly this
    is kind of a mess。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这将循环遍历，所有标题在标题，集合中，所以让我继续保存这个。文件，然后继续运行 python 的，favorites。pi，结果看起来是的，列表有。某种不同，绝对比以前少，因为我的。滚动条没有跳那么远，但老实说，这有点乱。
- en: let's go ah**d and sort this now in c it，would have been kind of a pain to sort。things
    we'd have to whip out the，pseudocode probably for bubble sort。selection sword
    or god forbid merge sort，and then implement it ourselves。but no with python comes
    really the，proverbial kitchen sink of functions。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在C中进行排序会有些麻烦，我们不得不拿出伪代码，可能是冒泡排序、选择排序，或者天哪，归并排序，然后自己实现。但在Python中，有很多函数可以用。
- en: so if you want to sort this set you know，what just say you want it sorted。there
    is a function in python called，sorted that will use one of those better。algorithms
    maybe it's merge sort maybe，it's something called quick sort maybe。![](img/f5dc569293e2d8c4779cf89dd8d3088f_55.png)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你想要对这个集合进行排序，你知道的，比如说你想要它排序。Python中有一个叫做sorted的函数，可以使用一些更好的算法，也许是归并排序，也许是快速排序，可能是别的。![](img/f5dc569293e2d8c4779cf89dd8d3088f_55.png)
- en: it's something else altogether，it's not going to use a big-o of，n-squ*red sort
    someone at python。probably have spent the time，implementing a better sort，for
    us but it will go ah**d and sort the。set for me now let me go ah**d and do，this
    again let me increase the size of，my terminal window。and rerun python of favorites。pi
    okay，and now we have an interesting。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完全不同的，它不会使用O(n平方)的排序，Python中的某个人可能花时间为我们实现了更好的排序。现在让我再做一次，让我增加我的终端窗口大小，并重新运行Python的favorites.py，好吧，现在我们有一个有趣的。
- en: assortment of shows that's easier for me，to wrap my mind around，because i have
    it now sorted here。and indeed if i scroll all the way up we，should see all of
    the shows beginning，with。numbers or a period uh which might have，just been someone
    playing around。followed by the a words the b words and，so forth so now it's a
    little easier to。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这些节目组合让我更容易理解，因为我现在在这里进行了整理。实际上，如果我向上滚动，我们应该能看到所有以数字或句点开头的节目，呃，这可能只是有人在玩。接下来是以字母a、b开头的节目，等等，现在稍微容易一点。
- en: wrap our minds around this，but something's up i feel like，a lot of you like
    avatar the last。airbender and yet，i'm seeing it indeed four different，times，but
    i thought we were filtering this。down to uniques，by using that set structure so
    what's，going on and in fact if i keep scrolling。i'm pretty sure i saw more，duplicates
    in here bojack horseman，breaking bad breaking bad。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '理解这些内容，但有些不对劲，我感觉很多人喜欢《最后的气宗》（Avatar: The Last Airbender），然而，我确实看到它出现了四次，但我以为我们是通过使用集合结构来筛选出唯一的。那么，究竟发生了什么？实际上，如果我继续滚动，我可以肯定我在这里看到了更多重复的《波杰克马戏团》（Bojack
    Horseman）和《绝命毒师》（Breaking Bad）。'
- en: brooklyn nine nine brooklyn nine-nine，cs50 and several different flavors。![](img/f5dc569293e2d8c4779cf89dd8d3088f_57.png)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 布鲁克林九号（Brooklyn Nine-Nine）、CS50和几种不同的风格。![](img/f5dc569293e2d8c4779cf89dd8d3088f_57.png)
- en: um and yes uh keeps going friends，so i see a lot of duplicate value so，what's
    going on。![](img/f5dc569293e2d8c4779cf89dd8d3088f_59.png)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，是的，朋友们，我看到很多重复值，所以发生了什么呢？![](img/f5dc569293e2d8c4779cf89dd8d3088f_59.png)
- en: yeah so your current sort is case，insensitive，someone，places。then it's going
    to be a different result，each time yeah exactly some of you。weren't quite diligent
    when it came to，capitalization，and so in fact the reality is is kudana。notes that
    there's differences in，capitalization now we've addressed this。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，你当前的排序是大小写不敏感的，某些地方会导致每次结果不同。是的，正是如此，有些人在大写方面不够认真，事实上，现实是Kudana指出了大小写之间的差异，现在我们已经解决了这个问题。
- en: before in fact when you implemented your，own spell checker。![](img/f5dc569293e2d8c4779cf89dd8d3088f_61.png)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，当你实现自己的拼写检查器时，早就处理过这个问题了。![](img/f5dc569293e2d8c4779cf89dd8d3088f_61.png)
- en: you had to deal with this already when，text，some words might be capitalized
    some。might be all lowercase all uppercase and，you wanted to tolerate，different
    casings and so we probably。solved this by just forcing everything，to uppercase
    or everything to lowercase。and doing things therefore case，insensitively so give
    me just a moment，a quick。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经处理过这个问题了，当文本中，有些词可能是大写的，有些可能是全小写或全大写，而你想要容忍不同的大小写。所以我们可能通过强制所有内容为大写或小写来解决这个问题，因此实现大小写不敏感的处理。请给我一点时间，快速。
- en: change to my form here and i'm going to，go ah**d and，i'm going to go ah**d and
    change this in。such a way，so that we have instead，let me shrink back my code let's
    go。ahead and change this in such a way that，we actually force everything to。uppercase
    or lowercase doesn't really，matter which but we need to canonicalize。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 更改我的表单，我要去调整，并且我要改变这一点，以便我们可以，缩回我的代码，继续改变这一点，使我们实际上强制所有内容为大写或小写，实际上无所谓，但我们需要规范化。
- en: things so to speak in some way，and to canonicalize things just means to。format
    all of your data in some standard，way so to katana's point，let's just standardize
    the。uppercase all，lowercase we just need to make a，judgment call so i'm going
    to go ah**d。and make a few tweaks here，i'm still going to use a set i'm still，going
    to read the csv as before。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 可以这么说，以某种方式**标准化**事物，意味着以某种标准格式化所有数据，所以就像刀锋所说的，让我们将所有内容标准化为大写或小写，我们只需做一个**判断**，所以我将**进行一些调整**，我仍然会使用集合，我仍然会像以前一样读取csv。
- en: but instead of just adding the title，with row bracket title，i'm going to go
    ah**d and force it to。uppercase just arbitrarily，just for the sake of uniformity
    and i'm。![](img/f5dc569293e2d8c4779cf89dd8d3088f_63.png)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 但我不是仅仅用行括号标题添加标题，而是将**强制**它为大写，纯粹是为了统一。![](img/f5dc569293e2d8c4779cf89dd8d3088f_63.png)
- en: also going to be，and then let's go ah**d and check what，exactly has happened
    here i'm not going。to change anything else，but let me go ah**d and increase the，size
    of my terminal window rerun。python of favorites。pi and voila，it's a little harder
    to read just。because i'm not used to reading all caps，kind of looks like we're
    yelling at，ourselves but。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 也要去，然后让我们前往**检查一下**，究竟发生了什么，我不会改变其他任何东西，但让我**去增加**我的终端窗口的大小，重新运行。python 的最爱。pi，瞧，它有点难以阅读，因为我不习惯阅读全大写，感觉像是在对自己喊话，但。
- en: i don't see wait a minute i still see，the office，over here twice if i keep scrolling，strange。stranger
    things that just looks like a，typo i see two sherlocks though，you。and i don't
    seem to have solved things，fully。![](img/f5dc569293e2d8c4779cf89dd8d3088f_65.png)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我不明白，等等，我仍然在这里看到了**办公室**两次，如果我继续滚动，奇怪。更奇怪的是，看来这只是一个**错字**，我看到两个福尔摩斯，不过，你。看来我还没有完全解决问题。![](img/f5dc569293e2d8c4779cf89dd8d3088f_65.png)
- en: and this one's a little more subtle what，more should i perhaps do to my data。to
    ensure we get duplicates removed，maybe trimmer around the edges and we'll，of that
    but。what do you mean what does that do oh，like trim off the extra spaces in case，words。yeah
    exactly it's pretty common for，hit the space，bar where they shouldn't and in fact
    i'm。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这个就稍微微妙一点，我可能还应该对我的数据做些什么，以确保我们去除重复项，可能是修整一下边缘，我们会……但。你是什么意思，那有什么用哦，像是修剪掉额外的空格，以防单词。是的，确实很常见，**按下空格键**的地方不该按，其实我。
- en: kind of inferring that i bet，one or more of you accidentally typed，sherlock
    space。and then decided nope that's it i'm not，typing anything else but that's
    space。even though we can't quite see it，obviously is there and when we do a，structure
    does that。it's actually going to be noticed when，they're not going to be，the same
    so i can do this in a few。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 有点推测，我敢打赌，你们中的一个或多个意外地输入了**福尔摩斯 空格**，然后决定不，这样就不再输入其他任何东西，但那个空格。尽管我们看不到，它显然是存在的，当我们做结构时，它实际上会被注意到，因为它们不会相同，所以我可以在几种方式中做到这一点。
- en: python，you can chain functions together which，is also two kind of a fancy feature。notice
    what i'm doing here i'm still，accessing the titles，set i'm adding the following
    value to it。i'm adding the value row bracket title，but not quite，speak，i'm going
    to go ah**d and strip it which。means if we look up the documentation，for this
    function to olivia's point it's。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: python，你可以将函数链接在一起，这也是一种比较**花哨的特性**。注意我在这里做什么，我仍在访问标题集合，我在添加以下值。我要添加的值是行括号标题，但不完全是，**我将继续**并进行修剪，这意味着如果我们查看这个函数的文档，正如奥利维亚所说的。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_67.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_67.png)'
- en: going to strip off or trim，all of the white space to the left all，of the white
    space to the right。whether that's the spacebar or the enter，key or the tab，character
    or a few other things as well。it's just going to get rid of leading，and trailing
    white space and then，whatever's left over。i'm going to go ah**d and force，everything
    to uppercase in the spirit of。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我将去掉或修剪所有左侧和右侧的空白，不论是空格键、回车键、制表符或其他几个字符。这将去掉前导和尾随空白，然后，无论剩下什么，我将**强制**所有内容为大写。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_69.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_69.png)'
- en: kadana suggestion 2。so we're sort of，combining two good ideas now。to really
    massage the data if you will，into a cleaner format and this is such a，real world
    reality。like humans you and i cannot be trusted，to input data，the way we are supposed
    to sometimes。it's all lowercase because we're being a，little lazy or a little
    social，from amazon。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 'kadana 建议 2。所以我们现在有点结合了两个好主意，真的在处理数据，变成更清晰的格式，这是一个现实世界的现实。像你我这样的普通人，有时无法被信任，输入数据方式也许并不正确。因为我们有点懒惰，或者有点社交，从亚马逊。 '
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_71.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_71.png)'
- en: and trying to input a valid postal，because uh，i can think of a few people in
    my life，thing just yet。and so things might be all capitalized，instead this is
    not good，for computer systems that require。precision to our emphasis in week zero，and
    so massaging data means cleaning it。up doing some mutations，that don't really
    change the meaning of，the data but canonicalize。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试输入有效的邮政编码，因为我可以想到我生活中的几个人，现在还没想好。所以所有东西可能都是大写的，这对需要精确度的计算机系统来说不好。我们在第零周强调过，因此处理数据意味着清理它，进行一些变更，这些变更并不真正改变数据的含义，而是规范化。
- en: it standardize it so that you're，comparing apples and apples so to speak，not
    apples and oranges。![](img/f5dc569293e2d8c4779cf89dd8d3088f_73.png)
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 它将其标准化，以便可以说你在比较苹果与苹果，而不是苹果与橙子。![](img/f5dc569293e2d8c4779cf89dd8d3088f_73.png)
- en: well let me go ah**d and run this again，in my bigger terminal window。python
    of favorites stop high voila and，scrolling up up up，see，up and up and up，related
    to。white space and i think we have a much，cleaner unique list of titles。at this
    point of course if we scroll up，i would have to be a lot more clever。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我继续在更大的终端窗口中运行这个。python favorites stop high voila，向上滚动，看到，向上和向上，相关于空格，我认为我们有一个更干净的独特标题列表。当然，如果我们向上滚动，我会需要更聪明。
- en: if i want to detect things like，of you，was very diligent about putting f period，got。bored
    at the end and left off the last，period but that's going to happen when。you're
    taking in user input，we've of course got all these variants，clean up。because now
    you can imagine having to。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想检测像“你”这样的事情，你是非常认真地输入句点，但最后无聊而漏掉了最后一个句点，但这在接收用户输入时是会发生的，当然我们有所有这些变种，来清理它们。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_75.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_75.png)'
- en: add a whole bunch of if conditions and，else's and l-tips to sort of clean all。of
    that up if we do want to canonicalize，unquote。![](img/f5dc569293e2d8c4779cf89dd8d3088f_77.png)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一大堆条件和其他处理，以便清理所有内容，如果我们确实想要规范化，去掉引号。![](img/f5dc569293e2d8c4779cf89dd8d3088f_77.png)
- en: cs50 so this is a very slippery slope，like you and i could start writing a，up。but
    that's the reality when dealing with，real world data，well let's go ah**d now and
    improve this。program further，do something a little fancier because i，now can trust
    that my data has been。canonicalized except for the actual，the like，let's go ah**d
    and figure out what's the。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: cs50，这真的是一条滑坡之路，你我可以开始写一个，但这就是处理真实数据时的现实。好吧，让我们现在继续改进这个程序，做一些更花哨的事情，因为我现在可以信任我的数据已经被规范化，除了实际内容。让我们继续找出什么是。
- en: most popular favorite tv show，among the audience here so i'm going to。start
    where i have before with my，current code because i think i have most。of the building
    blocks in place，i'm going to go ah**d and clean up my。code a little bit in here
    i'm going to，go ah**d and give myself a separate，variable now called title。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里观众最喜欢的电视节目是什么，所以我会从我以前的代码开始，因为我认为我已经有了大部分构建模块，我会继续清理我的代码，给自己一个新的变量，叫做标题。
- en: just so that i can think about things in，a little more orderly fashion。![](img/f5dc569293e2d8c4779cf89dd8d3088f_79.png)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我可以以更有条理的方式思考事情。![](img/f5dc569293e2d8c4779cf89dd8d3088f_79.png)
- en: but i'm not going to start adding things，to this set anymore，in fact a set i
    don't think is really。going to be sufficient，to keep track of the popularity of
    tv，shows because by definition the set is。throwing away duplicates，but the goal
    now is kind of the opposite，i want to know。which are the duplicates so that i
    can，tell you that this many people like the。
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 但我不打算再向这个集合添加东西，事实上，我认为集合并不足以跟踪电视节目的受欢迎程度，因为根据定义，集合会丢弃重复项，但现在的目标恰恰相反，我想知道哪些是重复的，以便我可以告诉你有多少人喜欢这个。
- en: office this many people like，uh breaking bad and the like so what。![](img/f5dc569293e2d8c4779cf89dd8d3088f_81.png)
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 办公室里很多人喜欢《绝命毒师》等等，那又怎么样。![](img/f5dc569293e2d8c4779cf89dd8d3088f_81.png)
- en: tools do we have in python's toolkit。![](img/f5dc569293e2d8c4779cf89dd8d3088f_83.png)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python的工具箱中，我们有哪些工具。![](img/f5dc569293e2d8c4779cf89dd8d3088f_83.png)
- en: out，that information any thoughts on what，data structure，out，show popularity
    show popularity and by。it，um i guess um one option could be to use，dictionaries
    so that you could have like，the office。i don't know 20 votes and then game of，thrones
    another one so that。a dictionary could really help you，visualize that，yeah perfect
    instincts recall that a。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 提取出，任何关于什么，数据结构的信息，显示流行度，显示流行度，嗯，我想，一个选项可能是使用，字典，这样你可以像，办公室。我不知道20票，然后《权力的游戏》另一个，所以。字典真的可以帮助你，直观地理解，是的，完美的直觉记住一个。
- en: dictionary at the end of the day，no matter how sophisticated it's。implemented
    underneath the hood like，your spell checker，it's just a collection of key value。pairs
    and indeed it's，maybe one of the most useful data，structures in any language。because
    this ability to associate one，piece of data with another。
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 字典，归根结底，无论它在底层实现得多么复杂，就像，你的拼写检查器，它只是一个键值对的集合，实际上它，可能是任何语言中最有用的数据结构之一。因为这种将一个数据片段与另一个数据片段关联的能力。
- en: is just a very general purpose solution，point，if the problem at hand is to figure
    out。the popularity of shows well let's make，the keys the titles of our shows，to
    speak。the values of those keys we're going to，map title，to votes title to vote
    title to vote and，so。let me go ah**d and scroll up and i can，set，i can instead
    say dict and give myself。
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 只是一个非常通用的解决方案，关键是，如果手头的问题是弄清楚。节目的人气，那就让我们把，键设为我们节目的标题，来说。那些键的值我们将映射标题，投票标题，投票标题，投票，因此。让我去啊**d并向上滚动，我可以，设置，我可以改为说字典并给自己。
- en: just an empty dictionary，there's actually shorthand notation for，that that's
    a little more common。to use two empty curly braces that just，means the exact same
    thing。give me a dictionary that's initially，empty there's no fancy shortcut for
    a。set you have to literally type out s e t，open paren close paren but dictionaries。
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 只是一个空字典，实际上有更常用的简写表示法。用两个空的大括号，这只意味着完全相同的事情。给我一个最初为空的字典，没有复杂的快捷方式用于。集合，你必须字面上输入s
    e t，开括号闭括号，但字典。
- en: are so common so popular so powerful，they have this little syntactic shortcut，of
    just two。curly braces open and close so now that，i have that，let me go ah**d and
    do this inside of my。for loop，instead of printing the title which i，don't want
    to do and instead of adding。it to the set i now want to add it to，the dictionary，so
    how do i do that well if my。
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 是如此常见，如此流行，如此强大，它们有这个小的语法快捷方式，只有两个。大括号打开和关闭，所以现在，我有了这个，让我去啊**d并在我的。for循环内部做这个，而不是打印标题，我，真的不想这样做，而是将其添加。到集合中，我现在想将其添加到字典中，那我该怎么做呢？如果我的。
- en: dictionary is called titles，i think i can essentially do something，like this
    titles bracket。title equals or maybe plus，equals one maybe i can kind of use the。![](img/f5dc569293e2d8c4779cf89dd8d3088f_85.png)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 字典叫做标题，我认为我基本上可以做类似这样的事情，标题括号。标题等于，或者也许加，等于1，也许我可以有点使用这个。![](img/f5dc569293e2d8c4779cf89dd8d3088f_85.png)
- en: dictionary，numbers，that start at zero and then just add one，add two add three
    so every time i see。equals 1，plus equals 1。we can't do plus plus。![](img/f5dc569293e2d8c4779cf89dd8d3088f_87.png)
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 字典，数字，从零开始，然后加一，加二，加三，所以每次我看到。等于1，加等于1。我们不能做加加。![](img/f5dc569293e2d8c4779cf89dd8d3088f_87.png)
- en: because that's not a thing in python it，only exists in c，but this would seem
    to go into the。dictionary called titles，look up the key that matches this，specific
    title。![](img/f5dc569293e2d8c4779cf89dd8d3088f_89.png)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这在Python中不是一件事，它只在C中存在，但这似乎会进入。名为标题的字典，查找与这个特定标题匹配的键。![](img/f5dc569293e2d8c4779cf89dd8d3088f_89.png)
- en: and then increment whatever value is，there，by one but i'm going to go ah**d
    and run。this a little naively here，let me go ah**d and run python of，favorites
    dot pi。and wow or it broke already on line nine，so it's sort of an apt uh choice
    of show，to begin with。we have a key error with punisher so，punisher is bad something
    bad has just。
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将那里任何值增加，1，但我将去啊**d并运行。这个有点天真，让我去啊**d并运行python的，favorites.dot pi。哇，或者它已经在第九行崩溃了，所以这在一开始就是一个适当的选择。我们遇到了一个关于惩罚者的键错误，所以，惩罚者是坏的，刚刚发生了一些坏事。
- en: happened but what does that mean，a key error is referring to the fact，that i
    tried to access。an invalid key in a dictionary this is，code here，even though titles
    is a dictionary and。even though the value of title，singular is quote unquote punisher
    i'm，getting a key error。because that title does not yet exist so。
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 发生了，但这意味着什么呢？一个关键错误是指我尝试访问字典中的一个无效键。这里的代码是，即使标题是一个字典，即使单数的标题的值是“惩罚者”，我仍然遇到了一个关键错误。因为那个标题尚不存在，所以。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_91.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_91.png)'
- en: even if you're not sure of the python，the，intuitive solution here。i cannot increment
    the frequency of the，punisher，because punisher is not in the。dictionary it's almost，i
    think that you need first of all to，create the for loop and maybe assign a。value
    to every，thing in the dictionary for example the，value zero and then add。
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你不确定 Python，这里也有直观的解决方案。我无法增加“惩罚者”的频率，因为“惩罚者”不在字典中。我觉得你首先需要创建一个 for 循环，并可能给字典中的每个元素分配一个值，例如零，然后再添加。
- en: one yeah so good instincts and here i，can use another metaphor i worry we。might
    have a chicken in the egg problem，there because i don't think i can go to，the
    top of my code。at a loop that initializes all of the，values in the dictionary
    to zero because。![](img/f5dc569293e2d8c4779cf89dd8d3088f_93.png)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一，没错，所以直觉很好，在这里我可以用另一个隐喻，我担心我们可能会有一个“鸡生蛋”的问题，因为我觉得我不能在代码的顶部循环中，将字典中的所有值初始化为零，因为。![](img/f5dc569293e2d8c4779cf89dd8d3088f_93.png)
- en: i would need to know，all of the names of the shows at that，point now that's
    fine。![](img/f5dc569293e2d8c4779cf89dd8d3088f_95.png)
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要知道此时所有节目的名称，这很好。![](img/f5dc569293e2d8c4779cf89dd8d3088f_95.png)
- en: i think i could take you maybe more，literally gray，and open up the csv file
    iterate over it。top to bottom and，any time i see a title just initialize，of zero。zero
    zero then have another for loop，maybe reopen the file，and do the same and that
    would work but。it's arguably not，very efficient it is asymptotically in，terms
    of big o。
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我想我可以更字面地*带你走*，打开 CSV 文件并从上到下遍历它。每当我看到一个标题时，就初始化为零。然后再有一个 for 循环，也许重新打开文件，做同样的事情，这样可以工作，但这可以说不是非常有效，从大
    O 的角度来看是渐进的。
- en: but that would seem to be doing twice as，much work iterate over the file。once
    just to initialize everything to，time，just to increment the counts i think we。can
    do things a little more efficiently，i think we can achieve not only，thoughts。on
    how we can still solve this problem，without having to iterate over the whole，twice，to
    check if。
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 但这似乎是在对文件进行两次遍历。一次只是为了初始化所有内容，再一次只是为了增加计数。我认为我们可以更有效地做事，我认为我们可以实现，不仅是对如何解决这个问题的思考，而是不用遍历整个文件两次，来检查是否。
- en: that key is in the dictionary and if，it's not been added，and then go ah**d and
    increment the。value after nice and，we can do exactly that so let's just，apply
    that intuition if the problem is。that i'm trying to access a key，that does not
    yet exist well let's just，somehow its point，if it does。then increment it but if
    it does not，then and only then to grid's advice。
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 该键在字典中，如果它还未被添加，那么继续*增加*值，之后再处理。我们完全可以这样做，所以让我们就应用这种直觉。如果问题是我试图访问一个尚不存在的键，那我们就想办法处理。如果存在，那么增加它，但如果不存在，那么只有遵循
    Grid 的建议。
- en: initialize it to zero so let me do that，let me go ah**d and say，pythonic。beautiful
    way of asking a question like，that way cleaner than in c，let me go ah**d then
    and say uh。if the，called titles，well that's okay too i can go ah**d and，say titles，bracket
    title equals zero。so the difference here is that i can，certainly inc，i can certainly
    index into a dictionary。
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 将其初始化为零，所以让我这样做，让我去**继续**，用一种**优雅**的方式提出问题，这比在 C 中干净得多。让我再说一次，如果被调用的标题，那也没关系，我可以继续，*说*
    titles[title] = 0。这里的区别是我可以*确实*索引到一个字典。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_97.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_97.png)'
- en: using a key，that doesn't exist if i plan at that，moment to give it a value。that's
    okay and that has always been，okay since last week，but however if i want to go
    ah**d and。increment the value that's there i'm，going to go ah**d and do that，in
    this separate line but i did。![](img/f5dc569293e2d8c4779cf89dd8d3088f_99.png)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一个不存在的键，如果我打算在那一刻给它一个值，那是可以的，而且自上周以来一直都可以，但是如果我想去**继续**增加那个值，我将会在这一行进行操作，但我已经。![](img/f5dc569293e2d8c4779cf89dd8d3088f_99.png)
- en: introduce a bug，i did introduce a bug here i think i，need to go one step further。logically
    i don't think i want to，initialize this to zero。![](img/f5dc569293e2d8c4779cf89dd8d3088f_101.png)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 引入一个bug，我在这里确实引入了一个bug，我想我需要进一步一步。逻辑上我觉得我不想把这个初始化为零。![](img/f5dc569293e2d8c4779cf89dd8d3088f_101.png)
- en: per se does anyone see a subtle bug in，my logic here，if the title is already
    in the。dictionary i'm incrementing it by one，any subtle catches here yeah olivia
    what。i think you should initialize it to one，since it's the first instance。exactly
    i should initialize it to one，otherwise i'm accidentally overlooking。
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一回事，有人看到我逻辑中的细微bug吗，如果标题已经在字典中，我就把它加一，有什么细微的捕捉吗，哦，奥利维亚，你觉得我应该把它初始化为一，因为这是第一次实例。确切的，我应该将其初始化为一，否则我就不小心忽略了。
- en: this particular title and i'm going to，go ah**d and undercount it so i can fix。this
    either by doing this，or frankly if you prefer i don't，technically need to use
    an if。else i can use just an if by doing，if，title not in titles then i could go，ahead
    and say titles。bracket title get zero and then after，that i can blindly，so to
    speak just do this so which one is。
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定的标题，我会继续进行计数，以便我可以通过这样做来修复它，或者老实说，如果你愿意，我不需要使用if else，我可以只用if，通过做，如果标题不在标题中，那么我可以继续说标题。括号标题得到零，然后之后，我可以盲目地这么做，那么这到底是哪个。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_103.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_103.png)'
- en: better i think this second one is maybe，line of code。![](img/f5dc569293e2d8c4779cf89dd8d3088f_105.png)
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得第二个可能是更好的一行代码。![](img/f5dc569293e2d8c4779cf89dd8d3088f_105.png)
- en: but it's ensuring with that if condition，to someone's advice，dictionary。until
    i'm sure that the title is in，now，python of favorites dot pi enter。and okay it
    didn't crash so that's good，information，but i now have access to a bit more let，program。where
    i have now this loop let me go，ahead and print out not just the title。
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 但通过那个if条件确保了某人的建议，字典。直到我确定标题在里面，现在，python of favorites dot pi，输入。好的，它没有崩溃，这很好，信息，但我现在可以访问更多，让我来程序。现在我有这个循环，让我继续打印出不仅仅是标题。
- en: but the value of that key in the，dictionary，by just indexing into it here and
    you，but with print。![](img/f5dc569293e2d8c4779cf89dd8d3088f_107.png)
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 还包括字典中该键的值，仅仅通过在这里索引进去，你可以，但用print。![](img/f5dc569293e2d8c4779cf89dd8d3088f_107.png)
- en: you can actually pass in multiple，arguments and by default print will just。separate
    them with a space for you you，them with anything，but this is just meant to be
    a quick and。now the，popularity thereof so let me run this，again python of favorites
    dot pi。and voila it's kind of，all over the place office super popular，with 26
    votes there a lot of。
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '你实际上可以传入多个参数，默认情况下，print会用空格分隔它们，你可以用任何东西来分隔，但这只是为了快速演示一下，所以，让我再运行一次，python
    of favorites dot pi，瞧，这有点乱，但在办公室非常受欢迎，有26票，真是多。 '
- en: single votes here uh a lot of big bang，theory has nine，feel like this is going
    to take me。forever to wrap my mind around which are，the most popular，shows so
    of course how would we do this。![](img/f5dc569293e2d8c4779cf89dd8d3088f_109.png)
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 单个投票在这里，呃，很多《大爆炸理论》有九票，我觉得这会让我花很长时间来理清哪些是最受欢迎的节目，所以我们当然该如何做到这一点。![](img/f5dc569293e2d8c4779cf89dd8d3088f_109.png)
- en: well to the point made earlier，with spreadsheets my god in microsoft。excel or
    google spreadsheets or apple，heading and boom，sort it we seem to have lost that。capability
    unless we now do it in code，so let me do that，for us let me go ah**d and go back
    to my。code and it looks like，sorted even though it does work on。
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 回到之前提到的要点，使用电子表格，天哪，在微软的Excel或谷歌电子表格或苹果中，标题一出，哗啦一下排序，我们似乎失去了这个能力，除非现在用代码来做，所以让我为我们做一下，哦**继续回到我的代码，结果看起来像是排序过的，尽管它确实有效。**
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_111.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_111.png)'
- en: dictionaries，is actually sorting by key not by value，and here's where our python
    programming。techniques need to get a little more，sophisticated and we wanted to
    introduce。another feature here now of，python which is going to solve this，general
    way。so if we read the documentation for，sorted the sorted，they're in。
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 字典实际上是按键而不是按值排序的，在这里我们的Python编程技巧需要变得更加复杂，我们想在这里引入Python的另一个特性，这将以一种一般的方式解决这个问题。所以如果我们阅读`sorted`的文档，它们的排序是。
- en: it sorts lists by the values they're in，it sorts dictionaries，by the keys they're
    in because。dictionaries have two pieces of，information for every，element it has
    a key and a value not。just a value so by default sorted sorts，by key so we somehow
    have to override，that behavior。so how can we do this well it turns out，that the
    sorted function，literally called。
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 它按值对列表进行排序，按键对字典进行排序，因为字典对于每个元素都有两部分信息，它有一个键和一个值，而不仅仅是一个值。因此默认情况下，sorted按键排序，所以我们必须以某种方式重写该行为。那么我们该如何做到呢？实际上，sorted函数。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_113.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_113.png)'
- en: key and the key argument，takes as its value the name of a，function and this
    is where things get。really interesting if not confusing，really quickly it turns
    out in python，arguments。by way of their name and technically you，can do this in
    c it's a lot more，syntactically involved。but in python it's very common in。
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: key参数的值是函数的名称，这里事情变得非常有趣，如果不说令人困惑的话。实际上，在python中，参数可以通过其名称传递。技术上你可以在c中做到这一点，但语法上复杂得多。但在python中非常常见。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_115.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_115.png)'
- en: javascript it's very common in a lot of，languages it's very common。to think
    of functions as first class，objects which is a fancy way of saying。you can pass
    them around just like they。![](img/f5dc569293e2d8c4779cf89dd8d3088f_117.png)
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: javascript在许多语言中都很常见，通常将函数视为一等对象，这是一种花哨的说法，意思是你可以像传递其他东西一样传递它们。![](img/f5dc569293e2d8c4779cf89dd8d3088f_117.png)
- en: calling them，yet but you can pass them around by，their name so what do i mean
    by this。well i need a function now to sort my，dictionary，this，and perhaps so let
    me go ah**d and give。the moment called f，because we're going to get rid of it，temporarily。define
    a function called f that takes as，input a title，and then it returns for me the
    value。
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 调用它们，但你可以按名称传递它们。那么我所说的是什么呢？好吧，我现在需要一个函数来对我的字典进行排序，这，也许让我去啊**d给它一个叫f的名字，因为我们要暂时把它去掉。定义一个名为f的函数，输入一个标题，然后返回给我该值。
- en: corresponding to that key so i'm going，to go ah**d and return。![](img/f5dc569293e2d8c4779cf89dd8d3088f_119.png)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 对应于该键，所以我要去啊**d并返回。![](img/f5dc569293e2d8c4779cf89dd8d3088f_119.png)
- en: function，whose purpose in life is super simple，you give it a title。it gives
    you the count thereof the，looking it up，simple，but that's its only purpose in
    life but。now according to the documentation for，sorted，what it's now going to
    do because i'm。passing in a second argument called key。
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数的目的是非常简单，你给它一个标题。它给你对应的计数，查找起来简单，但这就是它唯一的目的。但是，根据文档，sorted现在要做的是因为我传入了一个名为key的第二个参数。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_121.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_121.png)'
- en: the sorted function rather than just，alphabetically by，key it's instead going
    to call。that function f on every one，of the elements in your dictionary and，depending
    on your。answer the return value you give，instead，to determine to determine the
    actual。![](img/f5dc569293e2d8c4779cf89dd8d3088f_123.png)
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: sorted函数并不是仅按键的字母顺序排序，而是会在字典中的每个元素上调用该函数f，并根据你的返回值来确定实际的。![](img/f5dc569293e2d8c4779cf89dd8d3088f_123.png)
- en: ordering，so by default sorted just looks at key，what i'm effectively doing with
    this，value。corresponding to every key and so the，logical implication of this even
    though，the syntax is a little。![](img/f5dc569293e2d8c4779cf89dd8d3088f_125.png)
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，排序仅查看键，我实际上是在做这个值，每个键对应的，因此，即使语法有点。![](img/f5dc569293e2d8c4779cf89dd8d3088f_125.png)
- en: new is that this dictionary of titles，by key，because again by default it sorts
    by key。but if i define my own，key function and override that behavior，to return
    the corresponding value。it's the values the numbers the counts。![](img/f5dc569293e2d8c4779cf89dd8d3088f_127.png)
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 新的字典是按键排序的，因为默认情况下它按键排序。但如果我定义自己的键函数并重写该行为以返回对应的值。它是值、数字和计数。![](img/f5dc569293e2d8c4779cf89dd8d3088f_127.png)
- en: thing，all right let's go ah**d and see if，that's true in practice let me go
    ah**d。and rerun python favorites dot pi，i should see all the titles and voila。conveniently
    the most popular show seems，to be game of thrones，27。followed by the office with
    26 and so，forth but of course the list is kind of。
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们去啊**d看看这在实践中是否真实，让我去啊**d重新运行python favorites dot pi，我应该能看到所有标题，瞧，最受欢迎的节目似乎是《权力的游戏》，27。其次是《办公室》，26，等等，但当然这个列表有点。
- en: backwards i mean it's convenient that i。![](img/f5dc569293e2d8c4779cf89dd8d3088f_129.png)
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 倒着说，我的意思是这很方便，我。![](img/f5dc569293e2d8c4779cf89dd8d3088f_129.png)
- en: can see it at the bottom of my screen，but really if we're making a list it。should
    really be at the top so how can，we override that behavior turns out the。sorted
    function if you read its，documentation，also takes another optional parameter，called
    reverse。capital t，in python that's going to go ah**d and，give us now。
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以在屏幕底部看到它，但如果我们在创建列表时，它应该真的在顶部，那我们如何覆盖这种行为？事实证明，sorted 函数，如果你阅读它的文档，还接受另一个可选参数，称为
    reverse。在 Python 中，这将去 ah **d** 并现在给我们。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_131.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_131.png)'
- en: the reverse order of that same sort so，window，rerun it again and voila if i
    scroll。back up to the top it's not，alphabetically sorted but if i keep。going keep
    going keep going keep going，the numbers are getting bigger and voila。![](img/f5dc569293e2d8c4779cf89dd8d3088f_133.png)
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 该排序的反向顺序，所以窗口，再次运行它，瞧，如果我向上滚动到顶部，它不是按字母顺序排序的，但如果我继续向下滚动，数字越来越大，瞧。![](img/f5dc569293e2d8c4779cf89dd8d3088f_133.png)
- en: now game of thrones with 33，is all the way at the top，all right so pretty cool
    and again the，least。is that we can actually pass in，functions two functions，and
    leave it to the ladder to call the。former，so that just complicated just to say
    but，any questions，or confusion now on how we are using。dictionaries and how we
    are sorting，things，in this reverse value-based way。
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在《权力的游戏》以 33 分的成绩高居榜首，太酷了。而且至少是我们可以传递函数的两个函数，并让后者调用前者，这样说复杂了，不过现在有关于我们如何使用字典和以这种反向值排序的方式有什么问题或困惑吗？
- en: any questions or confusion anything in，the chat or verbally brian。uh looks like
    all questions are answered，here okay，then in that case let me point out a。common
    mistake notice that even though f，is a function，would be，incorrect the reason
    being we。deliberately want to pass the function f，into the sorted function so
    that the。
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 有什么问题或困惑吗？聊天或口头上，布莱恩。嗯，看起来所有问题都已得到解答，那在这种情况下让我指出一个常见的错误，注意即使 f 是一个函数，这样写也是不正确的，原因是我们故意想将函数
    f 传递给 sorted 函数，以便。
- en: sorted function can take it upon itself，to call f again and again and again
    we。don't want to just call it once by using，the parentheses ourselves。we want
    to just pass it in by name so，that the sorted function which comes，with python。can
    instead do it for us santiago did，we，put f of title uh so like why wouldn't。
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: sorted 函数可以自作主张地反复调用 f。我们不想只用括号调用它一次，而是想通过名称传递它，这样 Python 的 sorted 函数就可以为我们完成这项工作。圣地亚哥做了，我们把
    f 作为 title 呀，那么为什么不呢？
- en: i was going to ask that question，specifically oh with the，uh，because that would
    call the function。once and only once we want，sorted to be able to call it again
    and。again now here's actually an example as，we've seen in the past。of a correct
    solution this is behaving，as i intend a list of sorted titles uh，from top to bottom。
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我本来要问那个问题，特别是哦，因为那样会调用函数一次而且仅一次，我们希望 sorted 能够再次和再三调用它。现在这实际上是一个示例，正如我们在过去看到的那样，这是一个正确的解决方案，这表现得正如我所期望的，从上到下的排序标题列表。
- en: in order of popularity but it's a little，poorly designed because i'm defining。this
    function f whose name in the first，place is kind of lame。but i'm defining a function
    only to use，it in one place and my god the，waste。of keystrokes to have defined
    a new，function just to then pass it in。
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 按受欢迎程度排序，但设计得有点糟糕，因为我定义的这个函数 f 首先名字有点无聊。我只为了在一个地方使用而定义一个函数，天哪，这样的按键浪费。
- en: so it turns out in python if you have a，very short function，whose purpose in
    life is meant to be to。that's it，and it's short enough that you're pretty，sure
    you can fit it on one line of code。without things wrapping and starting to，get
    ugly stylistically，it turns out you can actually do this。instead，you can copy
    the code that you had in，mind like this，function name。
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 所以事实证明，在 Python 中，如果你有一个非常短的函数，其生命意义就是这样，而它短得足以让你确定可以放在一行代码上而不会换行并且开始变得风格丑陋，实际上你可以这样做。你可以像这样复制你脑海中的代码，函数名称。
- en: you can actually use a special keyword，in python called lambda。you can specify
    the name of an argument，for your function as before。and then you can simply specify
    the，return value，thereafter deleting the function itself。so to be clear key is
    still an argument，to the sorted function，it expects as its value typically the。
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 你实际上可以使用一个在 Python 中称为 **lambda** 的特殊关键字。你可以像以前一样为函数指定一个参数的名称，然后简单地指定返回值，随后删除函数本身。所以为了明确，key
    仍然是传递给 sorted 函数的一个参数，它通常期望的值是。
- en: name of a function，but if you've decided that ah this seems，like a waste of
    extra waste of effort to。define a function then pass the function，in especially
    when it's so short。you can do it in a one-liner a lambda，function is an，python，its
    name。therefore you don't have to choose a，name for it but it does care still。
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的名称，但如果你认为这似乎是浪费额外的精力去定义一个函数然后传递这个函数，尤其是当它如此简短时，你可以在一行内做到。lambda函数是Python中的一个，因此你不必为它选择名称，但它仍然在意。
- en: about its arguments and its return value，so it's still up to you to provide
    zero，or more arguments。and a return value and notice i've done，that i've specified
    the keyword lambda。followed by the name of the argument i，want this anonymous，nameless
    function to accept and then i'm。specifying the return value，and with lambda functions
    you do not。
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 关于它的参数和返回值，所以仍然由你提供零个或多个参数和一个返回值。注意我已经指定了关键字`lambda`，后面跟着我希望这个匿名的无名函数接受的参数名称，然后我指定返回值，而对于lambda函数，你不需要指定返回值。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_135.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_135.png)'
- en: need to specify return，whatever you write after the colon is，literally what
    will be returned。![](img/f5dc569293e2d8c4779cf89dd8d3088f_137.png)
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要指定返回值，你在冒号后写的内容就是字面上将被返回的内容。![](img/f5dc569293e2d8c4779cf89dd8d3088f_137.png)
- en: automatically so again this is a very，pythonic thing to do it's kind of a very。clever
    one-liner even though it's a，time，but it allows you to condense your。thoughts
    into a succinct statement that，gets the job done，so you don't have to start defining
    more。else，then need to keep track of，all right any questions then on this and，i'm
    pretty sure this is as。
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化，所以这再次是一个非常Pythonic的做法，这是一种非常巧妙的单行代码，尽管它需要一些时间，但它允许你将思想浓缩成一个简洁的陈述，完成工作，因此你不必开始定义更多的内容，也无需跟踪，好的，有什么问题吗？
- en: complex or sophisticated as our python，code today we'll get，i was wondering
    why lambda is used as。like specifically rather than some other，keyword，yeah so
    there's a long history in this。and if in fact you take a course on，functional
    programming，at harvard it's called cs51 there's a。this，let me defer that one for
    another time，but indeed not only in python but in。
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂或精致的程度与我们今天的Python代码相当，我在想为什么使用`lambda`，而不是其他一些关键字？是的，这背后有一段漫长的历史，如果你在哈佛上了一门功能性编程的课程，叫做CS51，这个问题我留到下次再说，但实际上不仅在Python中。
- en: other languages as well these things，have come to exist called，lambda functions
    so they're actually。quite commonplace，in other languages as well and so python，just
    adopted the term。of art mathematically lambda is often，used as a symbol for，functions
    and so they borrowed that same。idea in the world of。
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 其他语言中也存在这些东西，称为**lambda函数**，所以它们实际上在其他语言中相当常见，因此Python也采用了这个术语。从数学上讲，lambda通常用作函数的符号，因此它们借用了这个想法。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_139.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_139.png)'
- en: programming all right so seeing no other，questions let's go ah**d and solve。a
    related problem still with some python，but that's going to。push up against the
    limits of efficiency，when it comes to storing our data in csv。files let me go
    ah**d and，start let me go ah**d and start fresh in，this file favorites dot pi。
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 编程，好吧，所以没有其他问题，我们继续解决一个相关问题，仍然使用Python，但这将接近效率的极限，涉及到将我们的数据存储在CSV文件中。让我开始在这个文件`favorites.py`中重新开始。
- en: all of the code i've written thus far，though is on the course's website in。advance
    so you can see the incremental，improvement i'm going to go ah**d and。again import
    csv at the top，and now this let's write a program this，time that doesn't just。automatically
    open up the csv and，analyze it looking，for the total popularity of shows，csv。
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止我写的所有代码都已经提前放在了课程网站上，所以你可以看到逐步改进。我将继续在顶部再次导入CSV，然后这次让我们写一个程序，这个程序不仅仅是自动打开CSV并分析它，寻找节目的总**流行度**。
- en: and then go ah**d and output uh the，popularity thereof and i can do this in。a
    bunch of different ways but i'm going，possible，i'm first going to ask the user
    for to。input a title，i could use cs50's getstring function，but recall that it's
    pretty much the。same as python's input function，so i'm going to use python's input，function
    today。
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，哦，继续输出它的**流行度**，我可以用很多不同的方式来做这个，但我首先会让用户输入一个标题。我可以使用CS50的`getstring`函数，但请记住，它与Python的`input`函数几乎相同，所以今天我将使用Python的`input`函数。
- en: and then i'm going to go ah**d and as，before open up that same csv called，favorite
    tv shows。form responses 1。csv，file，i'm then going to give myself a reader。and
    i'll use a dict reader again so i，don't have to worry about，knowing which columns
    things are in。passing in file，and then let's see if i only care about，one title
    i can keep this program。
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我将去**做**，像之前那样打开同一个csv，叫做最喜欢的电视剧。form responses 1.csv文件，我将给自己一个阅读器。我会再次使用字典读取器，这样我就不必担心，知道每列是什么内容。传入文件，然后让我们看看，如果我只关心一个标题，我可以保持这个程序。
- en: simpler i don't need to figure out，the popularity of every show i just need。to
    figure out the popularity of，one show the title that the human has。typed in so
    i'm going to go ah**d and，give myself a very simple int。called counter and set
    it equal to zero，i don't need a whole dictionary just one。
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 更简单，我不需要搞清楚每个节目的受欢迎程度，我只需搞清楚一个节目的受欢迎程度，也就是人输入的标题。所以我要去**做**一个非常简单的整数，叫做counter，并将其初始化为零，我不需要整个字典，只需要一个。
- en: variable suffices now，and i'm gonna go ah**d and iterate over，uh the rows，gonna
    say。if the current rows title uh，equals equals the title the human typed，by。one
    and it's already initialized because，good，and then at the end of this program。let's
    very simply print out the value of。
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 变量现在足够了，我要去**做**一个遍历，呃行，接着说。如果当前行的标题呃，等于人输入的标题，就加一，它已经被初始化，因为这样很好，然后在这个程序的最后，让我们简单地打印出这个值。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_141.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_141.png)'
- en: is to，and then just，report the popularity thereof by，in the file。so let me go
    ah**d and run this with，python of favorites。pi，enter uh let me go ah**d and type
    in the。office enter。![](img/f5dc569293e2d8c4779cf89dd8d3088f_143.png)
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我只需在文件中报告其受欢迎程度。所以让我去**做**这个，用python来处理最爱的节目。让我输入《办公室》，回车。![](img/f5dc569293e2d8c4779cf89dd8d3088f_143.png)
- en: and 19。now i don't remember exactly，what the number was but i remember the。![](img/f5dc569293e2d8c4779cf89dd8d3088f_145.png)
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 19。现在我不记得确切的数字，但我记得。![](img/f5dc569293e2d8c4779cf89dd8d3088f_145.png)
- en: office was more popular than that，i'm pretty sure it was not 19。intuition as
    to why this program is。buggy，or so it would seem what have i done，any thoughts
    in the chat or。![](img/f5dc569293e2d8c4779cf89dd8d3088f_147.png)
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 《办公室》比那个更受欢迎，我很确定它不是19。直觉认为这个程序是。buggy，或者说似乎我做了什么，聊天中有任何想法吗？![](img/f5dc569293e2d8c4779cf89dd8d3088f_147.png)
- en: a few people in the chat are saying you，need to remember to deal with。capitalization
    and white space again，yeah so we need to uh practice those。same lessons learned
    from before so i，should really canonicalize the input。that the human i just typed
    in and，also the input that's coming from the，this is up here。
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 聊天中有几个人在说你需要记得处理。大写和空格问题，没错，所以我们需要练习之前学到的那些相同教训，所以我真的应该标准化人刚刚输入的内容，还有来自的输入，这在上面。
- en: to first strip off leading and trailing，white space in case i get a little。sloppy
    and hit the space bar，where i shouldn't and then let's go，because。it doesn't matter
    if it's upper or lower，that way，and then when i do this look at the。current rows
    title，i think i really need to do the same，thing if i'm going to canonicalize
    one i。
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 首先去掉前后空格，以防我有点马虎，按下不该按的空格键，然后让我们去，因为。大写或小写都无所谓，这样，当我这样做时，看看当前行的标题，我觉得如果我要标准化一个，我真的需要做同样的事情。
- en: need to canonicalize the other and now，compare the all caps white space。stripped
    versions of both strings so now，let me rerun it，now i'm going to type in the office。enter
    and voila now i'm at，26 which i think is where we were at。before and in fact now
    i the user can be，a little sloppy i can say the office。
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 需要将其他内容标准化，现在比较两个字符串的全大写去空格版本。让我重新运行，现在我要输入《办公室》。回车，瞧，现在我在26，这我想是我们之前的地方，实际上现在我作为用户可以有点马虎，我可以说《办公室》。
- en: i can run it again and say the office。![](img/f5dc569293e2d8c4779cf89dd8d3088f_149.png)
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以再运行一次，输入《办公室》。![](img/f5dc569293e2d8c4779cf89dd8d3088f_149.png)
- en: space bar a lot，enter it's still going to work and，indeed though we seem to
    be like。belaboring the pedentic here with uh，trimming off white space and so forth。just
    think in a relatively small，audience here how many of you，accidentally hit the
    space bar or。capitalize things differently this。
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 空格键按了很多次，回车，这仍然会有效，确实我们似乎在这里过于挑剔，比如去掉空格等等。想想在相对较小的听众中，有多少人不小心按下空格键或以不同方式大写这个。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_151.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_151.png)'
- en: happens massively on scale and you can，imagine this being important。when you're
    tagging friends in some，social media account you're doing at。brian or the like
    you don't want to have，to require the user to type at。capital b lowercase r i
    a n and so forth，is such，a common uh problem to solve including。
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当规模巨大的时候，这变得非常重要。想象一下，当你在某些社交媒体帐户中标记朋友时，这会很重要。你不想要求用户输入大写的B、小写的r、i、a、n等等，这是一个非常常见的问题。
- en: in today's apps that we all use，all right any questions then on this。![](img/f5dc569293e2d8c4779cf89dd8d3088f_153.png)
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们今天使用的应用程序中，好吧，关于这个有任何问题吗？![](img/f5dc569293e2d8c4779cf89dd8d3088f_153.png)
- en: then let me ask a question of you in，what sense is this program poorly，designed。in
    what sense is this program poorly，designed，this is more subtle but think about
    the。running time of this program，in terms of big o what is the running，time of
    this program if the。csv file has n different，shows in it or n different submissions。
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 那我想问你一个问题，*在什么意义上*这个程序设计得不好？在什么意义上这个程序设计得不好？这更微妙，但想想这个程序的运行时间，以大O的形式，这个程序的运行时间是什么，如果csv文件中有n个不同的节目或者n个不同的提交。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_155.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_155.png)'
- en: so n is the variable in question yeah，what's the running time andrew。is the
    big o n because you're using the，linear search yeah it's big o of n。because i'm
    literally using linear，search by way of the for loop that's how，c。starts at the
    beginning and potentially，goes all the way till the end and so i'm。
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 所以n是我们讨论的变量，是的，安德鲁，运行时间是什么？是大O的n，因为你在使用线性搜索，是的，它是n的O。因为我确实在通过for循环使用线性搜索，这就是c的方式。从开始一直潜在到结束，所以我。
- en: using implicitly linear search，because i'm not using any fancy data，just，imagine
    that。if we surveyed not just all of the，students here in class but maybe。everyone
    on campus or everyone in the，world maybe we're internet movie，database imdb。there
    could be a huge number of votes，and a huge number of shows。
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 隐式使用线性搜索，因为我没有使用任何复杂的数据。想象一下，如果我们不仅对班上的所有学生进行调查，而是对校园里的每个人，甚至对全世界的人进行调查，或许我们是互联网电影数据库imdb。可能会有大量的投票和节目。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_157.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_157.png)'
- en: and so writing a program whether it's in，a terminal window like mine or maybe
    on。![](img/f5dc569293e2d8c4779cf89dd8d3088f_159.png)
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，无论是在我的终端窗口还是在其他地方，写一个程序会更加优雅。![](img/f5dc569293e2d8c4779cf89dd8d3088f_159.png)
- en: a mobile device or maybe on a web page，for your laptop or desktop。it's probably
    not the best design to，constantly，loop over all of the shows in your。![](img/f5dc569293e2d8c4779cf89dd8d3088f_161.png)
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 一个移动设备或者可能是在网页上，适用于你的笔记本或台式电脑。这可能不是最好的设计，*不断*遍历你数据库中的所有节目，只为回答一个问题。![](img/f5dc569293e2d8c4779cf89dd8d3088f_161.png)
- en: database from top to bottom，just to answer a single question it。![](img/f5dc569293e2d8c4779cf89dd8d3088f_163.png)
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 从上到下，*仅仅*是为了回答一个问题。![](img/f5dc569293e2d8c4779cf89dd8d3088f_163.png)
- en: would be much nicer to do things in，log of end time or in constant time and。thankfully
    over the past few weeks both，in cnn and python we have seen，practicing。what i've
    preached here and in fact at，some point，this notion of a flat file database。starts
    to get too primitive for us flat，file databases like csv files。
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '以记录结束时间或以常量时间的方式处理事情，会更好。感谢过去几周，我们在cnn和python中看到了实践。我在这里讲的内容，实际上在某个时刻，平面文件数据库的概念开始对我们来说过于原始。平面文件数据库如csv文件。 '
- en: are wonderfully useful when you just，want to do something quickly。or when you
    want to download data from，standard。![](img/f5dc569293e2d8c4779cf89dd8d3088f_165.png)
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 当你只想快速做点什么或从标准中下载数据时，它们非常有用。![](img/f5dc569293e2d8c4779cf89dd8d3088f_165.png)
- en: portable way portable means that it can，systems，csv is about as simple as it
    gets，word。or apple numbers or any particular，product it's just a text file so
    you can。use any text editing program，or any programming language to access it，but
    flat file databases aren't。necessarily the best，uh structure to use ultimately
    for，larger data sets。
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 便携的方式，便携意味着它可以在系统之间使用，csv文件是最简单的格式，*无论是*word、苹果数字或其他特定产品，它只是一个文本文件，因此你可以使用任何文本编辑程序或任何编程语言来访问它，但平面文件数据库并不一定是最佳的结构，最终用于较大的数据集。
- en: because they don't really lend，themselves to more efficient queries so，to search，out
    that there。are better databases out there generally，known as relational databases
    that，store data，store data。now to be fair those programs use a lot，of ram memory，where
    they actually store your data and。they do certainly persist your data they，keep
    it long-term，by storing your data also in files but。
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它们并不真正适合更高效的查询，所以要搜索更好的数据库，通常被称为关系数据库，这些数据库存储数据，公平地说，这些程序使用了大量内存，它们确实会持久化你的数据，通过将数据存储在文件中来长期保存。
- en: between you and your data，there is this running program and if。you've ever heard
    of oracle or mysql or，postgres or sql server or microsoft，access or bunches。of
    other popular products both，commercial and free and open source，alike relational
    databases are so。similar in spirit，to spreadsheets but they are implemented，in
    software。
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在你和你的数据之间，有一个正在运行的程序，如果你听说过Oracle、MySQL、Postgres、SQL Server或Microsoft Access等其他许多流行的产品，无论是商业的还是开源的，关系数据库在精神上与电子表格非常相似，但它们是通过软件实现的。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_167.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_167.png)'
- en: and they give us more and more features，and they use more and more data，structures
    so that we can。search for data insert data delete data，update data，much much more
    efficiently than we could。if just using，something like a csv file so let's go，ahead
    and take our five minute break。here and when we come back we'll look at，relational
    databases and in turn a。
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 它们给我们提供越来越多的功能，使用越来越多的数据结构，以便我们能比仅使用CSV文件更高效地搜索、插入、删除和更新数据，所以我们来这里休息五分钟，回来后我们将查看关系数据库。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_169.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_169.png)'
- en: alright so we are back and the goal at，hand now is to transition from these，fairly
    simplistic。![](img/f5dc569293e2d8c4779cf89dd8d3088f_171.png)
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们回来了，现在的目标是从这些相对简单的。![](img/f5dc569293e2d8c4779cf89dd8d3088f_171.png)
- en: flat file databases to a more proper，relational database and relational。databases
    are indeed what power，so many of today's mobile applications，web applications
    and the like。now we're beginning to transition to，real world software with real
    world。languages at that and so now，uh let me introduce what we're going to，call
    sql lite。
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 从平面文件数据库过渡到更正式的关系数据库，而关系数据库确实是支持今天许多移动应用、网络应用等的基础。现在我们开始过渡到现实世界的软件和真实世界的语言，所以现在，让我介绍我们将称之为SQL
    Lite的东西。
- en: so it turns out that a relational，database is a database that stores all。of
    the data still in rows and columns，but it doesn't do so using。spreadsheets or
    sheets it instead does，so using what we're going to call。tables so it's pretty
    much the same idea，but in with tables do we get some，additional functionality。
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，关系数据库是一种以行和列存储所有数据的数据库，但它不是通过电子表格，而是使用我们称之为表格的方式，因此基本上是同样的想法，但在表格中，我们获得了一些额外的功能。
- en: with those tables we'll have the ability，to search for data，update data delete
    data insert new data。and the like and these are things that，we absolutely can
    do with spreadsheets。but in the world of spreadsheets if you，the human doing，it
    by manually clicking and scrolling。typically if you want to insert data，it's you
    the human，typing it in manually after adding a new。
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些表格，我们将能够搜索数据、更新数据、删除数据、插入新数据等，这些都是我们在电子表格中绝对可以做到的，但在电子表格的世界里，通常是你这个人手动点击和滚动。如果你想插入数据，通常是你手动输入的。
- en: row if you want to delete something it's，and，deleting a whole row or updating
    the。individual cells they're in，with sql structured query language we。have a new
    programming language that is，very often used in conjunction with。other programming
    languages and so today，we'll see sql used on its own initially。
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想删除某个东西，可以删除整行或更新其中的单元格，使用结构化查询语言SQL，我们有一种新的编程语言，它通常与其他编程语言结合使用，所以今天我们将看到最初独立使用的SQL。
- en: but we'll also see it in the context of，python，can itself use sql to，alone。could
    do so with that said sql lite is，like a light version of sql it's a more。user-friendly
    version it's more portable，it can be used on macs and pcs and。phones and laptops
    and desktops and，servers but it's incredibly common in，phone。
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们也会看到在Python的上下文中，它本身可以独立使用SQL。SQL Lite就像SQL的轻量版，更友好，更便携，可以在Mac、PC、手机、笔记本、台式机和服务器上使用，但在手机上极其普遍。
- en: many of the applications you are running，today on your own device。are using
    sql lite underneath the hood，so it isn't a toy language per se。it's instead a
    relatively simple，implementation of a language generally。known as sql but long
    story short，there's other implementations of。
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 您今天在自己设备上运行的许多应用程序都是在后台使用sqlite，所以它并不是一种玩具语言。它实际上是对通常称为sql的语言的相对简单实现，但长话短说，还有其他实现。
- en: relational databases out there and i，rattled off several of them already。oracle
    and mysql and postgres and the，like those all，have slightly different flavors
    or。dialects of sql，language，for interacting with databases but。![](img/f5dc569293e2d8c4779cf89dd8d3088f_173.png)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经列举了几种关系数据库，包括oracle、mysql和postgres等，它们都有略微不同的sql语言风格或方言，用于与数据库进行交互。![](img/f5dc569293e2d8c4779cf89dd8d3088f_173.png)
- en: communities，have kind of added or subtracted their，own preferred features。and
    so the syntax you use is generally，constant across all platforms。but we will standardize
    for our purposes，on sql lite and indeed this is what you。would use these days
    in the world of。
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 社区在某种程度上添加或删除了他们自己的首选特性。因此，您使用的语法通常在所有平台上是恒定的。但为了我们的目的，我们将以sql lite为标准，实际上这就是您如今在关系数据库世界中会使用的。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_175.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_175.png)'
- en: mobile applications，so it's very much germane there so with，sqlite。we're going
    to have ultimately the，ability to，query data and update data delete data。and the
    like but to do so we actually，need a program，so the way，your data still。in a file
    but it's a binary file now，that is it's a file containing zeros and。
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用程序，所以这与此密切相关。使用sqlite，我们最终将能够查询数据、更新数据、删除数据等。但为了做到这一点，我们实际上需要一个程序，因此您的数据仍然存储在文件中，但现在它是一个包含零和一的二进制文件。
- en: ones and those zeros and ones might，represent text they might represent。numbers
    but it's a more compact，efficient representation than a mere csv，file would be
    using ascii。or unicode so that's the first，difference sqlite，uses a single file
    a binary file to。store all of your data and represented，inside of that file by
    way of all of，those zeros and ones。
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 那些零和一可能代表文本，也可能代表数字，但这是一种比单纯的csv文件使用ascii或unicode更紧凑高效的表示方式。因此，sqlite的第一个区别是，它使用一个单一的二进制文件来存储所有数据，并通过所有这些零和一在该文件中进行表示。
- en: are the tables to which i alluded before，which are the analog，in the database
    world of sheets or。spreadsheets in the spreadsheet world，so to interact with that
    binary file。wherein all of your data is stored we，need some kind of user facing
    program，but the most，sql lite。is called sql lite3 essentially version，tool，similar
    in spirits any of the commands。
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我之前提到的表格，它们是数据库世界中类似于电子表格的概念。因此，为了与存储所有数据的二进制文件进行交互，我们需要某种用户界面程序，而sqlite被称为sql
    lite3，实质上是版本工具，精神上类似于任何命令。
- en: you've run in a terminal window thus far，that allows you to open up that binary。file
    and interact with all of your，tables now here again we kind of have a。chicken
    in the egg problem if i want to，use a database but i don't yet。have a database
    and yet i want to select，data from my database，how do i actually load things in
    well。
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止，您在终端窗口中运行的程序允许您打开该二进制文件并与所有表格进行交互。现在，我们再次面临一个“鸡与蛋”的问题：如果我想使用数据库，但我还没有数据库，同时又想从数据库中选择数据，我该如何加载内容呢？
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_177.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_177.png)'
- en: you can load data into a sqlite database，in at least two ways，just import，csv。and
    what you do is you save the csv on，your mac or pc and your cs50 ide，and it will
    just。![](img/f5dc569293e2d8c4779cf89dd8d3088f_179.png)
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过至少两种方式将数据加载到sqlite数据库中，直接导入csv。您所要做的就是将csv保存在您的mac或pc和cs50 ide上，它将自动完成。![](img/f5dc569293e2d8c4779cf89dd8d3088f_179.png)
- en: out where all of the，commas are and it will construct inside。![](img/f5dc569293e2d8c4779cf89dd8d3088f_181.png)
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 查找所有的逗号，它将内部构建。![](img/f5dc569293e2d8c4779cf89dd8d3088f_181.png)
- en: of that binary file，the corresponding rows and columns using，the appropriate
    zeros and ones。to store all of that information so it，just imports it for you
    automatically。approach two would be to actually write，other，that actually manually
    inserts all of，the data。into your database and we'll do that as，ahead and run，for
    instance sqlite3 and this is。
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 该二进制文件的相应行和列使用适当的零和一来存储所有信息，因此它会自动为您导入。第二种方法是实际编写其他代码，手动将所有数据插入数据库中，我们将提前进行此操作，运行sqlite3，这是。
- en: pre-installed on cs50 ide and it's not，that hard to get it up and running on
    a，mac and pc as well。i'm going to go ah**d and run sql light，3 in my terminal
    window here，output。it's telling me to type period help if i，want to see some usage
    hints but。i know most of the commands and will。
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在cs50 ide上预安装，并且在mac和pc上也不难启动。我将在我的终端窗口中继续运行sql light 3，输出。它告诉我如果我想查看一些使用提示，可以输入句点帮助，但我知道大多数命令。
- en: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_183.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5dc569293e2d8c4779cf89dd8d3088f_183.png)'
- en: that you might need，in fact one of the commands that we can，import。![](img/f5dc569293e2d8c4779cf89dd8d3088f_185.png)
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要的，事实上我们可以导入的命令之一。![](img/f5dc569293e2d8c4779cf89dd8d3088f_185.png)
- en: so generally you won't use these that，frequently you'll only use them when。creating
    a database for the first time，when you are creating that database from，an existing
    csv。file and indeed that's my goal at the，moment let me take our csv file。containing
    all of your favorite tv shows，and load it into sql lite in a proper，relational
    database。
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 所以一般来说，你不会频繁使用这些，通常只有在第一次创建数据库时，才会使用它们，当你从现有的csv文件创建数据库时，事实上这是我目前的目标，让我将包含你最喜欢的电视节目的csv文件加载到sql
    lite中，形成一个合适的关系数据库。
- en: so that we can do better than for，instance big o，of n when it comes to searching
    that。data and doing anything else on it，so to do this i have to execute two。commands
    one i need to put sql light，into csv mode，and that's just to distinguish it from。other
    flat file formats like tsv for，tabs or some other format，and now i'm going to
    go ah**d and run。
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '这样我们在搜索数据和进行其他操作时可以表现得比例如大O(n)更好，因此为了做到这一点，我需要执行两个命令，第一个是将sql light置于csv模式，这只是为了将其与其他平面文件格式区分开，比如tsv或其他格式，现在我要继续执行。 '
- en: import then i have to specify the name，of the file to import which is the csv。and
    i'm going to go ah**d and call my，table shows。![](img/f5dc569293e2d8c4779cf89dd8d3088f_187.png)
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 导入时，我必须指定要导入的文件名，即csv。我将继续将我的表称为shows。![](img/f5dc569293e2d8c4779cf89dd8d3088f_187.png)
- en: so dot import takes two arguments the，name of the file that you want to import。![](img/f5dc569293e2d8c4779cf89dd8d3088f_189.png)
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 所以点导入需要两个参数，您要导入的文件名。![](img/f5dc569293e2d8c4779cf89dd8d3088f_189.png)
- en: to create，out of that file and again tables have，rows and columns，delineate。where
    those columns begin and end i'm，going to go ah**d and hit enter。it looks like
    it flew by pretty fast，nothing seems to have happened。but i think that's okay
    because now。![](img/f5dc569293e2d8c4779cf89dd8d3088f_191.png)
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 从该文件创建表格，再次强调，表格有行和列，明确这些列的开始和结束，我将按下**回车**，看起来速度非常快，似乎没有发生什么。但我想这没关系，因为现在。![](img/f5dc569293e2d8c4779cf89dd8d3088f_191.png)
- en: ability，to actually manipulate that data but how，do we manipulate the data。we
    need a new language sql structured，query language，is the language used by sql
    lights and。oracle and mysql and postgres and，bunches of other products whose names。you
    don't need to know or remember，anytime soon，but sql is the language we'll use
    to。
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '实际上操作数据的能力，但我们如何操作数据。我们需要一种新的语言，sql结构化查询语言，是sql lights、oracle、mysql和postgres及其他一些产品所使用的语言，你不需要在短时间内知道或记住它们的名字，但sql将是我们用来。 '
- en: query the database，for information and do something with it，generally speaking。a
    relational database and in turn sql，which is a language by，which you can interact
    with relational。databases support four，fundamental operations and they're sort，of
    a crude acronym。pun intended that is just helpful for，remembering what those fundamental。
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '查询数据库以获取信息并进行操作，一般来说。关系数据库以及相应的sql，作为与关系数据库交互的语言，支持四种基本操作，这些操作可以用一个简单的首字母缩略词记住。 '
- en: operations are with relational databases，crud，stands for create read。update
    and deletes and indeed the，acronym is crud crud，so it helps you remember that
    the four。basic operations supported by，any relational database are create read，update
    delete。create means to create or add new data，read means to，access and load into
    memory new data，files。
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 操作与关系数据库相关的，crud代表创建、读取、更新和删除，确实这个缩写是crud，这样有助于你记住任何关系数据库支持的四个基本操作是创建、读取、更新和删除。创建意味着创建或添加新数据，读取意味着访问并加载新数据文件到内存中。
- en: update and delete mean exactly that as，well if you want to manipulate the data，in
    your data set。now those are generic terms for any，relational database those are
    the four。properties typically supported by any，relational database，specific，implement。those
    four uh functionalities，they are create and insert achieve the。
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 更新和删除的意思是，如果你想操纵数据集中的数据。现在这些是任何关系数据库的通用术语，通常由任何关系数据库支持的四个属性，具体的实现是这四个功能，它们是创建和插入。
- en: same thing as create more generally，the keyword select is what's used to，read
    data from a database。update and delete are the same so it's。![](img/f5dc569293e2d8c4779cf89dd8d3088f_193.png)
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 通常来说，创建更多的关键字是用来从数据库中读取数据的，更新和删除也是如此。![](img/f5dc569293e2d8c4779cf89dd8d3088f_193.png)
- en: kind of an annoying inconsistency the，acronym or the term of art is crud。create
    read update delete but in the，decided to，these five，will，in the language sql so
    what you are。looking at as are，five of the keywords you can use in this，new language
    called sql。to actually do something with your，database now what does that mean。
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一种令人恼火的不一致性，术语或行业术语是 CRUD，创建、读取、更新、删除，但在 SQL 语言中你会看到这五个关键字，以便于实际对数据库进行操作，那么这意味着什么呢？
- en: well suppose that you wanted to manually，time，what do you do well back in the
    world of。spreadsheets it's pretty straightforward，right you like open up google。spreadsheets
    you go to like file new or，whatever and then you just voila。you get a new spreadsheet
    into which you，the like，microsoft excel apple number same thing。
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想手动操作时间，那你该怎么办？在电子表格的世界里，这很简单，对吧？你打开谷歌电子表格，选择文件新建或其他，然后就可以得到一个新的电子表格，就像微软
    Excel 和苹果数字一样。
- en: file menu new spreadsheet or whatever，and boom you have a new spreadsheet now，in
    the world of sql。![](img/f5dc569293e2d8c4779cf89dd8d3088f_195.png)
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 文件菜单中新建电子表格或其他，然后你现在有一个新的电子表格，在 SQL 的世界里。![](img/f5dc569293e2d8c4779cf89dd8d3088f_195.png)
- en: interacted with，code however there are graphical user，interfaces guise by which
    you can。interact with them as well but we're，going to use code today to do so。and
    programs at a command line it turns，out that you can，create tables programmatically
    by。running a command like this，so if you literally type out syntax，along the lines
    of create。
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与代码互动有图形用户界面，通过这些界面你也可以与它们互动，但今天我们将使用代码来实现这一点。在命令行程序中，结果是你可以通过运行类似的命令程序化地创建表格，所以如果你按字面意思输入语法，就像创建。
- en: table then the name of your table，indicated here in lowercase。then a parenthesis
    then the name of your，column that you want to create。and the type of that column
    a la，columns。![](img/f5dc569293e2d8c4779cf89dd8d3088f_197.png)
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 表格的名称在这里用小写字母表示，然后是括号，接着是你想创建的列名，以及该列的类型。![](img/f5dc569293e2d8c4779cf89dd8d3088f_197.png)
- en: you will use，to create in this language called sql a，again like。table in lowercase
    is meant to represent，table，column in lowercase is meant to be the。name you want
    to give to your own column，maybe it's title maybe genres。and dot dot just means
    of course you can，have even more columns than that。
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在这个被称为 SQL 的语言中使用，表格用小写字母表示，列用小写字母表示，是你想给自己列的名称，也许是标题，也许是类型。而点点点则意味着你当然可以有更多的列。
- en: but literally in a moment if i were to，type in this kind of command。into the
    terminal window after running。![](img/f5dc569293e2d8c4779cf89dd8d3088f_199.png)
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我在终端窗口输入这种命令。![](img/f5dc569293e2d8c4779cf89dd8d3088f_199.png)
- en: the sqlite3 program，i could start creating one or more，tables for myself。and
    in fact that's what already happened，for me this dot，import command which is not
    part of sql。option，in excel or google spreadsheets dot，import just automates a
    certain process。for me and what it did for me is this，if i type now dot schema
    which is。
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: sqlite3 程序，我可以为自己开始创建一个或多个表格。实际上，这已经为我发生了，点导入命令，这不是 SQL 的一部分。在 Excel 或谷歌电子表格中，点导入只是为我自动化了某个过程，实际上它为我做的是，如果我现在输入点架构，这就是。
- en: another sql light specific command，anything that starts with a dot，is specific
    only to sqlite 3 this。terminal window program。![](img/f5dc569293e2d8c4779cf89dd8d3088f_201.png)
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个特定于 sqlite 的命令，任何以点开头的命令仅特定于 sqlite 3 的这个终端窗口程序。![](img/f5dc569293e2d8c4779cf89dd8d3088f_201.png)
- en: notice what's outputted is this by，running dot import，table，in my database called，timest*mp。title
    and genres where did those column，names come from，come from well they came from
    the very。first line in the csv，and they all looked like text so the，type of those
    values was just in，clear。i could have manually typed this out，created these three
    columns in a new。
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，通过运行点导入，输出的表格在我称为timest*mp的数据库中，标题和类型这些列名来自哪里，实际上它们来自csv的第一行，并且它们看起来都是文本，因此这些值的类型显然是清晰的。我本可以手动输入这些，创建这三个新列。
- en: table called shows for me but again the，dot import command just automated that，from
    a csv。
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 表格称为显示给我，但再次提到的点导入命令只是自动化了，从csv中导入。
