- en: 9\.   Words and Maps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9\.   单词和映射
- en: 原文：[https://aofa.cs.princeton.edu/90maps](https://aofa.cs.princeton.edu/90maps)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://aofa.cs.princeton.edu/90maps](https://aofa.cs.princeton.edu/90maps)
- en: This chapter covers global properties of *words* (`N`-letter strings from an
    `M`-letter alphabet), which are well-studied in classical combinatorics (because
    they model sequences of independent Bernoulli trials) and in classical applied
    algorithmics (because they model input sequences for hashing algorithms). The
    chapter also covers random *maps* (`N`-letter words from an `N`-letter alphabet)
    and discusses relationships with trees and permutations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了*单词*（从`M`-字母表中的`N`-字母字符串）的全局属性，这在经典组合学中得到了很好的研究（因为它们模拟了独立伯努利试验的序列）和经典应用算法学中得到了很好的研究（因为它们模拟了哈希算法的输入序列）。本章还涵盖了随机*映射*（从`N`-字母表中的`N`-字母单词）并讨论了与树和排列的关系。
- en: 9.1 Hashing with Separate Chaining
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.1 使用分离链接进行哈希
- en: 9.2 Basic Properties of Words
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.2 单词的基本属性
- en: 9.3 Birthday Paradox and Coupon Collector Problem
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.3 生日悖论和优惠券收集者问题
- en: 9.4 Occupancy Restrictions and Extremal Parameters
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.4 占用限制和极值参数
- en: 9.5 Occupancy Distributions
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.5 占用分布
- en: 9.6 Open Addressing Hashing
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.6 开地址哈希
- en: 9.7 Maps
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.7 映射
- en: 9.8 Integer Factorization and Maps
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.8 整数因子分解和映射
- en: Selected Exercises
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 选定练习
- en: '9.5'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.5'
- en: For $M=365$, how many people are needed to be 99% sure that two have the same
    birthday?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于$M=365$，需要多少人才能确保两个人生日相同的概率为99%？
- en: '9.22'
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.22'
- en: Give a plot (for $M=365$) of the probability that *three* people have the same
    birthday.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 给出一个（对于$M=365$）三个人生日相同的概率的图表。
- en: '9.23'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.23'
- en: For $M=365$, how many people are needed to be 50% sure that three have the same
    birthday? Four?
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于$M=365$，需要多少人才能确保三个人生日相同？四个人呢？
- en: '9.28'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.28'
- en: What is the probability that one urn will get all the balls when 100 balls are
    randomly distributed among 100 urns?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当100个球随机分布在100个瓮中时，一个瓮得到所有球的概率是多少？
- en: '9.29'
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.29'
- en: What is the probability that each urn will get one ball when 100 balls are randomly
    distributed among 100 urns?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当100个球随机分布在100个瓮中时，每个瓮都得到一个球的概率是多少？
- en: '9.37'
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.37'
- en: Find $[z^n]e^{\alpha C(z)}$ where $C(z)$ is the Cayley function (see the discussion
    at the end of Section 6.14 and in Section 9.7 in this chapter).5
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 找到$[z^n]e^{\alpha C(z)}$，其中$C(z)$是Cayley函数（请参见本章末尾的讨论和本章9.7节）。5
- en: '9.38'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.38'
- en: (``Abel's binomial theorem.'') Use the result of the previous exercise and the
    identity $e^{(\alpha+\beta)C(z)}=e^{\alpha C(z)}e^{\beta C(z)}$ to prove that
    $$(\alpha+\beta)(n+\alpha+\beta)^{n-1} =\alpha\beta\sum_k{n\choose k}(k+\alpha)^{k-1}(n-k+\beta)^{n-k-1}.$$
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: （``阿贝尔二项式定理。''）使用前一个练习的结果和恒等式$e^{(\alpha+\beta)C(z)}=e^{\alpha C(z)}e^{\beta
    C(z)}$证明$$(\alpha+\beta)(n+\alpha+\beta)^{n-1} =\alpha\beta\sum_k{n\choose k}(k+\alpha)^{k-1}(n-k+\beta)^{n-k-1}.$$
- en: '9.53'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.53'
- en: A mapping with no repeated integers is a permutation. Give an efficient algorithm
    for determining whether a mapping is a tree.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 没有重复整数的映射是一个排列。给出一个有效的算法来确定一个映射是否是一棵树。
- en: '9.58'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.58'
- en: Describe the graph structure of *partial* mappings, where the image of a point
    may be undefined. Set up the corresponding EGF equations and check that the number
    of partial mappings of size $N$ is $(N+1)^N$.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 描述*部分*映射的图结构，其中点的图像可能未定义。建立相应的EGF方程，并检查大小为$N$的部分映射的数量为$(N+1)^N$。
- en: '9.60'
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.60'
- en: Generate 100 random maps of size 100, 1000, and 10000 and empirically verify
    that about 48% of the nodes are in the largest tree, that about 76% of the nodes
    are in the largest cycle, and that, in a random map of size $N$, the number of
    nodes in the longest tail, cycle, and rho-path are about $1.74\sqrt{N}$, $.78\sqrt{N}$,
    and $2.41\sqrt{N}$, respectively.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 生成100个大小为100、1000和10000的随机映射，并经验性地验证大约48%的节点在最大树中，大约76%的节点在最大循环中，在大小为$N$的随机映射中，最长尾部、循环和rho路径中的节点数分别约为$1.74\sqrt{N}$、$.78\sqrt{N}$和$2.41\sqrt{N}$。
- en: '9.61'
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.61'
- en: Use Floyd's method to test the random number generator on your machine for short
    cycles.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Floyd的方法测试您机器上的随机数生成器是否存在短循环。
- en: '9.99'
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '9.99'
- en: Show that the probability that a random mapping of size N has no singleton cycles
    is $\sim 1/e$, the same as for permutations (!).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 证明大小为N的随机映射没有单例循环的概率是$\sim 1/e$，与排列的概率相同（！）。
- en: Review Questions
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 复习问题
- en: Q9.1
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q9.1
- en: Give the EGF for random mappings with no singleton cycles. Express your answer
    as a function of the Cayley function $C(z) = e^{C(z)}$.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 给出没有单例循环的随机映射的EGF。将你的答案表示为Cayley函数的函数$C(z) = e^{C(z)}$。
- en: Q9.2
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q9.2
- en: 'This problem involves enumerating the mappings where every character appears
    exactly twice or not at all. Such mappings must be of even length. There are 2
    such mappings of length 2 (11 and 22) and 36 of them of length 4\. By a direct
    combinatorial argument, it is not difficult to derive the explicit form $$C_{2n}
    = {2n\choose n}{(2n)!\over 2^n}.$$ Give an explicit formula for the EGF $$C(z)
    = \sum_{n\ge0}{C_{2n}\over(2n)!}z^{2n}$$ and an asymptotic estimate (~-approximation)
    of $C_{2n}$. *Extra credit*: Give a full derivation via analytic combinatorics.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题涉及枚举每个字符出现正好两次或不出现的映射。这样的映射必须是偶数长度。长度为2的映射有2个（11和22），长度为4的映射有36个。通过直接的组合论论证，很容易得出显式形式$$C_{2n}
    = {2n\choose n}{(2n)!\over 2^n}.$$给出EGF的显式公式$$C(z) = \sum_{n\ge0}{C_{2n}\over(2n)!}z^{2n}$$和$C_{2n}$的渐近估计（~近似）。*额外学分*：通过解析组合学给出完整推导。
- en: Q9.3
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q9.3
- en: Give a ~approximation for the proportion of mappings of elements that have more
    than one connected component.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 给出元素具有多个连接组件的映射比例的~近似。
