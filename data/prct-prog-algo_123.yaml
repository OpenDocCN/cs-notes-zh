- en: 4\.   Asymptotic Approximations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\.   渐近逼近
- en: 原文：[https://aofa.cs.princeton.edu/40asymptotic](https://aofa.cs.princeton.edu/40asymptotic)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://aofa.cs.princeton.edu/40asymptotic](https://aofa.cs.princeton.edu/40asymptotic)
- en: This chapter examines methods of deriving approximate solutions to problems
    or of approximating exact solutions, which allow us to develop *concise* and *precise*
    estimates of quantities of interest when analyzing algorithms.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了导出问题的近似解或近似精确解的方法，这些方法使我们能够在分析算法时对感兴趣的数量进行*简洁*和*精确*的估计。
- en: 4.1 Notation for Asymptotic Approximations
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1 渐近逼近符号
- en: 'The following notations, which date back at least to the beginning of the century,
    are widely used for making precise statements about the approximate value of functions:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下符号，至少可以追溯到本世纪初，被广泛用于对函数的近似值进行精确陈述：
- en: '**Definition.** Given a function $f(N)$, we write'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义。** 给定一个函数 $f(N)$，我们写'
- en: $g(N)=O(f(N))$ if and only if $|g(N)/f(N)|$ is bounded from above as $N\to\infty$
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $g(N)=O(f(N))$ 当且仅当 $|g(N)/f(N)|$ 作为 $N\to\infty$ 时被上界限制
- en: $g(N)=o(f(N))$ if and only if $g(N)/f(N)\to 0$ as $N\to\infty$
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 若 $g(N)=o(f(N))$ 当且仅当 $g(N)/f(N)\to 0$ 当 $N\to\infty$ 时
- en: $g(N)\sim f(N)$ if and only if $g(N)/f(N)\to 1$ as $N\to\infty$.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $g(N)\sim f(N)$ 当且仅当 $g(N)/f(N)\to 1$ 当 $N\to\infty$ 时。
- en: The $O$- and $o$-notations provide ways to express upper bounds (with $o$ being
    the stronger assertion), and the $\sim$-notation provides a way to express asymptotic
    equivalence.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: $O$-和$o$-符号提供了表达上界（$o$ 是更强的断言）的方法，而 $\sim$-符号提供了表达渐近等价的方法。
- en: In the analysis of algorithms, we avoid direct usages such as “the average value
    of this quantity is $O{f(N)}$” because this gives scant information for the purpose
    of predicting performance. Instead, we strive to use the $O$-notation to bound
    “error” terms that have far smaller values than the main, or “leading” term. Informally,
    we expect that the terms involved should be so small as to be negligible for large
    $N$.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在算法分析中，我们避免直接使用诸如“这个数量的平均值是 $O{f(N)}$”这样的用法，因为这对于预测性能而言提供的信息很少。相反，我们努力使用 $O$-符号来限定“误差”项，这些项的值远小于主要或“主导”项。非正式地说，我们期望所涉及的项应该足够小，以至于在
    $N$ 很大时可以忽略不计。
- en: '*$O$-approximations.* We say that $g(N)=f(N)+O(h(N))$ to indicate that we can
    approximate $g(N)$ by calculating $f(N)$ and that the error will be within a constant
    factor of $h(N)$. As usual with the $O$-notation, the constant involved is unspecified,
    but the assumption that it is not large is often justified. As discussed below,
    we normally use this notation with $h(N)=o(f(N))$.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*$O$-逼近.* 我们说 $g(N)=f(N)+O(h(N))$ 表示我们可以通过计算 $f(N)$ 来近似 $g(N)$，并且误差将在 $h(N)$
    的一个常数因子范围内。通常情况下，与 $O$-符号一样，涉及的常数是未指定的，但通常可以合理假设它不大。正如下文所讨论的，我们通常将此符号与 $h(N)=o(f(N))$
    一起使用。'
- en: '*$o$-approximations.* A stronger statement is to say that $g(N)=f(N)+o(h(N))$
    to indicate that we can approximate $g(N)$ by calculating $f(N)$ and that the
    error will get smaller and smaller compared to $h(N)$ as $N$ gets larger. An unspecified
    function is involved in the rate of decrease, but the assumption that it is never
    large numerically (even for small $N$) is often justified.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*$o$-逼近.* 更强的陈述是说 $g(N)=f(N)+o(h(N))$ 表示我们可以通过计算 $f(N)$ 来近似 $g(N)$，并且随着 $N$
    的增大，误差相对于 $h(N)$ 会变得越来越小。涉及到一个未指定的函数来描述减小的速率，但通常可以合理假设它在数值上从不大（即使对于小的 $N$）。 '
- en: '*$\sim$-approximations.* The notation $g(N)\sim f(N)$ is used to express the
    weakest nontrivial $o$-approximation $g(N)=f(N)+o(f(N))$.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*$\sim$-逼近.* 符号 $g(N)\sim f(N)$ 用于表示最弱的非平凡 $o$-逼近 $g(N)=f(N)+o(f(N))$。'
- en: These notations are useful because they can allow suppression of unimportant
    details without loss of mathematical rigor or precise results. If a more accurate
    answer is desired, one can be obtained, but most of the detailed calculations
    are suppressed otherwise. We will be most interested in methods that allow us
    to keep this “potential accuracy,” producing answers that could be calculated
    to arbitrarily fine precision if desired.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些符号很有用，因为它们可以在不损失数学严谨性或精确结果的情况下抑��不重要的细节。如果需要更准确的答案，可以获得，但大部分详细计算通常被抑制。我们最感兴趣的是能够保持这种“潜在精度”的方法，产生的答案如果需要可以计算到任意精度。
- en: '*Asymptotics of linear recurrences.* Linear recurrences provide an illustration
    of the utility of asymptotics. Any linear recurrent sequence $\{a_n\}$ has a rational
    OGF and is a linear combination of terms of the form $\beta^{n}n^{j}$. Asymptotically
    speaking, only a few terms need be considered, because those with larger $\beta$
    exponentially dominate those with smaller $\beta$. For example, exact solution
    to $$a_n=5a_{n-1}-6a_{n-2}\qquad\hbox{for $n>1$ with $a_0=0$ and $a_1=1$}$$ is
    $3^n-2^n$, but the approximate solution $3^n$ is accurate to within a thousandth
    of a percent for $n>25$. We need keep track only of terms associated with the
    largest absolute value or modulus.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*线性递归的渐近性.* 线性递归提供了渐近性的实用示例。任何线性递归序列 $\{a_n\}$ 都有一个有理 OGF，并且是形如 $\beta^{n}n^{j}$
    的项的线性组合。从渐近的角度来看，只需要考虑少数几个项，因为具有较大 $\beta$ 的项会指数级地支配具有较小 $\beta$ 的项。例如，对于 $$a_n=5a_{n-1}-6a_{n-2}\qquad\hbox{对于
    $n>1$，其中 $a_0=0$ 且 $a_1=1$}$$ 的精确解是 $3^n-2^n$，但是近似解 $3^n$ 对于 $n>25$ 的精度在千分之一的范围内。我们只需要跟踪与绝对值或模最大的项有关的项。'
- en: '**Theorem 4.1** (Asymptotics for linear recurrences). Assume that a rational
    generating function $f(z)/g(z)$, with $f(z)$ and $g(z)$ relatively prime and $g(0)\ne0$,
    has a unique pole $1/\beta$ of smallest modulus (that is, $g(1/\alpha)=0$ and
    $\alpha\ne\beta$ implies that $|1/\alpha|>|1/\beta|$, or $|\alpha|'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**定理 4.1**（线性递归的渐近性）。假设有一个有理生成函数 $f(z)/g(z)$，其中 $f(z)$ 和 $g(z)$ 互质且 $g(0)\ne0$，具有最小模的唯一极点
    $1/\beta$（即，$g(1/\alpha)=0$ 且 $\alpha\ne\beta$ 意味着 $|1/\alpha|>|1/\beta|$，或 $|\alpha|'
- en: 4.2 Asymptotic Expansions.
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2 渐近展开。
- en: We prefer the equation $f(N)=c_0g_0(N)+O(g_1(N))$ with $g_1(N)=o(g_0(N))$ to
    the equation $f(N)=O(g_0(N))$ because it provides the constant $c_0$, and therefore
    allows us to provide specific estimates for $f(N)$ that improve in accuracy as
    $N$ gets large.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更喜欢方程$f(N)=c_0g_0(N)+O(g_1(N))$，其中$g_1(N)=o(g_0(N))$，而不是方程$f(N)=O(g_0(N))$，因为它提供了常数$c_0$，因此允许我们提供随着$N$变大而精度提高的具体估计。
- en: 'The concept of an *asymptotic expansion*, developed by Poincaré, generalizes
    this notion:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由庞加莱发展的*渐近展开*概念推广了这个概念：
- en: '**Definition.** Given a sequence of functions $\{g_k(N)\}_{k\ge0}$ with $g_{k+1}(N)=o(g_k(N))$
    for $k\ge0$, $$f(N)\sim c_0g_0(N)+c_1g_1(N)+c_2g_2(N)+\ldots$$ is called an asymptotic
    series for $f$, or an asymptotic expansion of $f$. The asymptotic series represents
    the collection of formulae $$\eqalign{ f(N)&=O(g_0(N))\cr f(N)&=c_0g_0(N)+O(g_1(N))\cr
    f(N)&=c_0g_0(N)+c_1g_1(N)+O(g_2(N))\cr f(N)&=c_0g_0(N)+c_1g_1(N)+c_2g_2(N)+O(g_3(N))\cr
    &\hskip5pt\vdots\cr}$$ and the $g_k(N)$ are referred to as an *asymptotic scale*.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义.** 给定一系列函数$\{g_k(N)\}_{k\ge0}$，其中$g_{k+1}(N)=o(g_k(N))$对于$k\ge0$，$$f(N)\sim
    c_0g_0(N)+c_1g_1(N)+c_2g_2(N)+\ldots$$ 被称为$f$的渐近级数，或$f$的渐近展开。渐近级数代表了以下公式的集合 $$\eqalign{
    f(N)&=O(g_0(N))\cr f(N)&=c_0g_0(N)+O(g_1(N))\cr f(N)&=c_0g_0(N)+c_1g_1(N)+O(g_2(N))\cr
    f(N)&=c_0g_0(N)+c_1g_1(N)+c_2g_2(N)+O(g_3(N))\cr &\hskip5pt\vdots\cr}$$，$g_k(N)$被称为*渐近尺度*。'
- en: 'This general approach allows asymptotic expansions to be expressed in terms
    of *any* infinite series of functions that decrease (in a $o$-notation sense).
    However, we are most often interested in a very restricted set of functions: indeed,
    we are very often able to express approximations in terms of decreasing powers
    of $N$ when approximating functions as $N$ increases. Other functions occasionally
    are needed, but we normally will be content with an asymptotic scale consisting
    of terms of decreasing series of products of powers of $N$, $\log N$, iterated
    logarithms such as $\log\log N$, and exponentials.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这种一般方法允许用*任何*递减的函数无限级数来表达渐近展开（在$o$-记法意义上）。然而，我们通常对一组非常有限的函数感兴趣：事实上，当近似函数随着$N$增加而近似时，我们往往能够用$N$的递减幂来表达近似。偶尔需要其他函数，但通常我们会满足于由$N$、$\log
    N$、迭代对数（如$\log\log N$）和指数的幂乘积递减级数项组成的渐近尺度。
- en: Each additional term that we take from the asymptotic series gives a more accurate
    asymptotic estimate. Full asymptotic series are available for many functions commonly
    encountered in the analysis of algorithms, and we primarily consider methods that
    could be extended, in principle, to provide asymptotic expansions describing quantities
    of interest. We can use the $\sim$-notation to simply drop information on error
    terms or we can use the $O$-notation or the $o$-notation to provide more specific
    information.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从渐近级数中取出的每个额外项都会给出更准确的渐近估计。在算法分析中常见的许多函数都有完整的渐近级数，我们主要考虑的方法是可以扩展的，原则上可以提供描述感兴趣量的渐近展开。我们可以使用$\sim$-记法简单地省略错误项的信息，或者使用$O$-记法或$o$-记法提供更具体的信息。
- en: This table gives classic asymptotic expansions for four basic functions, derived
    from truncating Taylor series. Other similar expansions follow immediately from
    the generating functions given in Chapter 3. In the sections that follow, we describe
    methods of manipulating asymptotic series using these expansions.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个表格给出了从截断泰勒级数导出的四个基本函数的经典渐近展开。其他类似的展开可以立即从第3章中给出的生成函数中得到。在接下来的章节中，我们描述了使用这些展开操作渐近级数的方法。
- en: '| function | asymptotic expansion |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 渐近展开 |'
- en: '| exponential | $\displaystyle e^x=1+x+{x^2\over2}+{x^3\over6}+O(x^4)$ |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 指数 | $\displaystyle e^x=1+x+{x^2\over2}+{x^3\over6}+O(x^4)$ |'
- en: '| logarithmic | $\displaystyle\ln(1+x)=x-{x^2\over2}+{x^3\over3}+O(x^4)$ |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 对数 | $\displaystyle\ln(1+x)=x-{x^2\over2}+{x^3\over3}+O(x^4)$ |'
- en: '| binomial | $\displaystyle(1+x)^k=1+kx+{k\choose2}x^2+{k\choose3}x^3+O(x^4)$
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 二项式 | $\displaystyle(1+x)^k=1+kx+{k\choose2}x^2+{k\choose3}x^3+O(x^4)$ |'
- en: '| geometric | $\displaystyle{1\over1-x}=1+x+x^2+x^3+O(x^4)$ |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 几何 | $\displaystyle{1\over1-x}=1+x+x^2+x^3+O(x^4)$ |'
- en: '*Example.* To expand $\ln(N-2)$ for $N\to\infty$, pull out the leading term,
    writing $$\ln(N-2) = \ln N + \ln(1-{2\over N}) = \ln N - {2\over N} +O({1\over
    N^2}).$$ That is, we use the substitution ($x = -2/N$) with $x\to0$.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*例子.* 对于$N\to\infty$，展开$\ln(N-2)$，提取主导项，写成 $$\ln(N-2) = \ln N + \ln(1-{2\over
    N}) = \ln N - {2\over N} +O({1\over N^2}).$$ 即，我们使用替换（$x = -2/N$），其中$x\to0$。'
- en: '*Nonconvergent asymptotic series.* Any convergent series leads to a full asymptotic
    approximation, but it is very important to note that the converse is *not* true---an
    asymptotic series may well be divergent. For example, we might have a function
    $$f(N)\sim\sum_{k\ge0}{k!\over N^k}$$ implying (for example) that $$f(N)=1+{1\over
    N}+{2\over N^2}+{6\over N^3}+O({1\over N^4})$$ even though the infinite sum does
    not converge. Why is this allowed? If we take any fixed number of terms from the
    expansion, then the equality implied from the definition is meaningful, as $N\to\infty$.
    That is, we have an infinite collection of better and better approximations, but
    the point at which they start giving useful information gets larger and larger.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*非收敛的渐近级数.* 任何收敛级数都会导致完整的渐近近似，但非常重要的是要注意，反之*不*成立---渐近级数很可能是发散的。例如，我们可能有一个函数
    $$f(N)\sim\sum_{k\ge0}{k!\over N^k}$$ 意味着（例如） $$f(N)=1+{1\over N}+{2\over N^2}+{6\over
    N^3}+O({1\over N^4})$$ 即使无限和不收敛。为什么允许这样？如果我们从展开中取任意固定数量的项，那么从定义中暗示的相等在$N\to\infty$时是有意义的。也就是说，我们有无限数量的更好和更好的近似，但它们开始提供有用信息的点变得越来越大。'
- en: This table gives asymptotic series for special number sequences that are encountered
    frequently in combinatorics and the analysis of algorithms. We consider many of
    these expansions later as examples of manipulating and deriving asymptotic series.
    We refer to them frequently later in the book because the number sequences themselves
    arise naturally when studying properties of algorithms.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这个表格给出了在组合学和算法分析中经常遇到的特殊数列的渐近级数。我们稍后考虑许多这些展开作为操作和推导渐近级数的例子。我们在本书后面经常提到它们，因为这些数列在研究算法属性时自然产生。
- en: '| function | asymptotic expansion |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 渐近展开 |'
- en: '| factorial (Stirling''s formula) | $\displaystyle N!=\sqrt{2\pi N}\Bigl({N\over
    e}\Bigr)^N\Bigl(1+{1\over12N}+{1\over288N^2}+O({1\over N^3})\Bigr)$ |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 阶乘（斯特林公式） | $\displaystyle N!=\sqrt{2\pi N}\Bigl({N\over e}\Bigr)^N\Bigl(1+{1\over12N}+{1\over288N^2}+O({1\over
    N^3})\Bigr)$ |'
- en: '| log version of Stirling''s formula | $\qquad\displaystyle \ln N!=\Bigl(N+{1\over2}\Bigr)\ln
    N -N + \ln\sqrt{2\pi}+{1\over 12N}+O({1\over N^3})\qquad$ |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 斯特林公式的对数版本 | $\qquad\displaystyle \ln N!=\Bigl(N+{1\over2}\Bigr)\ln N -N
    + \ln\sqrt{2\pi}+{1\over 12N}+O({1\over N^3})\qquad$ |'
- en: '| harmonic numbers | $\displaystyle H_N=\ln N + \gamma + {1\over2N} -{1\over12N^2}+O({1\over
    N^4})$ |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 谐和数 | $\displaystyle H_N=\ln N + \gamma + {1\over2N} -{1\over12N^2}+O({1\over
    N^4})$ |'
- en: '| binomial coefficients | $\displaystyle {N\choose k}={N^k\over k!}\Bigl(1+O({1\over
    N})\Bigr)\quad{\rm for\ }k=O(1)$ |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 二项式系数 | $\displaystyle {N\choose k}={N^k\over k!}\Bigl(1+O({1\over N})\Bigr)\quad{\rm
    for\ }k=O(1)$ |'
- en: '| binomial coefficients (center) | $\displaystyle {N\choose k}={2^N\over\sqrt{\pi
    N/2}}\Bigl(1+O({1\over N})\Bigr)\quad\hbox{for\ }k={N\over2}+O(1)$ |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 二项式系数（中心） | $\displaystyle {N\choose k}={2^N\over\sqrt{\pi N/2}}\Bigl(1+O({1\over
    N})\Bigr)\quad\hbox{for\ }k={N\over2}+O(1)$ |'
- en: '| normal approximation to the binomial distribution | $\displaystyle {2N\choose
    N- k}{1\over 2^{2N}}={e^{-{k^2/N}}\over\sqrt{\pi N}} + O({1\over N^{3/2}})$ |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 二项分布的正态近似 | $\displaystyle {2N\choose N- k}{1\over 2^{2N}}={e^{-{k^2/N}}\over\sqrt{\pi
    N}} + O({1\over N^{3/2}})$ |'
- en: '| Poisson approximation to the binomial distribution | $\displaystyle{N\choose
    k}p^k(1-p)^{N-k}={\lambda^ke^{-\lambda}\over k!}+o(1)\quad{\rm for\ }p = \lambda/N$
    |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 二项分布的泊松近似 | $\displaystyle{N\choose k}p^k(1-p)^{N-k}={\lambda^ke^{-\lambda}\over
    k!}+o(1)\quad{\rm for\ }p = \lambda/N$ |'
- en: '| Stirling numbers of the first kind | $\displaystyle {N\brack k}\sim{(N-1)!\over
    (k-1)!}(\ln N)^{k-1} \quad{\rm for\ } k = O(1)$ |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 第一类斯特林数 | $\displaystyle {N\brack k}\sim{(N-1)!\over (k-1)!}(\ln N)^{k-1}
    \quad{\rm for\ } k = O(1)$ |'
- en: '| Stirling numbers of the second kind | $\displaystyle {N\brace k}\sim{k^N\over
    k!}\quad{\rm for\ } k = O(1)$ |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 第二类斯特林数 | $\displaystyle {N\brace k}\sim{k^N\over k!}\quad{\rm for\ } k =
    O(1)$ |'
- en: '| Bernoulli numbers | $\displaystyle B_{2N}=(-1)^{N}{(2N)!\over(2\pi)^{2N}}(-2+O(4^{-N}))$
    |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 伯努利数 | $\displaystyle B_{2N}=(-1)^{N}{(2N)!\over(2\pi)^{2N}}(-2+O(4^{-N}))$
    |'
- en: '| Catalan numbers | $\displaystyle T_N\equiv{1\over N+1}{2N\choose N}={4^N\over\sqrt{\pi
    N^3}}\Bigl(1 + O({1\over N})\Bigr)$ |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 卡特兰数 | $\displaystyle T_N\equiv{1\over N+1}{2N\choose N}={4^N\over\sqrt{\pi
    N^3}}\Bigl(1 + O({1\over N})\Bigr)$ |'
- en: '| Fibonacci numbers | $\displaystyle F_N={\phi^N\over\sqrt5}+O({\phi^{-N}})
    \quad{\rm where\ }\phi={1+\sqrt5\over2}$ |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 斐波那契数 | $\displaystyle F_N={\phi^N\over\sqrt5}+O({\phi^{-N}}) \quad{\rm where\
    }\phi={1+\sqrt5\over2}$ |'
- en: 4.3 Manipulating Asymptotic Expansions
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.3 操纵渐近展开
- en: The manipulation of asymptotic expansions generally reduces in a straightforward
    manner to the application of one of several basic operations, which we consider
    in turn. In the examples, we will normally consider series with one, two, or three
    terms (not counting the $O$-term). Of course, the methods apply to longer series,
    as well.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 渐近展开的操作通常简化为应用几种基本操作之一，我们依次考虑这些操作。在示例中，我们通常会考虑具有一、两或三项（不计算$O$项）的级数。当然，这些方法也适用于更长的级数。
- en: '*Simplification.* An asymptotic series is only as good as its $O$-term, so
    anything smaller (in an asymptotic sense) may as well be discarded. For example,
    the expression $\ln N + O(1)$ is mathematically equivalent to the expression $\ln
    N + \gamma + O(1)$, but simpler.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*简化.* 渐近级数的好坏取决于其$O$项，因此任何更小的（在渐近意义上）都可以舍弃。例如，表达式$\ln N + O(1)$在数学上等价于表达式$\ln
    N + \gamma + O(1)$，但更简单。'
- en: '*Substitution.* The simplest and most common asymptotic series derive from
    substituting appropriately chosen variable values into Taylor series expansions
    or into other asymptotic series. For example, by taking $x=-1/N$ in the geometric
    series $${1\over 1-x}=1+x+x^2+O({x^3})\qquad\hbox{as $x\to0$}$$ gives $${1\over
    N+1}={1\over N}-{1\over N^2}+ O({1\over N^3})\qquad\hbox{as $N\to\infty$}.$$ Similarly,
    $$e^{1/N}= 1+{1\over N}+{1\over 2N^2}+{1\over 6N^3}+\cdots+ {1\over k!N^k} + O({1\over
    N^{k+1}}).$$'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*替换.* 最简单和最常见的渐近级数来自于将适当选择的变量值代入泰勒级数展开或其他渐近级数中。例如，在几何级数中取$x=-1/N$，得到$${1\over
    1-x}=1+x+x^2+O({x^3})\qquad\hbox{as $x\to0$}$$可得$${1\over N+1}={1\over N}-{1\over
    N^2}+ O({1\over N^3})\qquad\hbox{as $N\to\infty$}.$$ 类似地，$$e^{1/N}= 1+{1\over
    N}+{1\over 2N^2}+{1\over 6N^3}+\cdots+ {1\over k!N^k} + O({1\over N^{k+1}}).$$'
- en: '*Factoring.* When the “approximate” value of a function is obvious upon inspection
    it is worthwhile to rewrite the function making this explicit in terms of relative
    or absolute error. For example, the function $1/(N^2+N)$ is obviously very close
    to $1/N^2$ for large $N$, which we can express explicitly by writing $$\eqalign{{1\over
    N^2+N}&={1\over N^2}{1\over 1+1/N}\cr &={1\over N^2}\Bigl(1+{1\over N}+O({1\over
    N^2})\Bigr)\cr &={1\over N^2}+{1\over N^3}+O({1\over N^4}).\cr}$$ When the approximate
    value is not immediately obvious, a short trial-and-error process might be necessary.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*因式分解.* 当函数的“近似”值在检查时显而易见时，将函数重写为相对或绝对误差的显式形式是值得的。例如，函数$1/(N^2+N)$对于大的$N$显然非常接近$1/N^2$，我们可以通过写成$$\eqalign{{1\over
    N^2+N}&={1\over N^2}{1\over 1+1/N}\cr &={1\over N^2}\Bigl(1+{1\over N}+O({1\over
    N^2})\Bigr)\cr &={1\over N^2}+{1\over N^3}+O({1\over N^4}).\cr}$$来明确表达。当近似值不明显时，可能需要进行简短的试错过程。'
- en: '*Multiplication.* Multiplying two asymptotic series is simply a matter of doing
    the term-by-term multiplications, then collecting terms. For example, $$\eqalign{
    (H_N)^2&=\Bigl(\ln N+\gamma+ O({1\over N})\Bigr) \Bigl(\ln N+\gamma+O({1\over
    N})\Bigr)\cr &=\Bigl((\ln N)^2+\gamma\ln N+O({\log N\over N})\Bigr)\cr &\qquad+\Bigl(\gamma\ln
    N+\gamma^2+O({1\over N})\Bigr)\cr &\qquad+\Bigl(O({\log N\over N})+O({1\over N})+O({1\over
    N^2})\Bigr)\cr &=(\ln N)^2+2\gamma\ln N+\gamma^2+O({\log N\over N}).\cr}$$'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*乘法.* 将两个渐近级数相乘只是逐项相乘，然后收集项。例如，$$\eqalign{ (H_N)^2&=\Bigl(\ln N+\gamma+ O({1\over
    N})\Bigr) \Bigl(\ln N+\gamma+O({1\over N})\Bigr)\cr &=\Bigl((\ln N)^2+\gamma\ln
    N+O({\log N\over N})\Bigr)\cr &\qquad+\Bigl(\gamma\ln N+\gamma^2+O({1\over N})\Bigr)\cr
    &\qquad+\Bigl(O({\log N\over N})+O({1\over N})+O({1\over N^2})\Bigr)\cr &=(\ln
    N)^2+2\gamma\ln N+\gamma^2+O({\log N\over N}).\cr}$$'
- en: 'In this case, the product has less absolute asymptotic accuracy than the factors—the
    result is only accurate to within $O({\log N/N})$. This is normal, and we typically
    need to begin a derivation with asymptotic expansions that have more terms than
    desired in the result. Often, we use a two-step process: do the calculation, and
    if the answer does not have the desired accuracy, express the original components
    more accurately and repeat the calculation.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，乘积的绝对渐近精度比因子低—结果仅准确到$O({\log N/N})$。这是正常的，通常我们需要以比结果中所需的更多项开始渐近展开的推导。通常，我们使用两步过程：进行计算，如果答案精度不够，则更准确地表达原始组件并重复计算。
- en: '*Division.* To compute the quotient of two asymptotic series, we typically
    factor and rewrite the denominator in the form $1/(1-x)$ for some symbolic expression
    $x$ that tends to 0, then expand as a geometric series, and multiply. For example,
    to compute an asymptotic expansion of $\tan x$, we can divide the series for $\sin
    x$ by the series for $\cos x$, as follows: $$\eqalign{ \tan x = {\sin x\over\cos
    x} &= {x - x^3/6 +O({x^5})\over 1 - x^2/2 +O({x^4})}\cr &= \Bigl(x - x^3/6 +O({x^5})\Bigr){1\over
    1 - x^2/2 +O({x^4})}\cr &= \Bigl(x - x^3/6 +O({x^5})\Bigr)({1 + x^2/2 +O({x^4})})\cr
    &= x + x^3/3 +O({x^5}).\cr }$$'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*除法.* 为了计算两个渐近级数的商，我们通常会将分母因式分解并重写为形式$1/(1-x)$，其中$x$是趋近于0的符号表达式，然后展开为几何级数，并相乘。例如，要计算$\tan
    x$的渐近展开，我们可以将$\sin x$的级数除以$\cos x$的级数，如下所示：$$\eqalign{ \tan x = {\sin x\over\cos
    x} &= {x - x^3/6 +O({x^5})\over 1 - x^2/2 +O({x^4})}\cr &= \Bigl(x - x^3/6 +O({x^5})\Bigr){1\over
    1 - x^2/2 +O({x^4})}\cr &= \Bigl(x - x^3/6 +O({x^5})\Bigr)({1 + x^2/2 +O({x^4})})\cr
    &= x + x^3/3 +O({x^5}).\cr }$$'
- en: '*Exponentiation/logarithm.* Writing $f(x)$ as $\exp\{\ln(f(x))\}$ is often
    a convenient start for doing asymptotics involving powers or products. A standard
    example is the following approximation for $e$: $$\eqalign{ \Bigl(1+{1\over N}\Bigr)^N
    &= \exp\Bigl\{N\ln\Bigl(1 + {1\over N}\Bigr)\Bigr\}\cr &= \exp\Bigl\{N\Bigl({1\over
    N} + O({1\over N^2}) \Bigr)\Bigr\} \cr &= \exp\Bigl\{1 + O({1\over N})\Bigr\}\cr
    &= e + O({1\over N}).\cr }$$'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*指数/对数.* 将$f(x)$写为$\exp\{\ln(f(x))\}$通常是处理涉及幂次或乘积的渐近的方便起点。一个标准例子是以下对$e$的近似：$$\eqalign{
    \Bigl(1+{1\over N}\Bigr)^N &= \exp\Bigl\{N\ln\Bigl(1 + {1\over N}\Bigr)\Bigr\}\cr
    &= \exp\Bigl\{N\Bigl({1\over N} + O({1\over N^2}) \Bigr)\Bigr\} \cr &= \exp\Bigl\{1
    + O({1\over N})\Bigr\}\cr &= e + O({1\over N}).\cr }$$'
- en: 4.4 Asymptotic Approximations of Finite Sums
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.4 有限和的渐近逼近
- en: Frequently, we are able to express a quantity as a finite sum, and therefore
    we need to be able to accurately estimate the value of the sum. Some sums can
    be evaluated exactly. In many more cases, exact values are not available, or we
    may only have estimates for the quantities themselves being summed.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 经常情况下，我们能够将一个量表达为有限和，因此需要准确估计总和的值。有些总和可以精确计算。在更多情况下，精确值不可用，或者我们只能对被求和的量本身进行估计。
- en: '*Bounding the tail.* When the terms in a finite sum are rapidly decreasing,
    an asymptotic estimate can be developed by approximating the sum with an infinite
    sum and developing a bound on the size of the infinite tail.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*尾部估计.* 当有限和中的项迅速减少时，可以通过用无限和近似总和并开发对无限尾部大小的界限来开发渐近估计。'
- en: '*Example (derangements).*'
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*例子（错位）。*'
- en: ''
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '$$N!\sum_{0\le k\le N}{(-1)^k\over k!} = N!e^{-1} - R_N \quad\hbox{where}\quad
    R_N= N!\sum_{k>N}{(-1)^k\over k!}.$$ Bound the tail $R_N$ by bounding the individual
    terms: $$|R_N|'
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: $$N!\sum_{0\le k\le N}{(-1)^k\over k!} = N!e^{-1} - R_N \quad\hbox{where}\quad
    R_N= N!\sum_{k>N}{(-1)^k\over k!}.$$ 通过限制各项来限制尾部$R_N$：$$|R_N|
- en: '*Example (tries).*'
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*例子（尝试）。*'
- en: ''
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: $$\sum_{1\le k\le N}{1\over 2^k-1} = \sum_{k\ge 1}{1\over 2^k-1} - R_N, \quad\hbox{where}\quad
    R_N=\sum_{k>N}{1\over 2^k-1}.$$ The constant $1 + 1/3 + 1/7 + 1/15 + \ldots =
    1.6066\cdots$ is an extremely good approximation to the finite sum (that is trivial
    to calculate to any reasonable desired accuracy) because $R_N < \sum_{k>N}{1/2^{k-1}}=1/2^{N-1}.$
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: $$\sum_{1\le k\le N}{1\over 2^k-1} = \sum_{k\ge 1}{1\over 2^k-1} - R_N, \quad\hbox{where}\quad
    R_N=\sum_{k>N}{1\over 2^k-1}.$$ 常数$1 + 1/3 + 1/7 + 1/15 + \ldots = 1.6066\cdots$
    是对有限和的极好近似（可以轻松计算到任意精度），因为$R_N < \sum_{k>N}{1/2^{k-1}}=1/2^{N-1}.$
- en: '*Using the tail.* When the terms in a finite sum are rapidly increasing, the
    last term often suffices to give a good asymptotic estimate for the whole sum.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*利用尾部.* 当有限和中的项迅速增加时，通常最后一项就足以给出整个总和的良好渐近估计。'
- en: '*Example.*'
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*例子。*'
- en: ''
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: $$\sum_{0\le k\le N} k! = N!\Bigl(1+{1\over N}+\sum_{0\le k\le N-2}{k!\over
    N!}\ \Bigr) = N!\Bigl(1+O({1\over N})\Bigr),$$ since there are $N-1$ terms in
    the sum, each less than $1/(N(N-1))$.
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: $$\sum_{0\le k\le N} k! = N!\Bigl(1+{1\over N}+\sum_{0\le k\le N-2}{k!\over
    N!}\ \Bigr) = N!\Bigl(1+O({1\over N})\Bigr),$$ 因为总和中有$N-1$个项，每个项都小于$1/(N(N-1))$。
- en: '*Approximating sums with integrals.* What is the magnitude of the error made
    when we use $$\int_a^b {f(x)}dx\quad\hbox{to estimate}\quad\sum_{a\le k < b} {f(k)}?$$
    The answer to this question depends on the “smoothness” of the function $f(x)$.
    In each of the $b-a$ unit intervals between $a$ and $b$, we are using $f(k)$ to
    estimate $f(x)$. Letting $\delta_k = \max_{k\le x < k+1}|f(x)-f(k)|$ denote the
    maximum error in each interval, we can get a rough approximation to the total
    error: $$\sum_{a\le k < b} {f(k)}=\int_a^b {f(x)}dx + \Delta, \qquad\hbox{with\
    }|\Delta|\le\sum_{a\le k < b}\delta_k.$$ If the function is monotone increasing
    or decreasing over the whole interval $[a,\/b]$, then the error term telescopes
    to simply $\Delta \le |f(a)-f(b)|$.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*用积分近似总和.* 当我们使用$$\int_a^b {f(x)}dx\quad\hbox{来估计}\quad\sum_{a\le k < b} {f(k)}$$时，所产生的误差有多大？这个问题的答案取决于函数$f(x)$的“平滑性”。在$a$和$b$之间的每个单位间隔中，我们使用$f(k)$来估计$f(x)$。让$\delta_k
    = \max_{k\le x < k+1}|f(x)-f(k)|$表示每个间隔中的最大误差，我们可以粗略估计总误差：$$\sum_{a\le k < b}
    {f(k)}=\int_a^b {f(x)}dx + \Delta, \qquad\hbox{其中\ }|\Delta|\le\sum_{a\le k <
    b}\delta_k.$$ 如果函数在整个区间$[a,\/b]$上单调增或单调减，则误差项简化为$\Delta \le |f(a)-f(b)|$。'
- en: '*Example (Harmonic numbers).*'
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*例子（调和数）。*'
- en: ''
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: $$H_N=\sum_{1\le k\le N}{1\over k} = \int_1^N{1\over x}dx + \Delta = \ln N +
    \Delta$$ with $|\Delta| \le 1-1/N$, an easy proof that $H_N\sim\ln N$.
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: $$H_N=\sum_{1\le k\le N}{1\over k} = \int_1^N{1\over x}dx + \Delta = \ln N +
    \Delta$$ 其中$|\Delta| \le 1-1/N$，一个简单的证明$H_N\sim\ln N$。
- en: ''
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Example (Stirling''s approximation (logarithmic form)).*'
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*例子（斯特林逼近（对数形式））。*'
- en: ''
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: $$\ln N!=\sum_{1\le k\le N}{\ln k}= \int_1^N{\ln x}\,dx + \Delta = N\ln N -
    N +1+ \Delta$$ with $|\Delta|\le\ln N$, an easy proof that $\ln N!\sim N\ln N
    - N$.
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: $$\ln N!=\sum_{1\le k\le N}{\ln k}= \int_1^N{\ln x}\,dx + \Delta = N\ln N -
    N +1+ \Delta$$，其中$|\Delta|\le\ln N$，一个简单的证明$\ln N!\sim N\ln N - N$。
- en: More precise estimates of the error terms depend on the derivatives of the function.
    That is the topic of the next section.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 误差项的更精确估计取决于函数的导数。这是下一节的主题。
- en: 4.5 Euler-Maclaurin Summation.
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.5 欧拉-麦克劳林求和。
- en: One of the most powerful tools in asymptotic analysis dates to the 18th century
    and enables us to approximate sums with integrals in two distinct ways.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 渐近分析中最强大的工具之一可以追溯到18世纪，使我们能够以两种不同的方式用积分近似求和。
- en: A function is defined on a fixed interval and we evaluate a sum corresponding
    to sampling the function at an increasing number of points along the interval,
    with smaller and smaller step sizes, with the difference between the sum and the
    integral converging to zero (as in classic Reimann integration).
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数在固定区间上定义，我们评估对应于在区间上沿着越来越多的点采样函数的和，步长越来越小，求和与积分之间的差异收敛于零（就像经典的黎曼积分）。
- en: The step size is fixed, so the interval of integration gets larger and larger,
    with the difference between the sum and the integral converging to a constant.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步长固定，因此积分区间变得越来越大，求和与积分之间的差异收敛到一个常数。
- en: We consider these two cases separately (though they both embody the same basic
    method).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们分别考虑这两种情况（尽管它们都体现了相同的基本方法）。
- en: '**Theorem 4.2** (Euler-Maclaurin summation formula, first form). Let $f(x)$
    be a function defined on an interval $[\,a,\,b\,]$ with $a$ and $b$ integers,
    and suppose that the derivatives $f^{(i)}(x)$ exist and are continuous for $1\le
    i\le 2m$, where $m$ is a fixed constant. Then $$\sum_{a\le k\le b} {f(k)} = \int_a^b
    {f(x)}dx +{f(a)+f(b)\over2} +\sum_{1\le i\le m}{B_{2i} \over (2i)!} f^{(2i-1)}
    (x)\bigm|_a^b + R_{m},$$ where $B_{2i}$ are the Bernoulli numbers and $R_{m}$
    is a remainder term satisfying $$|R_{m}|\le{|B_{2m}|\over(2m)!}\int_a^b|f^{(2m)}(x)|dx**Theorem
    4.3** (Euler-Maclaurin summation formula, second form). Let $f(x)$ be a function
    defined on the interval $[\,1,\,\infty\,)$ and suppose that the derivatives $f^{(i)}(x)$
    exist and are absolutely integrable for $1\le i\le 2m$, where $m$ is a fixed constant.
    Then $$\sum_{1\le k\le N} {f(k)} = \int_1^N {f(x)}dx +{1\over2}f(N)+C_f + \sum_{1\le
    k\le m}{B_{2k} \over (2k)!} f^{(2k-1)} (N) + R_{m} ,$$ where $C_f$ is a constant
    associated with the function and $R_{2m}$ is a remainder term satisfying $$|R_{2m}|=O\Bigl(\int_N^\infty|f^{(2m)}(x)|dx\Bigr).$$'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**定理4.2**（欧拉-麦克劳林求和公式，第一形式）。设$f(x)$是定义在区间$[\,a,\,b\,]$上的函数，其中$a$和$b$是整数，并假设导数$f^{(i)}(x)$对$1\le
    i\le 2m$存在且连续，其中$m$是一个固定常数。那么$$\sum_{a\le k\le b} {f(k)} = \int_a^b {f(x)}dx +{f(a)+f(b)\over2}
    +\sum_{1\le i\le m}{B_{2i} \over (2i)!} f^{(2i-1)} (x)\bigm|_a^b + R_{m}，$$ 其中$B_{2i}$是伯努利数，$R_{m}$是一个满足$$|R_{m}|\le{|B_{2m}|\over(2m)!}\int_a^b|f^{(2m)}(x)|dx**定理4.3**（欧拉-麦克劳林求和公式，第二形式）。设$f(x)$是定义在区间$[\,1,\,\infty\,)$上的函数，并假设导数$f^{(i)}(x)$对$1\le
    i\le 2m$存在且绝对可积，其中$m$是一个固定常数。那么$$\sum_{1\le k\le N} {f(k)} = \int_1^N {f(x)}dx
    +{1\over2}f(N)+C_f + \sum_{1\le k\le m}{B_{2k} \over (2k)!} f^{(2k-1)} (N) + R_{m}，$$
    其中$C_f$是与函数相关的常数，$R_{2m}$是一个满足$$|R_{2m}|=O\Bigl(\int_N^\infty|f^{(2m)}(x)|dx\Bigr)。$$'
- en: '*Example (Harmonic numbers).*'
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*例子（调和数）。*'
- en: ''
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Take $f(x)=1/x$. The Euler-Maclaurin constant for this case is known plainly
    as *Euler''s constant*: $$\gamma = {1\over2}-\int_1^\infty\Bigl(\{x\}-{1\over2}\Bigr){dx\over
    x^2}.$$ Thus $$H_N=\ln N + \gamma +o(1).$$ The constant $\gamma$ is approximately
    $.57721\cdots$ and is not known to be a simple function of other fundamental constants.
    The full expansion is $$H_N \sim \ln N + \gamma + {1\over 2N} - {1\over12N^2}
    + {1\over120N^4}-\ldots.$$'
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 取$f(x)=1/x$。这种情况下的欧拉-麦克劳林常数被简单地称为*欧拉常数*：$$\gamma = {1\over2}-\int_1^\infty\Bigl(\{x\}-{1\over2}\Bigr){dx\over
    x^2}。$$ 因此$$H_N=\ln N + \gamma +o(1)。$$ 常数$\gamma$约为$.57721\cdots$，并不是其他基本常数的简单函数。完整的展开为$$H_N
    \sim \ln N + \gamma + {1\over 2N} - {1\over12N^2} + {1\over120N^4}-\ldots。
- en: ''
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Example (Stirling''s approximation (logarithmic form)).*'
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*例子（斯特林逼近（对数形式））。*'
- en: ''
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Taking $f(x)=\ln x$ gives Stirling''s approximation to $\ln N!$. In this case,
    the Euler-Maclaurin constant is $$\int_1^\infty\Bigl(\{x\}-{1\over2}\Bigr){dx\over
    x}.$$ This constant *does* turn out to be a simple function of other fundamental
    constants: it is equal to $\ln\sqrt{2\pi}-1$. The value $\sigma=\sqrt{2\pi}$ is
    known as *Stirling''s constant*. It arises frequently in the analysis of algorithms
    and many other applications. Thus $$\ln N! = N\ln N - N +{1\over2}\ln N + \ln\sqrt{2\pi}
    +o(1).$$ The full expansions are $$\ln N! \sim (N+{1\over 2}) \ln N - N + \ln\sqrt{2\pi}+{1\over
    12N}-{1\over360\ N^3}+\ldots$$ and, by exponentiation and elementary manipulations
    $$N! \sim \sqrt{2\pi N}\Bigl({N\over e}\Bigr)^N\Bigl(1+{1\over12N}+{1\over288N^\
    2}-{139\over5140 N^3}+\ldots\Bigr).$$'
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 令$f(x)=\ln x$，得到$\ln N!$的斯特林逼近。在这种情况下，欧拉-麦克劳林常数为$$\int_1^\infty\Bigl(\{x\}-{1\over2}\Bigr){dx\over
    x}.$$ 这个常数*确实*是其他基本常数的一个简单函数：它等于$\ln\sqrt{2\pi}-1$。数值$\sigma=\sqrt{2\pi}$被称为*斯特林常数*。它在算法分析和许多其他应用中经常出现。因此$$\ln
    N!=N\ln N - N +{1\over2}\ln N + \ln\sqrt{2\pi} +o(1)。$$ 完整的展开为$$\ln N! \sim (N+{1\over
    2}) \ln N - N + \ln\sqrt{2\pi}+{1\over 12N}-{1\over360\ N^3}+\ldots$$，通过指数化和基本操作得到$$N!
    \sim \sqrt{2\pi N}\Bigl({N\over e}\Bigr)^N\Bigl(1+{1\over12N}+{1\over288N^\ 2}-{139\over5140
    N^3}+\ldots\Bigr)。
- en: 4.6 Bivariate Asymptotics
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.6 双变量渐近。
- en: The bivariate functions at left in this table are of central importance in combinatorics
    and the analysis of algorithms. At right are *uniform* approximations that hold
    for all values of $k$ (see text for proofs).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此表左侧的双变量函数在组合数学和算法分析中至关重要。右侧是对所有$k$值都成立的*均匀*逼近（见证明文本）。
- en: '| function | definition | uniform approximation |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 定义 | 均匀逼近 |'
- en: '| Ramanujan Q | $$N!\over(N-k)!N^k$$ | $$e^{ -{k^2/(2N)}} + O({1\over\sqrt{N}})$$
    |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 拉马努金Q | $$N!\over(N-k)!N^k$$ | $$e^{ -{k^2/(2N)}} + O({1\over\sqrt{N}})$$
    |'
- en: '| Ramanujan R | $$N!N^k\over (N+k)!$$ | $$e^{ -{k^2/(2N)}} + O({1\over\sqrt{N}})$$
    |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 拉马努金R | $$N!N^k\over (N+k)!$$ | $$e^{ -{k^2/(2N)}} + O({1\over\sqrt{N}})$$
    |'
- en: '| Normal approximation | $${2N\choose N-k}={(2N)!\over (N+k)!(N-k)!}$$ | $${e^{
    -{k^2/N}}\over\sqrt{\pi N}} + O({1\over N^{3/2}})$$ |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 正态近似 | $${2N\choose N-k}={(2N)!\over (N+k)!(N-k)!}$$ | $${e^{ -{k^2/N}}\over\sqrt{\pi
    N}} + O({1\over N^{3/2}})$$ |'
- en: '| Poisson approximation | $${N\choose k}\Bigl({\lambda\over N}\Bigr)^k\Bigl(1-{\lambda\over
    N}\Bigr)^{N-k}$$ | $${\lambda^ke^{-\lambda}\over k!}+o(1)$$ |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 泊松近似 | $${N\choose k}\Bigl({\lambda\over N}\Bigr)^k\Bigl(1-{\lambda\over
    N}\Bigr)^{N-k}$$ | $${\lambda^ke^{-\lambda}\over k!}+o(1)$$ |'
- en: For each function, we also need *central* expansions that approximate the largest
    terms (are valid for small $k$), as summarized in this table.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个函数，我们还需要*中心*展开来近似最大项（对小的$k$有效），如下表所总结。
- en: '| function | central expansion |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 中心展开 |'
- en: '| Ramanujan Q | $$e^{ -{k^2/(2N)}}\Bigl(1 + O({k\over N})+O({k^3\over N^2})\Bigr)
    \quad{\rm for\ }k=o(N^{2/3})$$ |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 拉马努金 Q | $$e^{ -{k^2/(2N)}}\Bigl(1 + O({k\over N})+O({k^3\over N^2})\Bigr)
    \quad{\rm for\ }k=o(N^{2/3})$$ |'
- en: '| Ramanujan R | $$e^{ -{k^2/(2N)}}\Bigl(1 + O({k\over N})+O({k^3\over N^2})\Bigr)
    \quad{\rm for\ }k=o(N^{2/3})$$ |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 拉马努金 R | $$e^{ -{k^2/(2N)}}\Bigl(1 + O({k\over N})+O({k^3\over N^2})\Bigr)
    \quad{\rm for\ }k=o(N^{2/3})$$ |'
- en: '| Normal approximation | $${e^{ -{k^2/N}}\over\sqrt{\pi N}}\Bigl(1 + O({{1\over
    N}})+O({{k^4\over N^3}})\Bigr) \quad{\rm for\ }k=o(N^{3/4})$$ |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 正态近似 | $${e^{ -{k^2/N}}\over\sqrt{\pi N}}\Bigl(1 + O({{1\over N}})+O({{k^4\over
    N^3}})\Bigr) \quad{\rm for\ }k=o(N^{3/4})$$ |'
- en: '| Poisson approximation | $${\lambda^ke^{-\lambda}\over k!}\Bigl(1+O({1\over
    N})+O({k\over N})\Bigr) \quad{\rm for\ }k=o(N^{1/2})$$ |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| 泊松近似 | $${\lambda^ke^{-\lambda}\over k!}\Bigl(1+O({1\over N})+O({k\over N})\Bigr)
    \quad{\rm for\ }k=o(N^{1/2})$$ |'
- en: The following upper bounds for each function are valid for all $N$ and $k$.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个函数，以下上界对所有$N$和$k$都有效。
- en: '| function | uniform upper bound |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 函数 | 统一上界 |'
- en: '| Ramanujan Q | $$ e^{-k(k-1)/(2N)}$$ |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 拉马努金 Q | $$ e^{-k(k-1)/(2N)}$$ |'
- en: '| Ramanujan R | $$ e^{-k(k+1)/(4N)}$$ |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 拉马努金 R | $$ e^{-k(k+1)/(4N)}$$ |'
- en: '| Normal approximation | $$ e^{-k^2/(2N)}$$ |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 正态近似 | $$ e^{-k^2/(2N)}$$ |'
- en: This kind of result is often used to bound the tail of the distribution in the
    following manner. Given $\epsilon>0$, we have, for $k>\sqrt{2N^{1+\epsilon}}$,
    $$ {1\over 2^{2N}}{2N\choose N-k}\le e^{-{(2N)^{\epsilon}}}. $$ That is, the tails
    of the distribution are exponentially small when $k$ grows slightly faster than
    $\sqrt{N}$.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这种结果通常用于以以下方式限制分布的尾部。给定$\epsilon>0$，对于$k>\sqrt{2N^{1+\epsilon}}$，我们有，$$ {1\over
    2^{2N}}{2N\choose N-k}\le e^{-{(2N)^{\epsilon}}}. $$ 也就是说，当$k$略微快于$\sqrt{N}$增长时，分布的尾部是指数级小的。
- en: 4.7 Laplace Method
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.7 拉普拉斯方法
- en: 'When estimating sums across the whole range, we want to take advantage of our
    ability to get accurate estimates of the summand in various different parts of
    the range. On the other hand, it is certainly more convenient if we can stick
    to a single function across the entire range of interest. In this section, we
    discuss a general method that allows us to do both, the *Laplace method* for estimating
    the value of sums and integrals. We frequently encounter sums in the analysis
    of algorithms that can be estimated with this approach. Generally, we are also
    taking advantage of our ability to approximate sums with integrals in such cases.
    The method is centered around the following three steps for evaluating sums:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在估计整个范围内的求和时，我们希望利用我们在范围的不同部分获得准确估计的求和项的能力。另一方面，如果我们能在整个感兴趣的范围内坚持使用单个函数，那当然更方便。在本节中，我们讨论一种通用方法，允许我们同时做到这两点，即用于估计求和和积分值的*Laplace方法*。我们经常在算法分析中遇到可以用这种方法估计的求和。通常情况下，我们也利用我们在这些情况下用积分近似求和的能力。该方法围绕以下三个步骤进行求和评估：
- en: Restrict the range to an area that contains the largest summands.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将范围限制在包含最大求和项的区域内。
- en: Approximate the summand and bound the tails.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 近似求和项并限制尾部。
- en: Extend the range and bound the new tails, to get a simpler sum.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展范围并限制新的尾部，以获得一个更简单的求和。
- en: This figure illustrates the method in a schematic manner. Actually, when approximating
    sums, the functions involved are all step functions; usually a “smooth” function
    makes an appearance at the end, in an application of the Euler-Maclaurin formula.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这幅图以一种概要的方式说明了这种方法。实际上，在近似求和时，涉及的函数都是阶跃函数；通常在最后会出现一个“平滑”函数，应用欧拉-麦克劳林公式。
- en: '![](../Images/31f682ea1497d9c73635286de256be91.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/31f682ea1497d9c73635286de256be91.png)'
- en: '*Example (Ramanujan Q-function)*. To approximate $$Q(N)\equiv\sum_{1\le k\le
    N} {N!\over (N-k)!N^k}$$ apply the approximations just given to different ranges
    of the sum. More precisely, define $k_0$ to be an integer that is $o(N^{2/3})$
    and divide the sum into two parts: $$\sum_{1\le k\le N} {N!\over (N-k)!N^k} =
    \sum_{1\le k\le k_0} {N!\over (N-k)!N^k} + \sum_{k_0 < k\le N} {N!\over (N-k)!N^k}.$$
    We approximate the two parts separately, using the different restrictions on $k$
    in the two parts to advantage. For the first (main) term, we use the uniform approximation.
    For the second term (the tail), the restriction $k>k_0$ and the fact that the
    terms are decreasing imply that they are all exponentially small. $$Q(N)=\sum_{1\le
    k\le k_0} e^{-k^2/(2N)}\Bigl(1 + O({k\over N})+ O({k^3\over N^2})\Bigr)+\Delta.$$
    Here we use $\Delta$ as a notation to represent a term that is exponentially small,
    but otherwise unspecified. The main term $\exp(-k^2/(2N)$ is *also* exponentially
    small for $k>k_0$ and we can add the terms for $k>k_0$ back in, so we have $$Q(N)\,=\,\sum_{k\ge1}\,\,\,e^{-k^2/(2N)}
    + O(1).$$ Essentially, we have replaced the tail of the original sum by the tail
    of the approximation, which is justified because both are exponentially small.
    The remaining sum is the sum of values of the function $e^{x^2/2}$ at regularly
    spaced points with step $1/\sqrt{N}$. Thus, the Euler-Maclaurin theorem provides
    the approximation $$\sum_{k\ge1}e^{-k^2/(2N)}=\sqrt{N}\int_0^\infty e^{-{x^2/2}}dx
    + O(1).$$ The value of this integral is well known to be $\sqrt{\pi/2}$. Substituting
    into the above expression for $Q(N)$ gives the result $$Q(N) = \sqrt{\pi N/2}
    +O(1).$$'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '*例子（拉马努金Q函数）*。为了近似计算$$Q(N)\equiv\sum_{1\le k\le N} {N!\over (N-k)!N^k}$$，将刚才给出的近似应用于求和的不同范围。更准确地说，定义$k_0$为一个满足$o(N^{2/3})$的整数，并将求和分为两部分：$$\sum_{1\le
    k\le N} {N!\over (N-k)!N^k} = \sum_{1\le k\le k_0} {N!\over (N-k)!N^k} + \sum_{k_0
    < k\le N} {N!\over (N-k)!N^k}.$$ 我们分别近似这两部分，利用两部分中对$k$的不同限制来优势。对于第一（主要）项，我们使用均匀近似。对于第二项（尾部），限制$k>k_0$和项是递减的事实意味着它们都是指数级小的。$$Q(N)=\sum_{1\le
    k\le k_0} e^{-k^2/(2N)}\Bigl(1 + O({k\over N})+ O({k^3\over N^2})\Bigr)+\Delta.$$
    这里我们使用$\Delta$作为一个表示指数级小但未指定的项的符号。主要项$\exp(-k^2/(2N)$对于$k>k_0$也是指数级小的，我们可以将$k>k_0$的项加回去，所以我们有$$Q(N)\,=\,\sum_{k\ge1}\,\,\,e^{-k^2/(2N)}
    + O(1).$$ 本质上，我们用近似的尾部替换了原始求和的尾部，这是合理的，因为两者都是指数级小的。剩下的求和是函数$e^{x^2/2}$在间隔为$1/\sqrt{N}$的点上的值的和。因此，欧拉-麦克劳林定理提供了近似$$\sum_{k\ge1}e^{-k^2/(2N)}=\sqrt{N}\int_0^\infty
    e^{-{x^2/2}}dx + O(1).$$ 这个积分的值是众所周知的$\sqrt{\pi/2}$。将其代入上述$Q(N)$的表达式得到结果$$Q(N)
    = \sqrt{\pi N/2} +O(1).$$'
- en: 4.8 "Normal" Examples from the Analysis of Algorithms
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.8 算法分析中的“正常”示例
- en: 4.9 "Poisson" Examples from the Analysis of Algorithms
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.9 "Poisson" 算法分析示例
- en: 4.10 Generating Function Asymptotics
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.10 生成函数渐近
- en: Selected Exercises
  id: totrans-119
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 选择的练习
- en: '4.2'
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.2'
- en: Show that $$\displaystyle{N\over N+1}=1+O\Bigl({1\over N}\Bigr)\qquad\hbox{and}\qquad
    \displaystyle{N\over N+1}\sim 1-{1\over N}.$$
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 展示$$\displaystyle{N\over N+1}=1+O\Bigl({1\over N}\Bigr)\qquad\hbox{和}\qquad
    \displaystyle{N\over N+1}\sim 1-{1\over N}$$。
- en: '4.9'
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.9'
- en: If $\alpha 0$. For $\beta=1.2$ and $\alpha=1.1$, find the absolute and relative
    errors when $\alpha^N+\beta^N$ is approximated by $\beta^N$, for $N=10$ and $N=100$.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果$\alpha 0$。对于$\beta=1.2$和$\alpha=1.1$，当$\alpha^N+\beta^N$被$\beta^N$近似时，找出$N=10$和$N=100$时的绝对误差和相对误差。
- en: '4.14'
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.14'
- en: Use Theorem 4.1 to find an asymptotic solution to the recurrence $$a_n=5a_{n-1}-8a_{n-2}+4a_{n-3}\qquad\hbox{for
    $n>2$ with $a_0=1$, $a_1=2$, and $a_2=4$}.$$ Solve the same recurrence with the
    initial conditions on $a_0$ and $a_1$ changed to $a_0=1$ and $a_1=2$.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用定理4.1找到递推式$$a_n=5a_{n-1}-8a_{n-2}+4a_{n-3}\qquad\hbox{对于$n>2$，其中$a_0=1$，$a_1=2$，$a_2=4$}$$的渐近解。将初始条件$a_0$和$a_1$更改为$a_0=1$和$a_1=2$后，解决相同的递推式。
- en: '4.15'
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.15'
- en: Use Theorem 4.1 to find an asymptotic solution to the recurrence $$a_n=2a_{n-2}-a_{n-4}\qquad\hbox{for
    $n>4$ with $a_0=a_1=0$ and $a_2=a_3=1$}.\ $$
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 使用定理4.1找到递推式$$a_n=2a_{n-2}-a_{n-4}\qquad\hbox{对于$n>4$，其中$a_0=a_1=0$，$a_2=a_3=1$}$$的渐近解。
- en: '4.16'
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.16'
- en: Use Theorem 4.1 to find an asymptotic solution to the recurrence $$a_n=3a_{n-1}-3a_{n-2}+a_{n-3}\qquad\hbox{for
    $n>2$ with $a_0=a_1=0$ and $a_2\ =1$}.$$
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 使用定理4.1找到递推式$$a_n=3a_{n-1}-3a_{n-2}+a_{n-3}\qquad\hbox{对于$n>2$，其中$a_0=a_1=0$，$a_2=1$}$$的渐近解。
- en: '4.21'
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.21'
- en: Expand $\ln(1-x+x^2)$ as $x\to0$, to within $O\bigl(x^4\bigr)$.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当$x\to0$时，将$\ln(1-x+x^2)$展开为$O\bigl(x^4\bigr)$。
- en: '4.23'
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.23'
- en: Give an asymptotic expansion for $\displaystyle{N\over N-1}\ln {N\over N-1}$
    to within $\displaystyle O\bigl({1\over N^4}\bigr)$.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 给出$\displaystyle{N\over N-1}\ln {N\over N-1}$的渐近展开，精确到$\displaystyle O\bigl({1\over
    N^4}\bigr)$。
- en: '4.38'
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.38'
- en: Calculate an asymptotic expansion for $(3N)!/(N!)^3$ to within relative precision
    $\displaystyle\Bigl(1+ O({1\over N})\Bigr)$.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 计算$(3N)!/(N!)^3$的渐近展开，精确到相对精度$\displaystyle\Bigl(1+ O({1\over N})\Bigr)$。
- en: '4.39'
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.39'
- en: What is the approximate value of $\displaystyle\Bigl(1-{\lambda\over N}\Bigr)^N$?
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: $\displaystyle\Bigl(1-{\lambda\over N}\Bigr)^N$的近似值是多少？
- en: '4.50'
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.50'
- en: Give an asymptotic estimate for $\sum_{0\le k\le N}{2^k/(2^k+1)}$.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 给出$\sum_{0\le k\le N}{2^k/(2^k+1)}$的渐近估计。
- en: '4.58'
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.58'
- en: Use Euler-Maclaurin summation to estimate $$\sum_{1\le k\le N}{\sqrt{k}},\qquad
    \sum_{1\le k\le N}{1\over\sqrt{k}},\quad\hbox{and}\quad \sum_{1\le k\le N}{1\over\root3\of{k}}$$
    to within $O\bigl(1/N^2\bigr)$.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 使用欧拉-麦克劳林求和估计$$\sum_{1\le k\le N}{\sqrt{k}},\qquad \sum_{1\le k\le N}{1\over\sqrt{k}},\quad\hbox{和}\quad
    \sum_{1\le k\le N}{1\over\root3\of{k}}$$，精确到$O\bigl(1/N^2\bigr)$。
- en: '4.71'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4.71'
- en: Show that ${(N-k)^k(N-k)!\over N!} = e^{ - {k^2\over 2N}}\Bigl( 1 + O({k\over
    N}) + O({k^3\over N^2})\Bigr) $ for $k = o(N^{2/3})$. By the same arguments as
    in the proofs of Theorems 4.5, 4.8, and the Corollary to Theorem 4.4, you could
    extend this derivation to prove that $$ P(N)=\sum_{0\le k < N} {(N-k)^k(N-k)!\over
    N!}=\sqrt{\pi N/2}+O(1)$$
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 证明对于$k = o(N^{2/3})$，有$${(N-k)^k(N-k)!\over N!} = e^{ - {k^2\over 2N}}\Bigl(
    1 + O({k\over N}) + O({k^3\over N^2})\Bigr) $$. 通过与定理4.5、4.8的证明以及定理4.4的推论的相同论证，您可以将此推导扩展到证明$$
    P(N)=\sum_{0\le k < N} {(N-k)^k(N-k)!\over N!}=\sqrt{\pi N/2}+O(1)$$
- en: Review Questions
  id: totrans-144
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 复习问题
- en: Q4.1
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q4.1
- en: 'Give asymptotic expansions to $O({1\over N})$ of each of the following: (*a*)
    $H_N$ (*b*) $\exp(H_{2N} - H_N) - 1$ (*c*) $\exp(H_N)$ (*d*) $\exp({1\over N})$
    (*e*) $(1 - {1\over N})^{-1}$'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 分别给出以下各项的$O({1\over N})$的渐近展开：（*a*）$H_N$（*b*）$\exp(H_{2N} - H_N) - 1$（*c*）$\exp(H_N)$（*d*）$\exp({1\over
    N})$（*e*）$(1 - {1\over N})^{-1}$
- en: Q4.2
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q4.2
- en: 'Give the value of each of the following, to three decimal places: (*a*) $1.01^{10}$
    (*b*) $1.05^{10}$ (*c*) $1.01^{20}$ (*d*) $1.01^{50}$ (*e*) $1.01^{100}$'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 给出以下各项的值，保留三位小数：(*a*) $1.01^{10}$ (*b*) $1.05^{10}$ (*c*) $1.01^{20}$ (*d*)
    $1.01^{50}$ (*e*) $1.01^{100}$
- en: Q4.3
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q4.3
- en: '*Do not use a computer or a calculator for this problem.* For each expression
    below, give the value from the following list that most closely approximates it:
    1.716924, 1.000145, 1.000023, 1.010050, 1.00111, 1.000007, 1.007000\. $$e^{.01}$$
    $$\ln(1000)/\ln(999)$$ $$1.001^{1000}-1$$ $$(100+\ln(100!))/(100\ln 100))$$ $$\ln(2.7183)$$'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要使用计算机或计算器解决这个问题。* 对于下面的每个表达式，请从以下列表中给出最接近的值：1.716924, 1.000145, 1.000023,
    1.010050, 1.00111, 1.000007, 1.007000\. $$e^{.01}$$ $$\ln(1000)/\ln(999)$$ $$1.001^{1000}-1$$
    $$(100+\ln(100!))/(100\ln 100))$$ $$\ln(2.7183)$$'
- en: Q4.4
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q4.4
- en: (A. Yan) Give an asymptotic expansion for ${3N\choose N}$ within $\Bigl(1 +
    O({1\over N})\Bigr)$.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: (A. Yan) 给出${3N\choose N}$的渐近展开式，精确到$\Bigl(1 + O({1\over N})\Bigr)$。
