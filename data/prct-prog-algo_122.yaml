- en: 3\.   Generating Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 生成函数
- en: 原文：[https://aofa.cs.princeton.edu/30gf](https://aofa.cs.princeton.edu/30gf)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://aofa.cs.princeton.edu/30gf](https://aofa.cs.princeton.edu/30gf)
- en: 'This chapter introduces a central concept in the analysis of algorithms and
    in combinatorics: *generating functions* — a necessary and natural link between
    the algorithms that are our objects of study and analytic methods that are necessary
    to discover their properties.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了算法分析和组合学中的一个核心概念：*生成函数* —— 这是算法研究对象和发现其性质所必需的分析方法之间的必要而自然的联系。
- en: 3.1 Ordinary Generating Functions
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 普通生成函数
- en: Often, our goal in the analysis of algorithms is to derive specific expressions
    for the values of terms in a sequence of quantities $a_0, a_1, a_2, \ldots$ that
    measure some performance parameter. In this chapter we see the benefits of working
    with a single mathematical object that represents the whole sequence.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在算法分析中，我们经常的目标是推导出一系列量 $a_0, a_1, a_2, \ldots$ 的特定表达式，这些量衡量了某些性能参数。在本章中，我们看到了使用代表整个序列的单个数学对象的好处。
- en: '**Definition.** Given a sequence $a_0, a_1, a_2, \ldots, a_k, \ldots$, the
    function $$A(z)=\sum_{k\ge0}a_k z^k$$ is called the *ordinary generating function
    (OGF)* of the sequence. We use the notation $[z^k]A(z)$ to refer to the coefficient
    $a_k$.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义。** 给定一个序列 $a_0, a_1, a_2, \ldots, a_k, \ldots$，函数 $$A(z)=\sum_{k\ge0}a_k
    z^k$$ 被称为该序列的*普通生成函数（OGF）*。我们使用记号 $[z^k]A(z)$ 表示系数 $a_k$。'
- en: '| Sequence | OGF |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| 序列 | OGF |'
- en: '| $$1,\,1,\,1,\,1,\,\ldots,\,1,\,\ldots$$ | $${1\over 1-z}=\sum_{N\ge0}z^N$$
    |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,1,\,1,\,1,\,\ldots,\,1,\,\ldots$$ | $${1\over 1-z}=\sum_{N\ge0}z^N$$
    |'
- en: '| $$0,\,1,\,2,\,3,\,4,\,\ldots,\,N,\,\ldots$$ | $${z\over(1-z)^2}=\sum_{N\ge1}Nz^N$$
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,1,\,2,\,3,\,4,\,\ldots,\,N,\,\ldots$$ | $${z\over(1-z)^2}=\sum_{N\ge1}Nz^N$$
    |'
- en: '| $$0,\,0,\,1,\,3,\,6,\,10,\,\ldots,\,{N\choose2},\,\ldots$$ | $${z^2\over(1-z)^3}=\sum_{N\ge2}{N\choose2}z^N$$
    |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,0,\,1,\,3,\,6,\,10,\,\ldots,\,{N\choose2},\,\ldots$$ | $${z^2\over(1-z)^3}=\sum_{N\ge2}{N\choose2}z^N$$
    |'
- en: '| $$0,\,\ldots,\,0,\,1,\,M+1,\,\ldots,\,{N\choose M},\,\ldots$$ | $${z^M\over(1-z)^{M+1}}=\sum_{N\ge
    M}{N\choose M}z^N$$ |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,\ldots,\,0,\,1,\,M+1,\,\ldots,\,{N\choose M},\,\ldots$$ | $${z^M\over(1-z)^{M+1}}=\sum_{N\ge
    M}{N\choose M}z^N$$ |'
- en: '| $$1,\,M,\,{M\choose 2}\,\ldots,\,{M\choose N},\,\ldots,\,M,\,1$$ | $${(1+z)^M}=\sum_{N\ge0}{M\choose
    N}z^N$$ |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,M,\,{M\choose 2}\,\ldots,\,{M\choose N},\,\ldots,\,M,\,1$$ | $${(1+z)^M}=\sum_{N\ge0}{M\choose
    N}z^N$$ |'
- en: '| $$1,\,M+1,\,{M+2\choose2},\,{M+3\choose3},\,\ldots$$ | $${1\over(1-z)^{M+1}}=\sum_{N\ge
    0}{N+M\choose N}z^N$$ |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,M+1,\,{M+2\choose2},\,{M+3\choose3},\,\ldots$$ | $${1\over(1-z)^{M+1}}=\sum_{N\ge
    0}{N+M\choose N}z^N$$ |'
- en: '| $$1,\,0,\,1,\,0,\,\ldots,\,1,\,0,\,\ldots$$ | $${1\over 1-z^2}=\sum_{N\ge0}z^{2N}$$
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,0,\,1,\,0,\,\ldots,\,1,\,0,\,\ldots$$ | $${1\over 1-z^2}=\sum_{N\ge0}z^{2N}$$
    |'
- en: '| $$1,\,c,\,c^2,\,c^3,\,\ldots,\,c^N,\,\ldots$$ | $${1\over1-cz}=\sum_{N\ge0}c^Nz^N$$
    |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,c,\,c^2,\,c^3,\,\ldots,\,c^N,\,\ldots$$ | $${1\over1-cz}=\sum_{N\ge0}c^Nz^N$$
    |'
- en: '| $$1,\,1,\,{1\over2!},\,{1\over3!},\,{1\over4!},\,\ldots,\,{1\over N!},\,\ldots$$
    | $$e^z=\sum_{N\ge0}{\displaystyle z^N\over N!}$$ |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,1,\,{1\over2!},\,{1\over3!},\,{1\over4!},\,\ldots,\,{1\over N!},\,\ldots$$
    | $$e^z=\sum_{N\ge0}{\displaystyle z^N\over N!}$$ |'
- en: '| $$0,\,1,\,{1\over2},\,{1\over3},\,{1\over4},\,\ldots,\,{1\over N},\,\ldots$$
    | $$\ln{1\over1-z}=\sum_{N\ge1}{\displaystyle z^N\over N}$$ |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,1,\,{1\over2},\,{1\over3},\,{1\over4},\,\ldots,\,{1\over N},\,\ldots$$
    | $$\ln{1\over1-z}=\sum_{N\ge1}{\displaystyle z^N\over N}$$ |'
- en: '| $$0,\,1,\,1+{1\over2},\,1+{1\over2}+{1\over3},\,\ldots,\,H_N,\,\ldots$$ |
    $${1\over1-z}\ln{1\over1-z}=\sum_{N\ge1}H_Nz^N$$ |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,1,\,1+{1\over2},\,1+{1\over2}+{1\over3},\,\ldots,\,H_N,\,\ldots$$ |
    $${1\over1-z}\ln{1\over1-z}=\sum_{N\ge1}H_Nz^N$$ |'
- en: '| $$0,\,0,\,1,\,3({1\over2}+{1\over3}),\,4({1\over2}+{1\over3}+{1\over4}),\,\ldots$$
    | $${z\over(1-z)^2}\ln{1\over1-z}=\sum_{N\ge0}N(H_N-1)z^N$$ |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,0,\,1,\,3({1\over2}+{1\over3}),\,4({1\over2}+{1\over3}+{1\over4}),\,\ldots$$
    | $${z\over(1-z)^2}\ln{1\over1-z}=\sum_{N\ge0}N(H_N-1)z^N$$ |'
- en: Given generating functions $A(z)=\sum_{k\ge0}a_kz^k$ and $B(z)=\sum_{k\ge0}b_kz^k$
    that represent the sequences $a_0,a_1,\ldots,a_k,\ldots$ and $b_0,b_1,\ldots,b_k,\ldots$,
    we can perform a number of simple transformations to get generating functions
    for other sequences.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 给定代表序列 $a_0,a_1,\ldots,a_k,\ldots$ 和 $b_0,b_1,\ldots,b_k,\ldots$ 的生成函数 $A(z)=\sum_{k\ge0}a_kz^k$
    和 $B(z)=\sum_{k\ge0}b_kz^k$，我们可以进行一些简单的转换以获得其他序列的生成函数。
- en: '| Operation | Result |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 操作 | 结果 |'
- en: '| *right shift* | $$zA(z)=\sum_{n\ge1}a_{n-1}z^n$$ |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| *右移* | $$zA(z)=\sum_{n\ge1}a_{n-1}z^n$$ |'
- en: '| *left shift* | $${A(z)-a_0\over z}=\sum_{n\ge0}a_{n+1}z^n$$ |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| *左移* | $${A(z)-a_0\over z}=\sum_{n\ge0}a_{n+1}z^n$$ |'
- en: '| *index multiply (differentiation)* | $$A^\prime(z)=\sum_{n\ge0}(n+1)a_{n+1}z^n$$
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| *指标乘法（微分）* | $$A^\prime(z)=\sum_{n\ge0}(n+1)a_{n+1}z^n$$ |'
- en: '| *index divide (integration)* | $$\int_0^zA(t)dt=\sum_{n\ge1}{a_{n-1}\over
    n}z^n$$ |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| *指标除法（积分）* | $$\int_0^zA(t)dt=\sum_{n\ge1}{a_{n-1}\over n}z^n$$ |'
- en: '| *scaling* | $$A(\lambda z)=\sum_{n\ge0}\lambda^na_nz^n$$ |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| *缩放* | $$A(\lambda z)=\sum_{n\ge0}\lambda^na_nz^n$$ |'
- en: '| *addition* | $$A(z)+B(z)=\sum_{n\ge0}(a_n+b_n)z^n$$ |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| *加法* | $$A(z)+B(z)=\sum_{n\ge0}(a_n+b_n)z^n$$ |'
- en: '| *difference* | $${(1-z)A(z)}=a_0+\sum_{n\ge1}(a_n-a_{n-1})z^n$$ |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| *差分* | $${(1-z)A(z)}=a_0+\sum_{n\ge1}(a_n-a_{n-1})z^n$$ |'
- en: '| *convolution* | $${A(z)B(z)}=\sum_{n\ge0}\Bigl(\,\sum_{0\le k\le n}a_kb_{n-k}\Bigr)z^n$$
    |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| *卷积* | $${A(z)B(z)}=\sum_{n\ge0}\Bigl(\,\sum_{0\le k\le n}a_kb_{n-k}\Bigr)z^n$$
    |'
- en: '| *partial sum* | $${A(z)\over1-z}=\sum_{n\ge0}\Bigl(\,\sum_{0\le k\le n}a_k\Bigr)z^n$$
    |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| *部分和* | $${A(z)\over1-z}=\sum_{n\ge0}\Bigl(\,\sum_{0\le k\le n}a_k\Bigr)z^n$$
    |'
- en: 3.2 Exponential Generating Functions
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2 指数生成函数
- en: 'Some sequences are more conveniently handled by a generating function that
    involves a normalizing factor:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 有些序列更方便地通过涉及归一化因子的生成函数处理：
- en: '**Definition.** Given a sequence $a_0, a_1, a_2, \ldots, a_k, \ldots$, the
    function $$A(z)=\sum_{k\ge0}a_k {z^k\over k!}$$ is called the *exponential generating
    function (EGF)* of the sequence. We use the notation $k![z^k]A(z)$ to refer to
    the coefficient $a_k$.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义。** 给定一个序列 $a_0, a_1, a_2, \ldots, a_k, \ldots$，函数 $$A(z)=\sum_{k\ge0}a_k
    {z^k\over k!}$$ 被称为该序列的*指数生成函数（EGF）*。我们使用记号 $k![z^k]A(z)$ 表示系数 $a_k$。'
- en: '| Sequence | EGF |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 序列 | EGF |'
- en: '| $$1,\,1,\,1,\,1,\,\ldots,\,1,\,\ldots$$ | $$e^z=\sum_{N\ge0}{z^N\over N!}$$
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,1,\,1,\,1,\,\ldots,\,1,\,\ldots$$ | $$e^z=\sum_{N\ge0}{z^N\over N!}$$
    |'
- en: '| $$0,\,1,\,2,\,3,\,4,\,\ldots,\,N,\,\ldots$$ | $$ze^z=\sum_{N\ge1}{z^N\over(N-1)!}$$
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,1,\,2,\,3,\,4,\,\ldots,\,N,\,\ldots$$ | $$ze^z=\sum_{N\ge1}{z^N\over(N-1)!}$$
    |'
- en: '| $$0,\,0,\,1,\,3,\,6,\,10,\,\ldots,\,{N\choose2},\,\ldots$$ | $${1\over2}z^2e^z={1\over2}\sum_{N\ge2}{z^N\over(N-2)!}$$
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,0,\,1,\,3,\,6,\,10,\,\ldots,\,{N\choose2},\,\ldots$$ | $${1\over2}z^2e^z={1\over2}\sum_{N\ge2}{z^N\over(N-2)!}$$
    |'
- en: '| $$\qquad0,\,\ldots,\,0,\,1,\,M+1,\,\ldots,\,{N\choose M},\,\ldots\qquad$$
    | $${1\over M!}z^Me^z={1\over M!}\sum_{N\ge M}{z^N\over(N-M)!}$$ |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| $$\qquad0,\,\ldots,\,0,\,1,\,M+1,\,\ldots,\,{N\choose M},\,\ldots\qquad$$
    | $${1\over M!}z^Me^z={1\over M!}\sum_{N\ge M}{z^N\over(N-M)!}$$ |'
- en: '| $$1,\,0,\,1,\,0,\,\ldots,\,1,\,0,\,\ldots$$ | $$\qquad{1\over2}(e^z+e^{-z})=\sum_{N\ge0}{1+(-1)^N\over2}{z^{N}\over
    N!}\qquad$$ |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,0,\,1,\,0,\,\ldots,\,1,\,0,\,\ldots$$ | $$\qquad{1\over2}(e^z+e^{-z})=\sum_{N\ge0}{1+(-1)^N\over2}{z^{N}\over
    N!}\qquad$$ |'
- en: '| $$1,\,c,\,c^2,\,c^3,\,\ldots,\,c^N,\,\ldots$$ | $$e^{cz}=\sum_{N\ge0}{c^Nz^N\over
    N!}$$ |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,c,\,c^2,\,c^3,\,\ldots,\,c^N,\,\ldots$$ | $$e^{cz}=\sum_{N\ge0}{c^Nz^N\over
    N!}$$ |'
- en: '| $$0,\,1,\,{1\over2},\,{1\over3},\,\ldots,\,{1\over N+1},\,\ldots$$ | $${\displaystyle
    e^z-1\over z}=\sum_{N\ge0}{\displaystyle z^N\over (N+1)!}$$ |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| $$0,\,1,\,{1\over2},\,{1\over3},\,\ldots,\,{1\over N+1},\,\ldots$$ | $${\displaystyle
    e^z-1\over z}=\sum_{N\ge0}{\displaystyle z^N\over (N+1)!}$$ |'
- en: '| $$1,\,2,\,6,\,24,\,\ldots,\,N!,\,\ldots$$ | $${\displaystyle 1\over 1-z}=\sum_{N\ge0}{\displaystyle
    N!z^N\over N!}$$ |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| $$1,\,2,\,6,\,24,\,\ldots,\,N!,\,\ldots$$ | $${\displaystyle 1\over 1-z}=\sum_{N\ge0}{\displaystyle
    N!z^N\over N!}$$ |'
- en: As with OGFs, application simple operations on these basic functions yields
    a large fraction of the EGFs that arise in practice. Note that the shift left/right
    operations for EGFs are the same as the index multiply/divide operations for OGFs
    and vice versa.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 与OGFs一样，对这些基本函数进行简单操作可以得到实践中出现的大部分EGFs。请注意，EGFs的左/右移操作与OGFs的索引乘法/除法操作相同，反之亦然。
- en: '| Operation | Result |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 操作 | 结果 |'
- en: '| *right shift (integration)* | $$\int_0^zA(t)dt=\sum_{n\ge1}a_{n-1}{z^n\over
    n!}$$ |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| *右移（积分）* | $$\int_0^zA(t)dt=\sum_{n\ge1}a_{n-1}{z^n\over n!}$$ |'
- en: '| *  left shift (differentiation)  * | $$A^\prime(z)=\sum_{n\ge0}a_{n+1}{z^n\over
    n!}$$ |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| *左移（微分）* | $$A^\prime(z)=\sum_{n\ge0}a_{n+1}{z^n\over n!}$$ |'
- en: '| *index multiply* | $$zA(z)=\sum_{n\ge0}na_{n-1}{z^n\over n!}$$ |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| *索引乘法* | $$zA(z)=\sum_{n\ge0}na_{n-1}{z^n\over n!}$$ |'
- en: '| *index divide* | $$(A(z)-A(0))/z=\sum_{n\ge1}{a_{n+1}\over n+1}{z^n\over
    n!}$$ |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| *索引除法* | $$(A(z)-A(0))/z=\sum_{n\ge1}{a_{n+1}\over n+1}{z^n\over n!}$$ |'
- en: '| *addition* | $$A(z)+B(z)=\sum_{n\ge0}(a_n+b_n){z^n\over n!}$$ |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| *加法* | $$A(z)+B(z)=\sum_{n\ge0}(a_n+b_n){z^n\over n!}$$ |'
- en: '| *difference* | $$A^\prime(z)-A(z)=\sum_{n\ge0}(a_{n+1}-a_n){z^n\over n!}$$
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| *差分* | $$A^\prime(z)-A(z)=\sum_{n\ge0}(a_{n+1}-a_n){z^n\over n!}$$ |'
- en: '| *binomial convolution* | $$\qquad{A(z)B(z)}=\sum_{n\ge0}\biggl(\>\sum_{0\le
    k\le n}{n\choose k}a_kb_{n-k}\biggr){z^n\over n!}\qquad$$ |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| *二项式卷积* | $$\qquad{A(z)B(z)}=\sum_{n\ge0}\biggl(\>\sum_{0\le k\le n}{n\choose
    k}a_kb_{n-k}\biggr){z^n\over n!}\qquad$$ |'
- en: '| *binomial sum* | $$e^zA(z)=\sum_{n\ge0}\biggl(\>\sum_{0\le k\le n}{n\choose
    k}a_k\biggr){z^n\over n!}$$ |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| *二项式求和* | $$e^zA(z)=\sum_{n\ge0}\biggl(\>\sum_{0\le k\le n}{n\choose k}a_k\biggr){z^n\over
    n!}$$ |'
- en: 3.3 Generating Function Solution of Recurrences
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3 递归的生成函数解法
- en: 'Generating functions provide a mechanical method for solving many recurrence
    relations. Given a recurrence describing some sequence $\{a_n\}_{n\ge0}$, we can
    often develop a solution by carrying out the following steps:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 生成函数为解决许多递归关系提供了一种机械方法。给定描述某个序列$\{a_n\}_{n\ge0}$的递归，我们通常可以通过执行以下步骤来开发解决方案：
- en: Multiply both sides of the recurrence by $z^n$ and sum on $n$.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将递归的两边都乘以$z^n$并在$n$上求和。
- en: Evaluate the sums to derive an equation satisfied by the OGF.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估求和以导出OGF满足的方程。
- en: Solve the equation to derive an explicit formula for the OGF.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解方程以得出OGF的显式公式。
- en: Express the OGF as a power series to get expressions for the coefficients (members
    of the original sequence).
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将OGF表示为幂级数以获得系数（原始序列的成员）的表达式。
- en: The same method applies for EGFs, where we multiply by $z^n/n!$ and sum on $n$
    in the first step. Whether OGFs or EGFs are more convenient depends on the recurrence.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 相同的方法适用于EGFs，其中我们在第一步中乘以$z^n/n!$并在$n$上求和。OGFs或EGFs哪个更方便取决于递归。
- en: '*Example.* $$a_n=5a_{n-1}-6a_{n-2}\qquad\hbox{for $n>1$ with $a_0=0$ and $a_1=1$}$$
    Use the generating function $a(z)=\sum_{n\ge0}a_nz^n$. Multiply both sides of
    the recurrence by $z^n$ and sum on $n$ to get the equation $$a(z)={z\over 1-5z+6z^2}={z\over(1-3z)(1-2z)}={1\over
    1-3z}-{1\over 1-2z}$$ (by partial fractions) so that we must have $a_n=3^n-2^n$.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*例子.* $$a_n=5a_{n-1}-6a_{n-2}\qquad\hbox{对于$n>1$，其中$a_0=0$且$a_1=1$}$$ 使用生成函数$a(z)=\sum_{n\ge0}a_nz^n$。将递归的两边都乘以$z^n$并在$n$上求和，得到方程$$a(z)={z\over
    1-5z+6z^2}={z\over(1-3z)(1-2z)}={1\over 1-3z}-{1\over 1-2z}$$（通过部分分式）因此我们必须有$a_n=3^n-2^n$。'
- en: 'In general, we can solve a linear recurrence $$a_n=x_1a_{n-1}+x_2a_{n-2}+\ldots+x_ta_{n-t}$$
    by expressing the generating function $a(z)$ as a rational function $f(z)/g(z)$
    and then expanding:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，我们可以通过将生成函数$a(z)$表示为有理函数$f(z)/g(z)$，然后展开来解决线性递归$$a_n=x_1a_{n-1}+x_2a_{n-2}+\ldots+x_ta_{n-t}$$。
- en: 'Derive $g(z)$ from the recurrence: $g(z)=1-x_1z-x_2z^2-\ldots-x_tz^t$'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从递归中推导$g(z)$：$g(z)=1-x_1z-x_2z^2-\ldots-x_tz^t$
- en: Compute $f(z)$ from $g(z)$ and the initial conditions.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从递归中计算$f(z)$得到$g(z)$和初始条件。
- en: Eliminate common factors in $f(z)/g(z)$.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除$f(z)/g(z)$中的公共因子。
- en: Use partial fractions to represent $f(z)/g(z)$ as a linear combination of terms
    of the form $(1-\beta z)^{-j}$.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用部分分式将$f(z)/g(z)$表示为$(1-\beta z)^{-j}$形式的项的线性组合。
- en: Expand each term in the partial fractions expansion, using $$[z^n](1-\beta z)^{-j}={n+j-1\choose
    j-1}\beta^n.$$
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 展开部分分式展开中的每一项，使用$$[z^n](1-\beta z)^{-j}={n+j-1\choose j-1}\beta^n$$。
- en: Note that roots may be complex.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 注意根可能是复数。
- en: '*Example.* $$a_n=2a_{n-1}-a_{n-2}+2a_{n-3}\qquad \hbox{for $n>2$ with $a_0=1$,
    $a_1=0$, and $a_2=-1$}.$$ This gives $$g(z)=1-2z+z^2-2z^3=(1+z^2)(1-2z)$$ and
    $$f(z)=(1-z^4)(1-2z)\pmod{z^4}=(1-2z),$$ so $$a(z)={f(z)\over g(z)}={1\over1+z^2}={1\over2}\Bigl({1\over1-iz}-{1\over1+iz}\Bigr),$$
    and $a_n={1\over2}(i^n+(-i)^n)$. Thus, $a_n$ is $0$ for $n$ odd, $1$ when $n$
    is a multiple of $4$, and $-1$ when $n$ is even but not a multiple of $4$ (this
    also follows directly from the form $a(z)=1/(1+z^2)$). For the initial conditions
    $a_0=1$, $a_1=2$, and $a_2=3$, we get $f(z)=1$, so the solution grows like $2^n$,
    but with periodic varying terms caused by the complex roots.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*例子.* $$a_n=2a_{n-1}-a_{n-2}+2a_{n-3}\qquad \hbox{对于$n>2$，其中$a_0=1$，$a_1=0$，$a_2=-1$}.$$
    这给出 $$g(z)=1-2z+z^2-2z^3=(1+z^2)(1-2z)$$ 和 $$f(z)=(1-z^4)(1-2z)\pmod{z^4}=(1-2z),$$
    所以 $$a(z)={f(z)\over g(z)}={1\over1+z^2}={1\over2}\Bigl({1\over1-iz}-{1\over1+iz}\Bigr),$$
    而 $a_n={1\over2}(i^n+(-i)^n)$。因此，$a_n$ 在$n$为奇数时为$0$，在$n$为4的倍数时为$1$，在n为偶数但不是4的倍数时为$-1$（这也直接从形式$a(z)=1/(1+z^2)$得出）。对于初始条件$a_0=1$，$a_1=2$，和$a_2=3$，我们得到$f(z)=1$，因此解的增长类似于$2^n$，但由于复根引起的周期性变化项。'
- en: 3.4 Expanding Generating Functions.
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4 展开生成函数。
- en: Given an explicit functional form for a generating function, we would like a
    general mechanism for finding the associated sequence. This process is called
    "expanding" the generating function, as we take it from a compact functional form
    into an infinite series of terms. Many functions are easily handled with a combination
    of Taylor's theorem $$f(z)=f(0)+f^{\prime}(0)z+{f^{\prime\prime}(0)\over2!}z^2
    +{f^{\prime\prime\prime}(0)\over 3!}z^3 +{f^{\prime\prime\prime\prime}(0)\over
    4!}z^4+\ldots.$$ and algebraic manipulations involving the basic identities and
    transformations given in the tables above. For more complicated functions, the
    theory of analytic combinatorics allows us to develop approximations to coefficients
    without expanding.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 给定生成函数的显式函数形式，我们希望找到相关序列的一般机制。这个过程称为“展开”生成函数，因为我们将其从紧凑的函数形式转化为无限系列的项。许多函数可以通过泰勒定理的组合轻松处理
    $$f(z)=f(0)+f^{\prime}(0)z+{f^{\prime\prime}(0)\over2!}z^2 +{f^{\prime\prime\prime}(0)\over
    3!}z^3 +{f^{\prime\prime\prime\prime}(0)\over 4!}z^4+\ldots.$$ 和表格中给出的基本恒等式和变换的代数运算来处理。对于更复杂的函数，解析组合学的理论允许我们开发系数的近似而不展开。
- en: 3.5 Transformations with Generating Functions
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.5 生成函数的变换
- en: 3.6 Functional Equations on Generating Functions
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.6 生成函数上的函数方程
- en: 3.7 Solving the Quicksort Median-of-Three Recurrence with OGFs
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.7 用OGFs解决快速排序中的中位数三分位数
- en: 3.8 Counting with Generating Functions
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.8 生成函数计数
- en: 'Generating functions provide a systematic way to count combinatorial objects.
    To illustrate, we consider a classical combinatorial problem that also corresponds
    to a fundamental data structure that will be considered in Chapter 5 and in several
    other places in the book. A *binary tree* is a structure defined recursively to
    be either a single *external node* or an *internal node* that is connected to
    two binary trees, a *left subtree* and a *right subtree*. Binary trees appear
    in many problems in combinatorics and the analysis of algorithms: for example,
    if internal nodes correspond to two-argument arithmetic operators and external
    nodes correspond to variables, then binary trees correspond to arithmetic expressions.
    The question at hand is, how many binary trees are there with $N$ external nodes?![](../Images/9c1f679c97023ff0260500192d36e032.png)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 生成函数提供了一种系统计算组合对象的方法。为了说明，我们考虑一个经典的组合问题，它也对应于本书第5章和其他几个地方将要考虑的基本数据结构。*二叉树*是一种递归定义的结构，要么是单个*外部节点*，要么是连接到两个二叉树（*左子树*和*右子树*）的*内部节点*。二叉树出现在组合学和算法分析中的许多问题中：例如，如果内部节点对应于二元算术运算符，外部节点对应于变量，则二叉树对应于算术表达式。问题是，有多少具有$N$个外部节点的��叉树？！[](../Images/9c1f679c97023ff0260500192d36e032.png)
- en: '*Counting binary trees (with a recurrence).* Let $T_N$ be the number of binary
    trees with $N+1$ external nodes: $T_0=1$, $T_1=1$, $T_2=2$, $T_3=5$, and $T_4=14$.
    If the left subtree in a binary tree with $N+1$ external nodes has $k$ external
    nodes (there are $T_{k-1}$ different such trees), then the right subtree must
    have $N-k+1$ external nodes (there are $T_{N-k}$ possibilities), so $T_N$ must
    satisfy $$T_N = \sum_{1\le k\le N}T_{k-1}T_{N-k} \qquad\hbox{for $N>0$ with $T_0=1$}.$$
    Multiplying by $z^N$ and summing on $N$ gives the nonlinear functional equation
    $$T(z)=zT(z)^2+1.$$ which is easily solved with the quadratic equation: $$zT(z)={1\over2}(1\pm\sqrt{1-4z}).$$
    To get equality when $z=0$, we take the solution with a minus sign. To extract
    coefficients, use the binomial theorem with exponent $1\over2$ (Newton''s formula):
    $$zT(z)=-{1\over2}\sum_{N\ge1}{{1\over2}\choose N}(-4z)^N.$$ Setting coefficients
    equal gives $$\eqalign{T_N&=-{1\over2}{{1\over2}\choose N+1}(-4)^{N+1}\cr &=-{1\over2}{{1\over2}({1\over2}-1)({1\over2}-2)\ldots({1\over2}-N)(-4)^{N+1}\over
    (N+1)!}\cr &={1\cdot 3\cdot 5\cdots(2N-1)\cdot2^{N}\over (N+1)!}\cr &={1\over
    N+1}{1\cdot 3\cdot 5\cdots(2N-1)\over N!}\, {2\cdot 4\cdot 6\cdots2N\over1\cdot
    2\cdot 3\,\cdots\,N\,}\cr &={1\over N+1}{2N\choose N}.\cr}$$'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*计算二叉树（带有递归）。* 让$T_N$表示具有$N+1$个外部节点的二叉树的数量：$T_0=1$，$T_1=1$，$T_2=2$，$T_3=5$，和$T_4=14$。如果具有$N+1$个外部节点的二叉树中的左子树具有$k$个外部节点（有$T_{k-1}$个不同的这样的树），那么右子树必须具有$N-k+1$个外部节点（有$T_{N-k}$个可能性），因此$T_N$必须满足
    $$T_N = \sum_{1\le k\le N}T_{k-1}T_{N-k} \qquad\hbox{对于$N>0$，其中$T_0=1$}.$$ 将其乘以$z^N$并在$N$上求和得到非线性函数方程
    $$T(z)=zT(z)^2+1.$$ 这很容易用二次方程解决： $$zT(z)={1\over2}(1\pm\sqrt{1-4z}).$$ 为了在$z=0$时得到相等，我们取带有负号的解。为了提取系数，使用具有指数$1\over2$的二项式定理（牛顿公式）：
    $$zT(z)=-{1\over2}\sum_{N\ge1}{{1\over2}\choose N}(-4z)^N.$$ 将系数设置为相等得到 $$\eqalign{T_N&=-{1\over2}{{1\over2}\choose
    N+1}(-4)^{N+1}\cr &=-{1\over2}{{1\over2}({1\over2}-1)({1\over2}-2)\ldots({1\over2}-N)(-4)^{N+1}\over
    (N+1)!}\cr &={1\cdot 3\cdot 5\cdots(2N-1)\cdot2^{N}\over (N+1)!}\cr &={1\over
    N+1}{1\cdot 3\cdot 5\cdots(2N-1)\over N!}\, {2\cdot 4\cdot 6\cdots2N\over1\cdot
    2\cdot 3\,\cdots\,N\,}\cr &={1\over N+1}{2N\choose N}.\cr}$$'
- en: These numbers are known as the *Catalan numbers*. In the next chapter, we will
    see that the approximate value is $T_{N}\approx 4^N/N\sqrt{\pi N}$.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数字被称为*卡特兰数*。在下一章中，我们将看到近似值为$T_{N}\approx 4^N/N\sqrt{\pi N}$。
- en: '*Counting binary trees (direct).* Define ${\cal T}$ to be the set of all binary
    trees, and adopt the notation $|t|$ to represent, for $t\in{\cal T}$, the number
    of internal nodes in $t$. Then we have the following derivation: $$\eqalign{T(z)&=\sum_{t\in{\cal
    T}}z^{|t|}\cr &=1+\sum_{t_L\in{\cal T}}\sum_{t_R\in{\cal T}}z^{|t_L|+|t_R|+1}\cr
    &=1+zT(z)^2\cr}$$ The first line is an alternate way to express $T(z)$ from its
    definition. Each tree with exactly $k$ external nodes contributes exactly $1$
    to the coefficient of $z^k$, so the coefficient of $z^k$ in the sum ``counts''''
    the number of trees with $k$ internal nodes. The second line follows from the
    recursive definition of binary trees: either a binary tree has no internal nodes
    (which accounts for the $1$), or it can be decomposed into two independent binary
    trees whose internal nodes comprise the internal nodes of the original tree, plus
    one for the root. The third line follows because the index variables $t_L$ and
    $t_R$ are independent. *Study this fundamental example carefully* as it is the
    "poster child" for the general framework that we consider next.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*计数二叉树（直接）。* 定义 ${\cal T}$ 为所有二叉树的集合，并采用记号 $|t|$ 表示 $t\in{\cal T}$ 时 $t$ 中内部节点的数量。
    然后我们有以下推导： $$\eqalign{T(z)&=\sum_{t\in{\cal T}}z^{|t|}\cr &=1+\sum_{t_L\in{\cal
    T}}\sum_{t_R\in{\cal T}}z^{|t_L|+|t_R|+1}\cr &=1+zT(z)^2\cr}$$ 第一行是从其定义中另一种表达
    $T(z)$ 的方式。 每棵具有恰好 $k$ 个外部节点的树都会对 $z^k$ 的系数贡献 $1$，因此和式中 $z^k$ 的系数“计数”具有 $k$ 个内部节点的树的数量。
    第二行来自于二叉树的递归定义：一个二叉树要么没有内部节点（这解释了 $1$），要么可以分解为两个独立的二叉树，其内部节点包括原始树的内部节点，再加上一个根节点。
    第三行是因为索引变量 $t_L$ 和 $t_R$ 是独立的。 *仔细研究这个基本例子*，因为它是我们接下来考虑的一般框架的“招牌儿童”。'
- en: 3.9 The Symbolic Method
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 符号方法
- en: The *symbolic method* is a powerful approach for translating formal definitions
    of combinatorial objects into functional equations on generating functions.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*符号方法* 是将组合对象的形式定义转化为生成函数上的函数方程的强大方法。'
- en: '*Unlabelled objects.* When counting with generating functions, we are considering
    classes of combinatorial objects, with a notion of "size" defined for each object.
    For a class $\cal A$, we denote the number of members of the class of size $n$
    by $a_n$. Then we are interested in the OGF $$A(z)=\sum_{n\ge 0}a_nz^n=\sum_{a\in\cal
    A}z^{|a|}.$$ Given two classes $\cal A$ and $\cal B$ of combinatorial objects,
    we can combine them with a *disjoint union* operation $\cal A +\cal B$ that gives
    the class consisting of disjoint copies of the members of $\cal A$ and $\cal B$,
    by a *Cartesian product* operation $\cal A \times\cal B$ that gives the class
    of ordered pairs of objects (one from $\cal A$ and one from $\cal B$), and by
    a *sequence* operation that gives the class of sequences of objects from $\cal
    A$. These constructive definitions lead directly to the following functional relationships
    on the generating functions $A(z)$ and $B(z)$.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*未标记的对象。* 在使用生成函数进行计数时，我们考虑组合对象的类别，每个对象都定义了一个“大小”的概念。 对于类别 $\cal A$，我们用 $a_n$
    表示大小为 $n$ 的类别的成员数量。 然后我们对OGF感兴趣 $$A(z)=\sum_{n\ge 0}a_nz^n=\sum_{a\in\cal A}z^{|a|}.$$
    给定两个组合对象类别 $\cal A$ 和 $\cal B$，我们可以用 *不相交并集* 运算 $\cal A +\cal B$ 将它们组合在一起，得到由
    $\cal A$ 和 $\cal B$ 的成员的不相交副本组成的类别，用 *笛卡尔积* 运算 $\cal A \times\cal B$ 得到由对象的有序对（一个来自
    $\cal A$，一个来自 $\cal B$）组成的类别，以及用 *序列* 运算得到由 $\cal A$ 的对象序列组成的类别。 这些构造性定义直接导致了生成函数
    $A(z)$ 和 $B(z)$ 的以下函数关系。'
- en: $A(z)+B(z)$ is the OGF that enumerates $\cal A +\cal B$
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $A(z)+B(z)$ 是枚举 $\cal A +\cal B$ 的OGF
- en: $A(z)B(z)$ is the OGF that enumerates $\cal A \times \cal B$
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $A(z)B(z)$ 是枚举 $\cal A \times \cal B$ 的OGF
- en: $\displaystyle{1\over 1-A(z)}$ is the OGF that enumerates sequences of objects
    from $\cal A$
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $\displaystyle{1\over 1-A(z)}$ 是枚举 $\cal A$ 的对象序列的OGF
- en: '*Building blocks.*Combinatorial constructions ultimately emanate from these
    starting points:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '*基本构件。* 组合构造最终源自这些起始点：'
- en: The empty class $\phi$, with OGF $0$.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空类 $\phi$，OGF 为 $0$。
- en: The null object $\epsilon$, with OGF $1$.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空对象 $\epsilon$，OGF 为 $1$。
- en: Atomic objects such as $0$, $1$, or $\bullet$, with OGF $z$.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原子对象如 $0$，$1$ 或 $\bullet$，OGF 为 $z$。
- en: Symbolic equations combining these with symbolic class names using disjoint
    union, Cartesian product, sequence, and other operations translate directly to
    functional equations on generating functions.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 符号方程将这些与使用不相交并集、笛卡尔积、序列和其他运算的符号类名结合起来的符号方程直接转化为生成函数上的函数方程。
- en: '*Example.* Let $\cal G$ be the class of binary strings with no two consecutive
    $0$ bits. Such strings are either $\epsilon$, a single $0$, or $1$ or $01$ followed
    by a string with no two consecutive $0$ bits. Symbolically, $${\cal G} = \epsilon
    + \{0\} + \{1, 01\}\times{\cal G}.$$ Thus $$G(z) = 1 + z + (z + z^2)G(z).$$ and
    we have $G(z)=(1+z)/(1-z-z^2)$, which leads directly to the result that the number
    of strings of length $N$ with no two consecutive $0$ bits is $F_{N}+F_{N+1}=F_{N+2}$,
    a Fibonacci number.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*例子。* 让 $\cal G$ 是没有连续 $0$ 位的二进制字符串类别。 这样的字符串要么是 $\epsilon$，一个单独的 $0$，要么是 $1$
    或 $01$，后跟一个没有连续 $0$ 位的字符串。 符号上，$${\cal G} = \epsilon + \{0\} + \{1, 01\}\times{\cal
    G}.$$ 因此 $$G(z) = 1 + z + (z + z^2)G(z).$$ 我们有 $G(z)=(1+z)/(1-z-z^2)$，这直接导致长度为
    $N$ 的字符串中没有连续 $0$ 位的数量是 $F_{N}+F_{N+1}=F_{N+2}$，即斐波那契数。'
- en: '*Labelled objects.* An alternative paradigm is to assume that the individual
    items {\it are} distinguishable---that they are {\it labelled} and that, therefore,
    the order in which items appear when assembled to make combinatorial objects is
    significant. Labelled objects are normally enumerated by exponential generating
    functions. For a labelled class $\cal A$, we are interested in the EGF $$A(z)=\sum_{n\ge
    0}a_n{z^n\over n!}=\sum_{a\in\cal A}{z^{|a|}\over |a|!}.$$ When we combine two
    classes $\cal A$ and $\cal B$ of labelled objects, we need to relabel in a consistent
    manner so that only the labels $1$ to $N$ appear if the resulting object has size
    $N$. The *disjoint union* operation is essentially the same, but the *product*
    operation involves relabelling, so we use a different notation ($\cal A \star
    \cal B$). Again, the definitions lead directly to functional relationships on
    the generating functions.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '*标记对象.* 另一种范式是假设个体项目{\it 是}可区分的---它们是{\it 标记的}，因此，当组装成组合对象时，项目出现的顺序是重要的。标记对象通常由指数生成函数枚举。对于标记类$\cal
    A$，我们对EGF感兴趣$$A(z)=\sum_{n\ge 0}a_n{z^n\over n!}=\sum_{a\in\cal A}{z^{|a|}\over
    |a|!}.$$ 当我们组合两个标记对象类$\cal A$和$\cal B$时，我们需要以一致的方式重新标记，以便如果生成的对象大小为$N$，则只出现标签$1$到$N$。*不相交并*操作本质上相同，但*乘积*操作涉及重新标记，因此我们使用不同的符号（$\cal
    A \star \cal B$）。再次，定义直接导致生成函数上的函数关系。'
- en: $A(z)+B(z)$ is the EGF that enumerates $\cal A +\cal B$
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $A(z)+B(z)$是枚举$\cal A +\cal B$的EGF
- en: $A(z)B(z)$ is the EGF that enumerates $\cal A \star \cal B$
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $A(z)B(z)$是枚举$\cal A \star \cal B$的EGF
- en: $\displaystyle{1\over 1-A(z)}$ is the EGF that enumerates sequences of objects
    from $\cal A$
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $\displaystyle{1\over 1-A(z)}$是枚举来自$\cal A$的对象序列的EGF
- en: $\displaystyle{e^{A(z)}}$ is the EGF that enumerates sets of objects from $\cal
    A$
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: $\displaystyle{e^{A(z)}}$是枚举$\cal A$的对象集合的EGF
- en: See [Chapter 6](../60trees) for details and examples.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 详细内容和示例请参见[第6章](../60trees)。
- en: 3.10 Lagrange Inversion.
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.10 拉格朗日反演。
- en: The symbolic method makes it plain that we often are faced with extracting coefficients
    from generating functions that are implicitly defined through functional equations.
    The following general tool is available for this task, and is of particular importance
    in connection with tree enumeration.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 符号方法清楚地表明，我们经常面临从通过函数方程隐式定义的生成函数中提取系数的问题。以下通用工具可用于此任务，并且在树枚举方面尤为重要。
- en: '**Lagrange inversion theorem.** If a generating function $A(z)=\sum_{n\ge0}a_nz^n$
    satisfies the functional equation $z = f(A(z))$, where $f(z)$ satisfies $f(0)=0$
    and $f^{\prime}(0)\ne0$, then $$a_n \equiv [z^n]A(z) = {1\over n}[u^{n-1}]\Bigl({u\over
    f(u)}\Bigr)^n.$$ Also, $$[z^n](A(z))^m = {m\over n}[u^{n-m}]\Bigl({u\over f(u)}\Bigr)^n.$$
    and $$[z^n]g(A(z)) = {1\over n}[u^{n-1}]g^\prime(u)\Bigl({u\over f(u)}\Bigr)^n.$$'
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**拉格朗日反演定理。** 如果生成函数$A(z)=\sum_{n\ge0}a_nz^n$满足函数方程$z = f(A(z))$，其中$f(z)$满足$f(0)=0$且$f^{\prime}(0)\ne0$，那么$$a_n
    \equiv [z^n]A(z) = {1\over n}[u^{n-1}]\Bigl({u\over f(u)}\Bigr)^n.$$ 同样，$$[z^n](A(z))^m
    = {m\over n}[u^{n-m}]\Bigl({u\over f(u)}\Bigr)^n.$$ 和$$[z^n]g(A(z)) = {1\over
    n}[u^{n-1}]g^\prime(u)\Bigl({u\over f(u)}\Bigr)^n.$$'
- en: The *functional inverse* of a function $f$ is the function $f^{-1}$ that satisfies
    $f^{-1}(f(z))=f(f^{-1}(z))=z$. Applying $f^{-1}$ to both sides of the equation
    $z=f(A(z))$, we see that the function $A(z)$ is the functional inverse of $f(z)$.
    The Lagrange theorem is a general tool for inverting power series, in this sense.
    Its surprising feature is to provide a direct relation between the coefficients
    of the functional inverse of a function and the powers of that function.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 函数$f$的*函数逆*是满足$f^{-1}(f(z))=f(f^{-1}(z))=z$的函数$f^{-1}$。将方程$z=f(A(z))$两边应用$f^{-1$，我们可以看出函数$A(z)$是$f(z)$的函数逆。在这个意义上，拉格朗日定理是一个反转幂级数的通用工具。它的惊人之处在于提供了函数逆的系数与该函数幂次之间的直接关系。
- en: '*Example.* Let $T^{[2]}(z)=zT(z)$ be the OGF for binary trees, counted by external
    nodes. Rewriting the functional equation $T^{[2]}(z)=z+T^{[2]}(z)^2$ as $$z =
    T^{[2]}(z)-T^{[2]}(z)^2,$$ we can apply Lagrange inversion with $f(u)=u-u^2$.
    This gives the result $$[z^n]T^{[2]}(z) = {1\over n}[u^{n-1}]\Bigl({u\over u-u^2}\Bigr)^n
    = {1\over n}[u^{n-1}]\Bigl({1\over 1-u}\Bigr)^n.$$ Now, $${u^{n-1}\over(1-u)^n}=\sum_{k\ge
    n-1}{k\choose n-1}u^k$$ so that, considering the term $k=2n-2$, $$[u^{n-1}]\Bigl({1\over
    1-u}\Bigr)^n = {2n-2\choose n-1} \quad\hbox{and therefore}\quad [z^n]T^{[2]}(z)
    = {1\over n}{2n-2\choose n-1},$$ as expected.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*例子.* 让$T^{[2]}(z)=zT(z)$是计算外部节点的二叉树的OGF。将函数方程$T^{[2]}(z)=z+T^{[2]}(z)^2$重写为$$z
    = T^{[2]}(z)-T^{[2]}(z)^2$$，我们可以应用拉格朗日反演，其中$f(u)=u-u^2$。这给出结果$$[z^n]T^{[2]}(z)
    = {1\over n}[u^{n-1}]\Bigl({u\over u-u^2}\Bigr)^n = {1\over n}[u^{n-1}]\Bigl({1\over
    1-u}\Bigr)^n.$$ 现在，$${u^{n-1}\over(1-u)^n}=\sum_{k\ge n-1}{k\choose n-1}u^k$$
    所以，考虑$k=2n-2$的项，$$[u^{n-1}]\Bigl({1\over 1-u}\Bigr)^n = {2n-2\choose n-1} \quad\hbox{因此}\quad
    [z^n]T^{[2]}(z) = {1\over n}{2n-2\choose n-1}$$，如预期。'
- en: 3.11 Probability Generating Functions
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.11 概率生成函数
- en: 3.12 Bivariate Generating Functions
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.12 双变量生成函数
- en: 3.13 Special Functions
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.13 特殊函数
- en: Generating functions have long been used in combinatorics, probability theory,
    and analytic number theory; hence a rich array of mathematical tools have been
    developed that turn out to be germane to the analysis of algorithms. We use generating
    functions both as *combinatorial* tools to aid in the process of precisely accounting
    for quantities of interest and as *analytic* tools to yield solutions. As such,
    their role in the analysis of algorithms is central.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 生成函数长期以来在组合学、概率论和解析数论中被广泛使用；因此，已经开发出了丰富的数学工具，这些工具对算法分析非常重要。我们既将生成函数用作*组合*工具来帮助精确计算感兴趣的数量，又将其用作*解析*工具来提供解决方案。因此，它们在算法分析中的作用至关重要。
- en: Selected Exercises
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 选定练习
- en: '3.1'
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.1'
- en: 'Find the OGFs for each of the following sequences: $$\{2^{k+1}\}_{k\ge0}, \qquad\{k2^{k+1}\}_{k\ge0},
    \qquad\{kH_k\}_{k\ge1}, \qquad\{k^3\}_{k\ge2}.$$'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 找到以下序列的每个OGF：$$\{2^{k+1}\}_{k\ge0}, \qquad\{k2^{k+1}\}_{k\ge0}, \qquad\{kH_k\}_{k\ge1},
    \qquad\{k^3\}_{k\ge2}.$$
- en: '3.2'
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.2'
- en: 'Find $[z^N]$ for each of the following OGFs: $${1\over(1-3z)^{4}}, \qquad(1-
    z)^2\ln{1\over1-z}, \qquad{1\over(1-2z^2)^2}.$$'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 找到以下OGFs的$[z^N]$：$${1\over(1-3z)^{4}}, \qquad(1- z)^2\ln{1\over1-z}, \qquad{1\over(1-2z^2)^2}.$$
- en: '3.4'
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.4'
- en: Prove that $$\sum_{1\le k\le N}H_k = (N+1)(H_{N+1}-1).$$
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 证明$$\sum_{1\le k\le N}H_k = (N+1)(H_{N+1}-1).$$
- en: '3.6'
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.6'
- en: Find the OGF for $$\Bigl\{\sum_{0< k< n}{1\over k(n-k)}\Bigr\}_{n>1}.$$
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 找到$$\Bigl\{\sum_{0< k< n}{1\over k(n-k)}\Bigr\}_{n>1}$$的OGF。
- en: '3.7'
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.7'
- en: Find the OGF for $\{{H_k/k}\}_{k\ge1}$.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 找到$\{{H_k/k}\}_{k\ge1}$的OGF。
- en: '3.8'
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.8'
- en: 'Find $[z^N]$ for each of the following OGFs: $$ {1\over1-z}\Bigl(\ln{1\over1-z}\Bigr)^2\qquad\hbox{and}
    \qquad\Bigl(\ln{1\over1-z}\Bigr)^3.$$ Use the notation $$H_N^{(2)}\equiv 1 + {1\over2^2}
    + {1\over3^2} + \ldots + {1\over N^2}$$ for the ``generalized harmonic numbers''''
    that arise in these expansions.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 找到以下OGFs的$[z^N]$：$ {1\over1-z}\Bigl(\ln{1\over1-z}\Bigr)^2$和$\Bigl(\ln{1\over1-z}\Bigr)^3$。在这些展开中使用记号$$H_N^{(2)}\equiv
    1 + {1\over2^2} + {1\over3^2} + \ldots + {1\over N^2}$$代表出现的“广义调和数”。
- en: '3.9'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.9'
- en: 'Find the EGFs for each of the following sequences: $$\{2^{k+1}\}_{k\ge0}, \qquad\{k2^{k+1}\}_{k\ge0},
    \qquad\{k^3\}_{k\ge2}.$$'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 找到以下序列的EGF：$$\{2^{k+1}\}_{k\ge0}, \qquad\{k2^{k+1}\}_{k\ge0}, \qquad\{k^3\}_{k\ge2}.$$
- en: '3.10'
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.10'
- en: Find the EGFs for $1, 3, 5, 7, \ldots$ and $0, 2, 4, 6, \ldots$.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 找到$1, 3, 5, 7, \ldots$和$0, 2, 4, 6, \ldots$的EGF。
- en: '3.11'
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.11'
- en: 'Find $N![z^N]A(z)$ for each of the following EGFs: $$A(z)={1\over 1-z}\ln{1\over
    1-z}, \qquad A(z)=\Bigl(\ln{1\over 1-z}\Bigr)^2, \qquad A(z)=e^{z+z^2}.$$'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下EGF，找到$N![z^N]A(z)$：$$A(z)={1\over 1-z}\ln{1\over 1-z}, \qquad A(z)=\Bigl(\ln{1\over
    1-z}\Bigr)^2, \qquad A(z)=e^{z+z^2}.$$
- en: '3.16'
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.16'
- en: 'Use generating functions to solve the following recurrences: $$\displaylines{
    a_n = -a_{n-1} +6a_{n-2}\qquad\hbox{for $n>1$ with $a_0=0$ and $a_1=1$};\cr a_n
    = 11a_{n-2} -6a_{n-3}\qquad\hbox{for $n>2$ with $a_0=0$ and $a_1=a_2=1$};\cr a_n
    = 3a_{n-1} -4a_{n-2}\qquad\hbox{for $n>1$ with $a_0=0$ and $a_1=1$};\cr a_n =
    a_{n-1} -a_{n-2}\qquad\hbox{for $n>1$ with $a_0=0$ and $a_1=1$}.\cr }$$'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用生成函数解决以下递推关系：$$\displaylines{ a_n = -a_{n-1} +6a_{n-2}\qquad\hbox{对于$n>1$，其中$a_0=0$，$a_1=1$};\cr
    a_n = 11a_{n-2} -6a_{n-3}\qquad\hbox{对于$n>2$，其中$a_0=0$，$a_1=a_2=1$};\cr a_n =
    3a_{n-1} -4a_{n-2}\qquad\hbox{对于$n>1$，其中$a_0=0$，$a_1=1$};\cr a_n = a_{n-1} -a_{n-2}\qquad\hbox{对于$n>1$，其中$a_0=0$，$a_1=1$}.\cr
    }$$
- en: '3.17'
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.17'
- en: Solve the recurrence $$a_n=5a_{n-1}-8a_{n-2}+4a_{n-3}\qquad\hbox{for $n>2$ with
    $a_0=1$, $a_1=2$, and $a_2=4$}.$$
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 解决递推关系$$a_n=5a_{n-1}-8a_{n-2}+4a_{n-3}\qquad\hbox{对于$n>2$，其中$a_0=1$，$a_1=2$，$a_2=4$}.$
- en: '3.18'
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.18'
- en: Solve the recurrence $$a_n=2a_{n-2}-a_{n-4}\qquad\hbox{for $n>4$ with $a_0=a_1=0$
    and $a_2=a_3=1$}.\ $$
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 解决递推关系$$a_n=2a_{n-2}-a_{n-4}\qquad\hbox{对于$n>4$，其中$a_0=a_1=0$，$a_2=a_3=1$}.\
    $$
- en: '3.19'
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.19'
- en: Solve the recurrence $$a_n=6a_{n-1}-12a_{n-2}+18a_{n-3}-27a_{n-4}\quad\hbox{for
    $n>4$}$$ with $a_0=0$ and $a_1=a_2=a_3=1$.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 解决递推关系$$a_n=6a_{n-1}-12a_{n-2}+18a_{n-3}-27a_{n-4}\quad\hbox{对于$n>4$}$，其中$a_0=0$，$a_1=a_2=a_3=1$。
- en: '3.20'
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.20'
- en: Solve the recurrence $$a_n=3a_{n-1}-3a_{n-2}+a_{n-3}\quad\hbox{for $n>2$}$$
    with $a_0=a_1=0$ and $a_2=1$. Solve the same recurrence with the initial condition
    on $a_1$ changed to $a_1=1$.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 解决递推关系$$a_n=3a_{n-1}-3a_{n-2}+a_{n-3}\quad\hbox{对于$n>2$}$，其中$a_0=a_1=0$，$a_2=1$。将初始条件$a_1$更改为$a_1=1$后，解决相同的递推关系。
- en: '3.22'
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.22'
- en: Use generating functions to solve the recurrence $$na_n = (n-2)a_{n-1} + 2\quad{\rm
    for}\ n>1{\rm \ with\ } a_1=1.$$
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 使用生成函数解决递推关系$$na_n = (n-2)a_{n-1} + 2\quad{\rm for}\ n>1{\rm \ with\ } a_1=1.$$
- en: '3.25'
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.25'
- en: 'Use Taylor''s theorem to find the expansions of the following functions: $$\sin(z),\qquad
    2^z,\qquad ze^z.$$'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 使用泰勒定理找到以下函数的展开式：$$\sin(z),\qquad 2^z,\qquad ze^z.$$
- en: '3.27'
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.27'
- en: Use Taylor's theorem to verify directly that $$H(z)={1\over1-z}\ln{1\over1-z}$$
    is the generating function for the harmonic numbers.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用泰勒定理直接验证$$H(z)={1\over1-z}\ln{1\over1-z}$$是调和数的生成函数。
- en: '3.28'
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.28'
- en: Find an expression for $$[z^n]{1\over\sqrt{1-z}}\ln{1\over1-z}.$$ *Hint.* Expand
    $(1-z)^{-\alpha}$ and differentiate with respect to $\alpha$.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 找到以下表达式的值：$$[z^n]{1\over\sqrt{1-z}}\ln{1\over1-z}.$$ *提示.* 展开$(1-z)^{-\alpha}$并对$\alpha$求导。
- en: '3.55'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.55'
- en: Discuss the form of an expression for $[z^N]D(z)$.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论$[z^N]D(z)$的表达形式。
- en: '3.56'
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.56'
- en: Write an efficient computer program that can compute $[z^N]D(z)$, given $N$.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个高效的计算机程序，可以计算给定$N$的$[z^N]D(z)$。
- en: '3.58'
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.58'
- en: '[Euler] Show that $${1\over1-z}=(1+z)(1+z^2)(1+z^4)(1+z^8)\cdots.$$ Give a
    closed form for the product of the first $t$ factors. This identity is sometimes
    called the "computer scientist''s identity." Why?'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[欧拉] 证明$${1\over1-z}=(1+z)(1+z^2)(1+z^4)(1+z^8)\cdots.$$ 给出前$t$个因子的乘积的闭合形式。这个恒等式有时被称为“计算机科学家的恒等式”。为什么？'
- en: '3.60'
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '3.60'
- en: Express $[z^N](1-z)(1-z^2)(1-z^4)(1-z^8)\cdots$ in terms of the binary representation
    of $N$.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 将$(1-z)(1-z^2)(1-z^4)(1-z^8)\cdots$表示为$N$的二进制表示形式。
- en: Review Questions
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 复习问题
- en: Q3.1
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q3.1
- en: Suppose that $a_n$ satisfies $a_n = 9a_{n-1}-20a_{n-2} + n\quad{\rm for}\ n>1{\rm
    \ with\ } a_0=0 {\rm \ and\ } a_1=1 .$ What is $\lim_{n\to\infty}a_n/a_{n+1}$?
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 假设$a_n$满足$a_n = 9a_{n-1}-20a_{n-2} + n\quad{\rm for}\ n>1{\rm \ with\ } a_0=0
    {\rm \ and\ } a_1=1 .$ 那么$\lim_{n\to\infty}a_n/a_{n+1}$是多少？
- en: Q3.2
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q3.2
- en: What is the value of $[z^n]\sum_{0\le k\le n}{2k\choose k}{2n-2k\choose n-k}$?
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 计算$[z^n]\sum_{0\le k\le n}{2k\choose k}{2n-2k\choose n-k}$的值是多少？
- en: Q3.3
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q3.3
- en: '*Do not use computer algebra for this question.* Give the EGF of each of the
    following sequences:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要使用计算代数解决这个问题。* 给出以下序列的EGF：'
- en: '**A. **0, -1, 1, -1, 1, -1, . . .'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**A. **0, -1, 1, -1, 1, -1, . . .'
- en: '**B. **0, 1, 3, 7, 15, 31, 63, . . .'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**B. **0, 1, 3, 7, 15, 31, 63, . . .'
- en: '**C. **0, 1, 2, 3, 4, 5, 6, . . .'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**C. **0, 1, 2, 3, 4, 5, 6, . . .'
- en: '**D. **0, 1, 4, 9, 16, 25, 36, . . .'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**D. **0, 1, 4, 9, 16, 25, 36, . . .'
- en: '**E. **0, 1, 2, 6, 24, 120, 720, . . .'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**E. **0, 1, 2, 6, 24, 120, 720, . . .'
- en: 'For each sequence, use one of the functions from this list: $(e^z-e^{-z})/2$,
    $ze^z$, $e^{2z}-e^z$, $(z^2+z)e^z$, $e^{-z}-1$, $z/(1-z)$, $e^{z^2}-1$.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个序列，使用以下列表中的一个函数：$(e^z-e^{-z})/2$，$ze^z$，$e^{2z}-e^z$，$(z^2+z)e^z$，$e^{-z}-1$，$z/(1-z)$，$e^{z^2}-1$。
- en: Q3.4
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Q3.4
- en: (D. Carter) Find $[z^n]\bigl(1-{1\over z}\bigr)\ln(1-2z)$ for $n>0$.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: (D. 卡特) 对于$n>0$，找到$[z^n]\bigl(1-{1\over z}\bigr)\ln(1-2z)$。
