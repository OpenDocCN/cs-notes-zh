- en: 1.5   Input and Output
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.5 输入和输出
- en: 原文：[https://introcs.cs.princeton.edu/java/15inout](https://introcs.cs.princeton.edu/java/15inout)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://introcs.cs.princeton.edu/java/15inout](https://introcs.cs.princeton.edu/java/15inout)
- en: In this section we extend the set of simple abstractions (command-line input
    and standard output) that we have been using as the interface between our Java
    programs and the outside world to include *standard input*, *standard drawing*,
    and *standard audio*. Standard input makes it convenient for us to write programs
    that process arbitrary amounts of input and to interact with our programs; standard
    draw makes it possible for us to work with graphics; and standard audio adds sound.
    ![Bird's eye view](../Images/05eb7a7d9ff3ba7b6b11dcc81313fd97.png)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将扩展我们一直在使用的简单抽象集合（命令行输入和标准输出）以包括*标准输入*、*标准绘图*和*标准音频*，以便我们编写处理任意数量输入的程序并与我们的程序交互；标准绘图使我们能够处理图形；标准音频添加了声音。
    ![俯视图](../Images/05eb7a7d9ff3ba7b6b11dcc81313fd97.png)
- en: Bird's-eye view.
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 俯视图。
- en: A Java program takes input values from the command line and prints a string
    of characters as output. By default, both command-line arguments and standard
    output are associated with an application that takes commands, which we refer
    to as the *terminal window*.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Java程序从命令行接受输入值，并将一串字符作为输出打印出来。默认情况下，命令行参数和标准输出都与一个接受命令的应用程序相关联，我们称之为*终端窗口*。
- en: '*Command-line arguments.* All of our classes have a `main()` method that takes
    a `String` array `args[]` as argument. That array is the sequence of command-line
    arguments that we type. If we intend for an argument to be a number, we must use
    a method such as `Integer.parseInt()` to convert it from `String` to the appropriate
    type.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*命令行参数。* 我们所有的类都有一个以`String`数组`args[]`为参数的`main()`方法。该数组是我们键入的命令行参数序列。如果我们打算将参数作为数字处理，我们必须使用`Integer.parseInt()`等方法将其从`String`转换为适当的类型。'
- en: '*Standard output.* To print output values in our programs, we have been using
    `System.out.println()`. Java sends the results to an abstract stream of characters
    known as *standard output*. By default, the operating system connects standard
    output to the terminal window. All of the output in our programs so far has been
    appearing in the terminal window.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*标准输出。* 为了在我们的程序中打印输出值，我们一直在使用`System.out.println()`。Java将结果发送到一个称为*标准输出*的字符抽象流。默认情况下，操作系统将标准输出连接到终端窗口。到目前为止，我们程序中的所有输出都出现在终端窗口中。'
- en: '[RandomSeq.java](RandomSeq.java.html) uses this model: It takes a command-line
    argument *n* and prints to standard output a sequence of *n* random numbers between
    0 and 1.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[RandomSeq.java](RandomSeq.java.html) 使用这个模型：它接受一个命令行参数*n*，并将*n*个介于0和1之间的随机数序列打印到标准输出。'
- en: 'To complete our programming model, we add the following libraries:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成我们的编程模型，我们添加以下库：
- en: '*Standard input.* Read numbers and strings from the user.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*标准输入。* 从用户那里读取数字和字符串。'
- en: '*Standard drawing.* Plot graphics.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*标准绘图。* 绘制图形。'
- en: '*Standard audio.* Create sound.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*标准音频。* 创建声音。'
- en: Standard output.
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准输出。
- en: 'Java''s `System.out.print()` and `System.out.println()` methods implement the
    basic standard output abstraction that we need. Nevertheless, to treat standard
    input and standard output in a uniform manner (and to provide a few technical
    improvements), we use similar methods that are defined in our [StdOut](../stdlib/javadoc/StdOut.html)
    library:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Java的`System.out.print()`和`System.out.println()`方法实现了我们需要的基本标准输出抽象。尽管如此，为了以统一的方式处理标准输入和标准输出（并提供一些技术改进），我们使用在我们的[StdOut](../stdlib/javadoc/StdOut.html)库中定义的类似方法：
- en: '![Standard output API](../Images/7f5d7045146ef3eeefac9df4a5566bd1.png)'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准输出API](../Images/7f5d7045146ef3eeefac9df4a5566bd1.png)'
- en: Java's `print()` and `println()` methods are the ones that you have been using.
    The `printf()` method gives us more control over the appearance of the output.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Java的`print()`和`println()`方法是您一直在使用的方法。`printf()`方法使我们能够更好地控制输出的外观。
- en: '*Formatted printing basics.* In its simplest form, `printf()` takes two arguments.
    The first argument is called the *format string*. It contains a *conversion specification*
    that describes how the second argument is to be converted to a string for output.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*格式化打印基础知识。* 在其最简单的形式中，`printf()`接受两个参数。第一个参数称为*格式字符串*。它包含一个*转换规范*，描述了如何将第二个参数转换为输出的字符串。'
- en: '![anatomy of printf() call](../Images/76b91499d73308c25f484c736cecd41a.png)'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![printf()调用的解剖](../Images/76b91499d73308c25f484c736cecd41a.png)'
- en: 'Format strings begin with `%` and end with a one-letter *conversion code*.
    The following table summarizes the most frequently used codes:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 格式字符串以`%`开头，并以一个字母的*转换代码*结尾。以下表总结了最常用的代码：
- en: '![formatting examples for printf()](../Images/46ac964b39e87437f2d1b453b98f69b8.png)'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![printf()的格式化示例](../Images/46ac964b39e87437f2d1b453b98f69b8.png)'
- en: '*Format string.* The format string can contain characters in addition to those
    for the conversion specification. The conversion specification is replaced by
    the argument value (converted to a string as specified) and all remaining characters
    are passed through to the output.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*格式字符串。* 格式字符串可以包含除转换规范之外的字符。转换规范将被参数值替换（按指定的方式转换为字符串），所有剩余字符都将传递到输出。'
- en: '*Multiple arguments.* The `printf()` function can take more than two arguments.
    In this case, the format string will have an additional conversion specification
    for each additional argument.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*多个参数。* `printf()`函数可以接受两个以上的参数。在这种情况下，格式字符串将为每个额外的参数有一个额外的转换规范。'
- en: Here is more documentation on [printf format string syntax](http://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html#syntax).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有更多关于[printf格式字符串语法](http://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html#syntax)的文档。
- en: Standard input.
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准输入。
- en: 'Our [StdIn](../stdlib/javadoc/StdIn.html) library takes data from a *standard
    input stream* that contains a sequence of values separated by whitespace. Each
    value is a string or a value from one of Java''s primitive types. One of the key
    features of the standard input stream is that your program *consumes* values when
    it reads them. Once your program has read a value, it cannot back up and read
    it again. The library is defined by the following API:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的[StdIn](../stdlib/javadoc/StdIn.html)库从包含一系列由空格分隔的值的*标准输入流*中获取数据。每个值都是一个字符串或来自Java的原始类型之一。标准输入流的一个关键特点是，当程序读取值时，它会*消耗*这些值。一旦程序读取了一个值，就不能回退并再次读取它。该库由以下API定义：
- en: '![Standard input API](../Images/be853a3d59c07685c33c5803d406e593.png)'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准输入API](../Images/be853a3d59c07685c33c5803d406e593.png)'
- en: We now consider several examples in detail.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们详细考虑几个示例。
- en: '*Typing input.* When you use the `java` command to invoke a Java program from
    the command line, you actually are doing three things: (1) issuing a command to
    start executing your program, (2) specifying the values of the command-line arguments,
    and (3) beginning to define the standard input stream. The string of characters
    that you type in the terminal window after the command line is the standard input
    stream. For example, [AddInts.java](AddInts.java.html) takes a command-line argument
    `n`, then reads `n` numbers from standard input and adds them, and prints the
    result to standard output:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*输入数据。* 当您使用`java`命令从命令行调用Java程序时，实际上正在执行三件事：(1) 发出命令以开始执行程序，(2) 指定命令行参数的值，以及(3)
    开始定义标准输入流。您在命令行后的终端窗口中键入的字符序列是标准输入流。例如，[AddInts.java](AddInts.java.html)接受一个命令行参数`n`，然后从标准输入读取`n`个数字并将它们相加，然后将结果打印到标准输出：'
- en: '![anatomy of a command](../Images/7fa0ab73e78f4ec17a0b104df3748ae3.png)'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![命令的解剖](../Images/7fa0ab73e78f4ec17a0b104df3748ae3.png)'
- en: '*Input format.* If you type `abc` or `12.2` or `true` when `StdIn.readInt()`
    is expecting an `int`, then it will respond with an `InputMismatchException`.
    `StdIn` treats strings of consecutive whitespace characters as identical to one
    space and allows you to delimit your numbers with such strings.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*输入格式。* 如果您在`StdIn.readInt()`期望一个`int`时键入`abc`或`12.2`或`true`，那么它将响应`InputMismatchException`。`StdIn`将连续空格字符的字符串视为一个空格，并允许您用这样的字符串来分隔您的数字。'
- en: '*Interactive user input.* [TwentyQuestions.java](TwentyQuestions.java.html)
    is a simple example of a program that interacts with its user. The program generates
    a random integer and then gives clues to a user trying to guess the number. The
    fundamental difference between this program and others that we have written is
    that the user has the ability to change the control flow *while* the program is
    executing.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*交互式用户输入。* [TwentyQuestions.java](TwentyQuestions.java.html)是一个与用户交互的简单程序示例。该程序生成一个随机整数，然后给出线索，让用户尝试猜测数字。这个程序与我们编写的其他程序之间的根本区别在于，用户有能力在程序执行时*改变控制流*。'
- en: '*Processing an arbitrary-size input stream.* Typically, input streams are finite:
    your program marches through the input stream, consuming values until the stream
    is empty. But there is no restriction of the size of the input stream. [Average.java](Average.java.html)
    reads in a sequence of real numbers from standard input and prints their average.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*处理任意大小的输入流。* 通常，输入流是有限的：您的程序遍历输入流，消耗值，直到流为空。但是输入流的大小没有限制。[Average.java](Average.java.html)从标准输入读取一系列实数并���印它们的平均值。'
- en: Redirection and piping.
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重定向和管道。
- en: For many applications, typing input data as a standard input stream from the
    terminal window is untenable because doing so limits our program's processing
    power by the amount of data that we can type. Similarly, we often want to save
    the information printed on the standard output stream for later use. We can use
    operating system mechanisms to address both issues.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多应用程序来说，从终端窗口键入输入数据作为标准输入流是不可行的，因为这样做会限制我们程序的处理能力，限制了我们可以键入的数据量。同样，我们经常希望保存在标准输出流上打印的信息以供以后使用。我们可以使用操作系统机制来解决这两个问题。
- en: '*Redirecting standard output to a file.* By adding a simple directive to the
    command that invokes a program, we can *redirect* its standard output to a file,
    either for permanent storage or for input to some other program at a later time.
    For example, the command'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将标准输出重定向到文件。* 通过向调用程序的命令添加一个简单的指令，我们可以*重定向*其标准输出到文件，无论是用于永久存储还是在以后的某个时间输入到其他程序中。例如，命令'
- en: '![Redirecting standard output](../Images/0807897417e071fc5ed5190593cdc9dc.png)'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![重定向标准输出](../Images/0807897417e071fc5ed5190593cdc9dc.png)'
- en: specifies that the standard output stream is not to be printed in the terminal
    window, but instead is to be written to a text file named `data.txt`. Each call
    to `StdOut.print()` or `StdOut.println()` appends text at the end of that file.
    In this example, the end result is a file that contains 1,000 random values.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定标准输出流不要打印在终端窗口中，而是写入一个名为`data.txt`的文本文件。每次调用`StdOut.print()`或`StdOut.println()`都会在该文件的末尾追加文本。在这个例子中，最终结果是一个包含1,000个随机值的文件。
- en: '*Redirecting standard input from a file.* Similarly, we can redirect standard
    input so that `StdIn` reads data from a file instead of the terminal window. For
    example, the command'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从文件重定向标准输入。* 同样，我们可以重定向标准输入，使`StdIn`从文件而不是终端窗口读取数据。例如，命令'
- en: '![Redirecting standard input](../Images/08aa865b2167c729a98bc4c838a846fd.png)'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![重定向标准输入](../Images/08aa865b2167c729a98bc4c838a846fd.png)'
- en: reads a sequence of numbers from the file `data.txt` and computes their average
    value. Specifically, the `<` symbol is a directive to implement the standard input
    stream by reading from the file `data.txt` instead of by waiting for the user
    to type something into the terminal window. When the program calls `StdIn.readDouble()`,
    the operating system reads the value from the file. This facility to redirect
    standard input from a file enables us to process huge amounts of data from any
    source with our programs, limited only by the size of the files that we can store.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从文件`data.txt`中读取一系列数字并计算它们的平均值。具体来说，`<`符号是一个指令，通过从文件`data.txt`中读取值来实现标准输入流，而不是等待用户在终端窗口中输入。当程序调用`StdIn.readDouble()`时，操作系统从文件中读取值。将标准输入从文件重定向到文件的能力使我们能够处理来自任何来源的大量数据，仅受我们可以存储的文件大小的限制。
- en: '*Connecting two programs.* The most flexible way to implement the standard
    input and standard output abstractions is to specify that they are implemented
    by our own programs! This mechanism is called *piping*. For example, the following
    command'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*连接两个程序.* 实现标准输入和标准输出抽象的最灵活方式是指定它们由我们自己的程序实现！这种机制称为*管道*。例如，以下命令'
- en: '![Piping](../Images/84b82880565d989f40a3d1ee09ef3408.png)'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![管道](../Images/84b82880565d989f40a3d1ee09ef3408.png)'
- en: specifies that the standard output for `RandomSeq` and the standard input stream
    for `Average` are the *same* stream.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定`RandomSeq`的标准输出和`Average`的标准输入流是*相同*的流。
- en: '*Filters.* For many common tasks, it is convenient to think of each program
    as a filter that converts a standard input stream to a standard output stream
    in some way, [RangeFilter.java](RangeFilter.java.html) takes two command-line
    arguments and prints on standard output those numbers from standard input that
    fall within the specified range.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*过滤器.* 对于许多常见任务，方便将每个程序视为将标准输入流以某种方式转换为标准输出流的过滤器，[RangeFilter.java](RangeFilter.java.html)接受两个命令行参数，并在标准输出上打印出标准输入中落在指定范围内的数字。'
- en: 'Your operating system also provides a number of filters. For example, the `sort`
    filter puts the lines on standard input in sorted order:'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您的操作系统还提供了许多过滤器。例如，`sort`过滤器将标准输入中的行按排序顺序放置：
- en: '[PRE0]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Another useful filter is `more`, which reads data from standard input and displays
    it in your terminal window one screenful at a time. For example, if you type
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一个有用的过滤器是`more`，它从标准输入读取数据，并在终端窗口中一次显示一个屏幕。例如，如果您键入
- en: '[PRE1]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: you will see as many numbers as fit in your terminal window, but more will wait
    for you to hit the space bar before displaying each succeeding screenful.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将看到尽可能多的数字适合您的终端���口，但更多的数字将等待您按空格键，然后显示每个后续屏幕。
- en: Standard drawing.
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准绘图。
- en: 'Now we introduce a simple abstraction for producing drawings as output. We
    imagine an abstract drawing device capable of drawing lines and points on a two-dimensional
    canvas. The device is capable of responding to the commands that our programs
    issue in the form of calls to static methods in [StdDraw](../stdlib/javadoc/StdDraw.html).
    The primary interface consists of two kinds of methods: *drawing commands* that
    cause the device to take an action (such as drawing a line or drawing a point)
    and *control commands* that set parameters such as the pen size or the coordinate
    scales.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们引入一个简单的抽象来生成绘图作为输出。我们想象一个能够在二维画布上绘制线条和点的抽象绘图设备。该设备能够响应我们的程序以静态方法调用的形式发出的命令，这些命令在[StdDraw](../stdlib/javadoc/StdDraw.html)中。主要接口由两种方法组成：*绘图命令*，导致设备执行动作（如绘制线条或绘制点），以及*控制命令*，设置参数，如笔的大小或坐标比例。
- en: '*Basic drawing commands.* We first consider the drawing commands:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*基本绘图命令.* 我们首先考虑绘图命令：'
- en: '![Standard drawing API: drawing commands](../Images/6f878098e49c88e9c0ee43eb142e8375.png)'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准绘图API：绘图命令](../Images/6f878098e49c88e9c0ee43eb142e8375.png)'
- en: 'These methods are nearly self-documenting: `StdDraw.line(x0, y0, x1, y1)` draws
    a straight line segment connecting the point (*x*[0], *y*[0]) with the point (*x*[1],
    *y*[1]). `StdDraw.point(x, y)` draws a spot centered on the point (*x*, *y*).
    The default coordinate scale is the unit square (all *x*- and *y*-coordinates
    between 0 and 1). The standard implementation displays the canvas in a window
    on your computer''s screen, with black lines and points on a white background.'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些方法几乎是自解释的：`StdDraw.line(x0, y0, x1, y1)`绘制一条连接点(*x*[0], *y*[0])和点(*x*[1],
    *y*[1])的直线段。`StdDraw.point(x, y)`在点(*x*, *y*)上绘制一个点。默认坐标比例是单位正方形（所有*x*和*y*坐标在0和1之间）。标准实现在计算机屏幕上的窗口中显示画布，黑色线条和点在白色背景上。
- en: '*Your first drawing.* The `HelloWorld` for graphics programming with `StdDraw`
    is to draw a triangle with a point inside. [Triangle.java](Triangle.java.html)
    accomplishes this with three calls to `StdDraw.line()` and one call to `StdDraw.point()`.'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*您的第一个绘图.* 使用`StdDraw`进行图形编程的`HelloWorld`是在三角形内绘制一个点。[Triangle.java](Triangle.java.html)通过三次调用`StdDraw.line()`和一次调用`StdDraw.point()`来实现这一点。'
- en: '*Control commands.* The default canvas size is 512-by-512 pixels and the default
    coordinate system is the unit square, but we often want to draw plots at different
    scales. Also, we often want to draw line segments of different thickness or points
    of different size from the standard. To accommodate these needs, `StdDraw` has
    the following methods:'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*控制命令.* 默认画布大小为512x512像素，默认坐标系为单位正方形，但我们经常希望以不同比例绘制图表。此外，我们经常希望绘制不同粗细的线段或不同大小的点。为了满足这些需求，`StdDraw`具有以下方法：'
- en: '![Standard drawing API: control commands](../Images/c1ccd2bbf6751427546b11268da572a8.png)'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准绘图API：控制命令](../Images/c1ccd2bbf6751427546b11268da572a8.png)'
- en: For example, the two-call sequence
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，两次调用序列
- en: '[PRE2]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: sets the drawing coordinates to be within a *bounding box* whose lower-left
    corner is at (*x*[0], *y*[0]) and whose upper-right corner is at (*x*[1], *y*[1]).
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将绘图坐标设置为一个*边界框*，其左下角在(*x*[0], *y*[0])处，右上角在(*x*[1], *y*[1])处。
- en: '*Filtering data to a standard drawing.* [PlotFilter.java](PlotFilter.java.html)
    reads a sequence of points defined by (*x*, *y*) coordinates from standard input
    and draws a spot at each point. It adopts the convention that the first four numbers
    on standard input specify the bounding box, so that it can scale the plot.'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将数据绘制到标准绘图。* [PlotFilter.java](PlotFilter.java.html) 从标准输入读取由(*x*, *y*)坐标定义的点序列，并在每个点处绘制一个点。它采用的约定是标准输入的前四个数字指定了边界框，以便它可以缩放绘图。'
- en: '`% **java PlotFilter <**` [`USA.txt`](USA.txt)'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`% **java PlotFilter <**` [`USA.txt`](USA.txt)'
- en: ''
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![13509 cities in the US](../Images/c41b3fd15e824533ac2453e7fad16aed.png)'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![美国的13509个城市](../Images/c41b3fd15e824533ac2453e7fad16aed.png)'
- en: '*Plotting a function graph.* [FunctionGraph.java](FunctionGraph.java.html)
    plots the function *y* = sin(4*x*) + sin(20*x*) in the interval (0, π). There
    are an infinite number of points in the interval, so we have to make do with evaluating
    the function at a finite number of points within the interval. We *sample* the
    function by choosing a set of *x*-values, then computing *y*-values by evaluating
    the function at each *x*-value. Plotting the function by connecting successive
    points with lines produces what is known as a *piecewise linear approximation*.'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*绘制函数图。* [FunctionGraph.java](FunctionGraph.java.html) 在区间(0, π)中绘制函数*y* =
    sin(4*x*) + sin(20*x*)。在该区间内有无限多个点，因此我们必须通过在区间内的有限数量的点上评估函数来进行。我们通过选择一组*x*值对函数进行*采样*，然后通过在每个*x*值处评估函数来计算*y*值。通过连接相邻点绘制函数产生了所谓的*分段线性逼近*。'
- en: '![Plotting a function graph](../Images/6413348270fbdc0917bf7ac7889bcc4b.png)'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![绘制函数图](../Images/6413348270fbdc0917bf7ac7889bcc4b.png)'
- en: '*Outline and filled shapes.* `StdDraw` also includes methods to draw circles,
    rectangles, and arbitrary polygons. Each shape defines an outline. When the method
    name is just the shape name, that outline is traced by the drawing pen. When the
    method name begins with `filled`, the named shape is instead filled solid, not
    traced.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*轮廓和填充形状。* `StdDraw`还包括绘制圆、矩形和任意多边形的方法。每个形状定义了一个轮��。当方法名只是形状名时，轮廓由绘图笔描绘。当方法名以`filled`开头时，命名形状将被实心填充，而不是描边。'
- en: '![Standard drawing API: shapes](../Images/3d2bdb339142f92bf2c97765550f0363.png)'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准绘图 API：形状](../Images/3d2bdb339142f92bf2c97765550f0363.png)'
- en: The arguments for `circle()` define a circle of radius r; the arguments for
    `square()` define a square of side length 2r centered on the given point; and
    the arguments for `polygon()` define a sequence of points that we connect by lines,
    including one from the last point to the first point.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`circle()`的参数定义了半径为r的圆；`square()`的参数定义了以给定点为中心的边长为2r的正方形；`polygon()`的参数定义了我们通过线连接的一系列点，包括从最后一个点到第一个点的线。'
- en: '![Standard drawing shapes](../Images/23758b0e67c7347f452b3f75cd63a073.png)'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准绘图形状](../Images/23758b0e67c7347f452b3f75cd63a073.png)'
- en: '*Text and color.* To annotate or highlight various elements in your drawings,
    `StdDraw` includes methods for drawing text, setting the font, and setting the
    the ink in the pen.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*文本和颜色。* 为了注释或突出显示绘图中的各种元素，`StdDraw`包括用于绘制文本、设置字体和设置笔墨颜色的方法。'
- en: '![Standard drawing text and color commands](../Images/d1e3d6ab6314b96eafb6e2bb293de6db.png)'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准绘图文本和颜色命令](../Images/d1e3d6ab6314b96eafb6e2bb293de6db.png)'
- en: In this code, [java.awt.Font](http://docs.oracle.com/javase/8/docs/api/java/awt/Font.html)
    and [java.awt.Color](http://docs.oracle.com/javase/8/docs/api/java/awt/Color.html)
    are abstractions that are implemented with non-primitive types that you will learn
    about in Section 3.1. Until then, we leave the details to `StdDraw`. The default
    ink color is black; the default font is a 16-point plain Serif font.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这段代码中，[java.awt.Font](http://docs.oracle.com/javase/8/docs/api/java/awt/Font.html)
    和 [java.awt.Color](http://docs.oracle.com/javase/8/docs/api/java/awt/Color.html)
    是使用非原始类型实现的抽象，你将在第3.1节中了解到。在那之前，我们将细节留给`StdDraw`。默认的墨水颜色是黑色；默认字体是16点普通衬线字体。
- en: '*Double buffering.* `StdDraw` supports a powerful computer graphics feature
    known as *double buffering*. When double buffering is enabled by calling `enableDoubleBuffering()`,
    all drawing takes place on the *offscreen canvas*. The offscreen canvas is not
    displayed; it exists only in computer memory. Only when you call `show()` does
    your drawing get copied from the offscreen canvas to the *onscreen canvas*, where
    it is displayed in the standard drawing window. You can think of double buffering
    as collecting all of the lines, points, shapes, and text that you tell it to draw,
    and then drawing them all simultaneously, upon request. One reason to use double
    buffering is for efficiency when performing a large number of drawing commands.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*双缓冲。* `StdDraw`支持一个强大的计算机图形功能，称为*双缓冲*。通过调用`enableDoubleBuffering()`启用双缓冲时，所有绘图都在*离屏画布*上进行。离屏画布不会显示；它只存在于计算机内存中。只有当你调用`show()`时，你的绘图才会从离屏画布复制到*屏幕画布*，然后在标准绘图窗口中显示。你可以将双缓冲看作是收集所有你要绘制的线条、点、形状和文本，然后在请求时同时绘制它们的过程。使用双缓冲的一个原因是在执行大量绘图命令时提高效率。'
- en: '*Computer animations.* Our most important use of double buffering is to produce
    *computer animations*, where we create the illusion of motion by rapidly displaying
    static drawings. We can produce animations by repeating the following four steps:'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*计算机动画。* 我们对双缓冲最重要的用途是制作*计算机动画*，通过快速显示静态绘图来产生运动的幻觉。我们可以通过重复以下四个步骤来制作动画：'
- en: Clear the offscreen canvas.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清除离屏画布。
- en: Draw objects on the offscreen
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在离屏上绘制对象
- en: Copy the offscreen canvas to the onscreen canvas.
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将离屏画布复制到屏幕画布。
- en: Wait for a short while.
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等待片刻。
- en: 'In support of these steps, the `StdDraw` has several methods:'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了支持这些步骤，`StdDraw`有几种方法：
- en: '![Standard drawing animation commands](../Images/3afa6ef2d7ab312ad7e5c4f6f36d014a.png)'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准绘图动画命令](../Images/3afa6ef2d7ab312ad7e5c4f6f36d014a.png)'
- en: 'The "Hello, World" program for animation is to produce a black ball that appears
    to move around on the canvas, bouncing off the boundary according to the laws
    of elastic collision. Suppose that the ball is at position (*x*, *y*) and we want
    to create the impression of having it move to a new position, say (*x* + 0.01,
    *y* + 0.02). We do so in four steps:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 动画的“Hello, World”程序是产生一个黑色小球，看起来在画布上移动，并根据弹性碰撞定律反弹。假设小球在位置(*x*, *y*)，我们想要给人一种它移动到新位置，比如(*x*
    + 0.01, *y* + 0.02)的印象。我们通过四个步骤实现：
- en: Clear the offscreen canvas to white.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将屏幕外画布清空为白色。
- en: Draw a black ball at the new position on the offscreen canvas.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在屏幕外画布上的新位置画一个黑色小球。
- en: Copy the offscreen canvas to the onscreen canvas.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将屏幕外画布复制到屏幕上画布。
- en: Wait for a short while.
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等待片刻。
- en: To create the illusion of movement, [BouncingBall.java](BouncingBall.java.html)
    iterates these steps for a whole sequence of positions of the ball.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了营造运动的错觉，[BouncingBall.java](BouncingBall.java.html) 对小球的整个位置序列执行这些步骤。
- en: '![Bouncing ball](../Images/5ea587bceb5f8e0d1bd20a139182c930.png)'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![弹跳球](../Images/5ea587bceb5f8e0d1bd20a139182c930.png)'
- en: '*Images.* Our standard draw library supports drawing pictures as well as geometric
    shapes. The command `StdDraw.picture(x, y, filename)` plots the image in the given
    filename (either JPEG, GIF, or PNG format) on the canvas, centered on (x, y).
    [BouncingBallDeluxe.java](BouncingBallDeluxe.java.html) illustrates an example
    where the bouncing ball is replaced by an image of a tennis ball.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*图像。* 我们的标准绘图库支持绘制图片以及几何形状。命令`StdDraw.picture(x, y, filename)`在画布上以(x, y)为中心绘制给定文件名（JPEG、GIF或PNG格式）的图像。[BouncingBallDeluxe.java](BouncingBallDeluxe.java.html)演示了一个例子，其中弹跳球被一个网球的图像替换。'
- en: '*User interaction.* Our standard draw library also includes methods so that
    the user can interact with the window using the mouse.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*用户交互。* 我们的标准绘图库还包括方法，以便用户可以使用鼠标与窗口进行交互。'
- en: '[PRE3]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*A first example.* [MouseFollower.java](MouseFollower.java.html) is the `HelloWorld`
    of mouse interaction. It draws a blue ball, centered on the location of the mouse.
    When the user holds down the mouse button, the ball changes color from blue to
    cyan.'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第一个例子。* [MouseFollower.java](MouseFollower.java.html) 是鼠标交互的`HelloWorld`。它绘制一个蓝色小球，位于鼠标位置的中心。当用户按住鼠标按钮时，小球从蓝色变为青色。'
- en: '*A simple attractor.* [OneSimpleAttractor.java](OneSimpleAttractor.java.html)
    simulates the motion of a blue ball that is attracted to the mouse. It also accounts
    for a drag force.'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*一个简单的吸引子。* [OneSimpleAttractor.java](OneSimpleAttractor.java.html) 模拟了一个向鼠标吸引的蓝色小球的运动。它还考虑了阻力。'
- en: '*Many simple attractors.* [SimpleAttractors.java](SimpleAttractors.java.html)
    simulates the motion of 20 blue balls that are attracted to the mouse. It also
    accounts for a drag force. When the user clicks, the balls disperse randomly.'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*许多简单的吸引子。* [SimpleAttractors.java](SimpleAttractors.java.html) 模拟了20个蓝色小球向鼠标吸引的运动。它还考虑了阻力。当用户点击时，小球会随机分散。'
- en: '*Springs.* [Springs.java](Springs.java.html) implements a spring system.'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*弹簧。* [Springs.java](Springs.java.html) 实现了一个弹簧系统。'
- en: Standard audio.
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准音频。
- en: '[StdAudio](../stdlib/javadoc/StdAudio.html) is a library that you can use to
    play and manipulate sound files. It allows you to play, manipulate and synthesize
    sound.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[StdAudio](../stdlib/javadoc/StdAudio.html) 是一个可以用来播放和操作声音文件的库。它允许您播放、操作和合成声音。'
- en: '![Standard audio API](../Images/f781ac5672f2b52ca283aab638c2301e.png)'
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![标准音频API](../Images/f781ac5672f2b52ca283aab638c2301e.png)'
- en: 'We introduce some some basic concepts behind one of the oldest and most important
    areas of computer science and scientific computing: *digital signal processing*.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们介绍了计算机科学和科学计算中最古老和最重要领域之一的基本概念之一：*数字信号处理*。
- en: '*Concert A.* Concert A is a sine wave, scaled to oscillate at a frequency of
    440 times per second. The function sin(*t*) repeats itself once every 2π units
    on the *x*-axis, so if we measure *t* in seconds and plot the function sin(2π*t*
    × 440) we get a curve that oscillates 440 times per second. The amplitude (*y*-value)
    corresponds to the volume. We assume it is scaled to be between −1 and +1.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*音乐会A。* 音乐会A是一个正弦波，被缩放为每秒振荡440次。函数sin(*t*)在*x*轴上每2π单位重复一次，因此如果我们以秒为单位测量*t*并绘制函数sin(2π*t*
    × 440)，我们得到一个每秒振荡440次的曲线。振幅（*y*值）对应于音量。我们假设它被缩放到-1和+1之间。'
- en: '*Other notes.* A simple mathematical formula characterizes the other notes
    on the chromatic scale. They are divided equally on a logarithmic (base 2) scale:
    there are twelve notes on the chromatic scale, and we get the *i*th note above
    a given note by multiplying its frequency by the (*i*/12)th power of 2\.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*其他注意事项。* 一个简单的数学公式描述了色谱音阶上的其他音符。它们在以对数（以2为底）刻度均匀分布：色谱音阶上有12个音符，我们通过将其频率乘以2的(*i*/12)次幂来得到给定音符上方的第*i*个音符。'
- en: '![Musical notes, numbers, and waves](../Images/fae4eac4dc573213d26d5207db0e1697.png)'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![音符、数字和波形](../Images/fae4eac4dc573213d26d5207db0e1697.png)'
- en: When you double or halve the frequency, you move up or down an octave on the
    scale. For example 880 hertz is one octave above concert A and 110 hertz is two
    octaves below concert A.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当您将频率加倍或减半时，您在音阶上上升或下降一个八度。例如，880赫兹比音乐会A高一个八度，110赫兹比音乐会A低两个八度。
- en: '*Sampling.* For digital sound, we represent a curve by sampling it at regular
    intervals, in precisely the same manner as when we plot function graphs. We sample
    sufficiently often that we have an accurate representation of the curve—a widely
    used sampling rate is 44,100 samples per second. It is that simple: we represent
    sound as an array of numbers (real numbers that are between −1 and +1).'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*采样。* 对于数字音频，我们通过以固定间隔对其进行采样来表示曲线，这与我们绘制函数图形时的方式���全相同。我们采样得足够频繁，以便准确表示曲线 -
    一个广泛使用的采样率是每秒44,100个样本。就是这么简单：我们将声音表示为一组数字（实数，介于-1和+1之间）。'
- en: '| ![Sampling a sine wave at various rates](../Images/4d7e713278bc23214fbddf3105616f73.png)
    |             | ![Sampling a sine wave at 44,100 Hertz](../Images/5000ed7713290e41fcc428950ea5cbd1.png)
    |'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![以不同速率采样正弦波](../Images/4d7e713278bc23214fbddf3105616f73.png) |            
    | ![以44,100赫兹采样正弦波](../Images/5000ed7713290e41fcc428950ea5cbd1.png) |'
- en: For example, the following code fragment plays concert A for 10 seconds.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，以下代码片段演奏10秒钟的A音调。
- en: '[PRE4]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Play that tune.* [PlayThatTune.java](PlayThatTune.java.html) is an example
    that shows how easily we can create music with `StdAudio`. It takes notes from
    standard input, indexed on the chromatic scale from concert A, and plays them
    on standard audio.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*演奏那首曲子。*[PlayThatTune.java](PlayThatTune.java.html)是一个示例，展示了我们如何使用`StdAudio`轻松创建音乐。它从标准输入接受音符，按照升降调音阶进行索引，并在标准音频上播放它们。'
- en: Exercises
  id: totrans-108
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习
- en: Write a program [MaxMin.java](MaxMin.java.html) that reads in integers (as many
    as the user enters) from standard input and prints out the maximum and minimum
    values.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[MaxMin.java](MaxMin.java.html)的程序，从标准输入读取整数（用户输入的数量），并打印出最大值和最小值。
- en: Write a program [Stats.java](Stats.java.html) that takes an integer command-line
    argument *n*, reads *n* floating-point numbers from standard input, and prints
    their *mean* (average value) and *sample standard deviation* (square root of the
    sum of the squares of their differences from the average, divided by *n*−1).
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[Stats.java](Stats.java.html)的程序，接受一个整数命令行参数*n*，从标准输入读取*n*个浮点数，并打印它们的*均值*（平均值）和*样本标准差*（与平均值的差的平方和的平方根，除以*n*−1）。
- en: 'Write a program [LongestRun.java](LongestRun.java.html) that reads in a sequence
    of integers and prints out both the integer that appears in a longest consecutive
    run and the length of the run. For example, if the input is `1 2 2 1 5 1 1 7 7
    7 7 1 1`, then your program should print `Longest run: 4 consecutive 7s`.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[LongestRun.java](LongestRun.java.html)的程序，读取一系列整数，并打印出出现在最长连续序列中的整数以及序列的长度。例如，如果输入是`1
    2 2 1 5 1 1 7 7 7 7 1 1`，则您的程序应该打印`最长连续序列：4个连续的7`。
- en: Write a program [WordCount.java](WordCount.java.html) that reads in text from
    standard input and prints out the number of words in the text. For the purpose
    of this exercise, a word is a sequence of non-whitespace characters that is surrounded
    by whitespace.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[WordCount.java](WordCount.java.html)的程序，从标准输入读取文本，并打印出文本中的单词数。在这个练习中，单词是由空白字符包围的非空白字符序列。
- en: Write a program [Closest.java](Closest.java.html) that takes three floating-point
    command-line arguments \(x, y, z\), reads from standard input a sequence of point
    coordinates \((x_i, y_i, z_i)\), and prints the coordinates of the point closest
    to \((x, y, z)\). Recall that the square of the distance between \((x, y, z)\)
    and \((x_i, y_i, z_i)\) is \((x - x_i)^2 + (y - y_i)^2 + (z - z_i)^2\). For efficiency,
    do not use `Math.sqrt()` or `Math.pow()`.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[Closest.java](Closest.java.html)的程序，接受三个浮点型命令行参数\(x, y, z\)，从标准输入读取一系列点坐标\((x_i,
    y_i, z_i)\)，并打印最接近\((x, y, z)\)的点的坐标。请注意，\((x, y, z)\)和\((x_i, y_i, z_i)\)之间的距离的平方为\((x
    - x_i)^2 + (y - y_i)^2 + (z - z_i)^2\)。为了效率，不要使用`Math.sqrt()`或`Math.pow()`。
- en: 'Given the positions and masses of a sequence of objects, write a program to
    compute their center-of-mass or *centroid.* The centroid is the average position
    of the *n* objects, weighted by mass. If the positions and masses are given by
    (*x[i]*, *y[i]*, *m[i]*), then the centroid (*x*, *y*, *m*) is given by:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给定一系列对象的位置和质量，编写一个程序来计算它们的质心或*质心*。质心是*n*个对象的平均位置，按质量加权。如果位置和质量由(*x[i]*, *y[i]*,
    *m[i]*)给出，则质心(*x*, *y*, *m*)由以下公式给出：
- en: '[PRE5]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Write a program `Centroid.java` that reads in a sequence of positions and masses
    (*x[i]*, *y[i]*, *m[i]*) from standard input and prints out their center of mass
    (*x*, *y*, *m*). *Hint*: model your program after [Average.java](Average.java.html).'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编写一个名为`Centroid.java`的程序，从标准输入读取一系列位置和质量(*x[i]*, *y[i]*, *m[i]*)，并打印出它们的质心(*x*,
    *y*, *m*)。*提示*：参照[Average.java](Average.java.html)模型您的程序。
- en: Write a program [Checkerboard.java](Checkerboard.java.html) that takes a command-line
    argument n and plots an n-by-n checkerboard with red and black squares. Color
    the lower-left square red.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[Checkerboard.java](Checkerboard.java.html)的程序，接受一个命令行参数n，并绘制一个n×n的红黑棋盘。将左下角的方块涂成红色。
- en: '| ![5-by-5 checkerboard](../Images/7a62b13fedd8d00336158d69714a450f.png) |
    ![8-by-8 checkerboard](../Images/8bd772b6938fb901fcc7328ef46c712c.png) | ![25-by-25
    checkerboard](../Images/2d13301ba4ab36d63d0cba4d5888c00d.png) |'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![5x5 棋盘](../Images/7a62b13fedd8d00336158d69714a450f.png) | ![8x8 棋盘](../Images/8bd772b6938fb901fcc7328ef46c712c.png)
    | ![25x25 棋盘](../Images/2d13301ba4ab36d63d0cba4d5888c00d.png) |'
- en: Write a program [Rose.java](Rose.java.html) that takes a command-line argument
    n and plots a rose with n petals (if n is odd) or 2n petals (if n is even) by
    plotting the polar coordinates (r, θ) of the function *r = sin(n × θ)* for θ ranging
    from 0 to 2π radians. Below is the desired output for n = 4, 7, and 8.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[Rose.java](Rose.java.html)的程序，接受一个命令行参数n，并绘制具有n个花瓣（如果n为奇数）或2n个花瓣（如果n为偶数）的玫瑰，通过绘制极坐标（r，θ）的函数*r
    = sin(n × θ)*，其中θ的范围从0到2π弧度。下面是n = 4、7和8时的期望输出。
- en: '| ![rose](../Images/39cb16349d769f860aba5936b445bb9e.png) |'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![玫瑰](../Images/39cb16349d769f860aba5936b445bb9e.png) |'
- en: Write a program [Banner.java](Banner.java.html) that takes a string s from the
    command line and display it in banner style on the screen, moving from left to
    right and wrapping back to the beginning of the string as the end is reached.
    Add a second command-line argument to control the speed.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为[Banner.java](Banner.java.html)的程序，从命令行接受一个字符串s，并以横幅样式显示在屏幕上，从左向右移动，并在到达字符串末尾时回到字符串开头。添加第二个命令行参数以控制速度。
- en: 'Write a program `Circles.java` that draws filled circles of random size at
    random positions in the unit square, producing images like those below. Your program
    should take four command-line arguments: the number of circles, the probability
    that each circle is black, the minimum radius, and the maximum radius.'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为`Circles.java`的程序，在单位正方形的随机位置绘制随机大小的填充圆，生成类似下面的图像。您的程序应该接受四个命令行参数：圆的数量，每个圆为黑色的概率，最小半径和最大半径。
- en: '![random circles](../Images/8a14303093127c369c72603b82b38a0d.png)'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![随机圆](../Images/8a14303093127c369c72603b82b38a0d.png)'
- en: Creative Exercises
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创意练习
- en: '**Spirographs.** Write a program [Spirograph.java](Spirograph.java.html) that
    takes three command-line arguments R, r, and a and draws the resulting spirograph.
    A [spirograph](https://en.wikipedia.org/wiki/Spirograph) (technically, an epicycloid)
    is a curve formed by rolling a circle of radius r around a larger fixed circle
    or radius R. If the pen offset from the center of the rolling circle is (r+a),
    then the equation of the resulting curve at time t is given by'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**斯派罗图。** 编写一个程序[Spirograph.java](Spirograph.java.html)，接受三个命令行参数R，r和a，并绘制生成的斯派罗图。[斯派罗图](https://en.wikipedia.org/wiki/Spirograph)（技术上，是一个外摆线）是通过围绕半径为r的固定大圆滚动一个圆形而形成的曲线。如果笔从滚动圆的中心偏移（r+a），则在时间t时得到的曲线方程如下'
- en: '[PRE6]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Such curves were popularized by a best-selling toy that contains discs with
    gear teeth on the edges and small holes that you could put a pen in to trace spirographs.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这样的曲线被畅销玩具所推广，该玩具包含具有齿轮齿的圆盘和小孔，您可以在其中放入笔来追踪斯派罗图。
- en: For a dramatic 3d effect, draw a circular image, e.g., [earth.gif](earth.gif)
    instead of a dot, and show it rotating over time. Here's a picture of the resulting
    [spirograph](images/spirograph.png) when R = 180, r = 40, and a = 15.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了产生戏剧性的3D效果，绘制一个圆形图像，例如[earth.gif](earth.gif)而不是一个点，并显示它随时间旋转。这是当R = 180，r
    = 40，a = 15时产生的[斯派罗图](images/spirograph.png)的图片。
- en: '**Clock.** Write a program [Clock.java](Clock.java.html) that displays an animation
    of the second, minute, and hour hands of an analog clock. Use the method `StdDraw.show(1000)`
    to update the display roughly once per second.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**时钟。** 编写一个程序[Clock.java](Clock.java.html)，显示模拟时钟的秒、分和时针的动画。使用方法`StdDraw.show(1000)`大约每秒更新一次显示。'
- en: '*Hint*: this may be one of the rare times when you want to use the % operator
    with a `double` - it works the way you would expect.'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*提示*：这可能是您想要使用`double`与%运算符的罕见时刻 - 它的工作方式符合您的期望。'
- en: '**Oscilloscope.** Write a program [Oscilloscope.java](Oscilloscope.java.html)
    to simulate the output of an oscilloscope and produce Lissajous patterns. These
    patterns are named after the French physicist, Jules A. Lissajous, who studied
    the patterns that arise when two mutually perpendicular periodic disturbances
    occur simultaneously. Assume that the inputs are sinusoidal, so tha the following
    parametric equations describe the curve:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**示波器。** 编写一个程序[Oscilloscope.java](Oscilloscope.java.html)来模拟示波器的输出并产生利萨如图案。这些图案以法国物理学家朱尔斯·A·利萨如的名字命名，他研究了两个相互垂直的周期性干扰同时发生时产生的图案。假设输入是正弦的，因此以下参数方程描述了曲线：'
- en: '[PRE7]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Take the six parameters A[x], w[x], θ[x], θ[y], w[y], and θ[y] from the command
    line.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从命令行获取六个参数A[x]，w[x]，θ[x]，θ[y]，w[y]和θ[y]。
- en: For example, the first image below has Ax = Ay = 1, w[x] = 2, w[y] = 3, θ[x]
    = 20 degrees, θ[y] = 45 degrees. The other has parameters (1, 1, 5, 3, 30, 45)
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，下面的第一幅图具有Ax = Ay = 1，w[x] = 2，w[y] = 3，θ[x] = 20度，θ[y] = 45度。另一幅图具有参数（1,
    1, 5, 3, 30, 45）
- en: '| ![Oscilloscope 2](../Images/7ac271c2f3549d49c4fb6377f22b5f04.png) | ![Oscilloscope
    3](../Images/cd39486faf1eda760ff367058ba3db4e.png) |'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![示波器 2](../Images/7ac271c2f3549d49c4fb6377f22b5f04.png) | ![示波器 3](../Images/cd39486faf1eda760ff367058ba3db4e.png)
    |'
- en: Web Exercises
  id: totrans-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 网页练习
- en: '**Word and line count.** Modify [WordCount.java](WordCount.java.html) so that
    reads in text from standard input and prints out the number of characters, words,
    and lines in the text.'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**单词和行数统计。** 修改[WordCount.java](WordCount.java.html)，从标准输入读取文本并打印出文本中的字符数、单词数和行数。'
- en: '**Rainfall problem.** Write a program `Rainfall.java` that reads in nonnegative
    integers (representing rainfall) one at a time until 999999 is entered, and then
    prints out the average of value (not including 999999).'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**降雨问题。** 编写一个程序`Rainfall.java`，逐个读取非负整数（表示降雨量），直到输入999999，然后打印出值的平均值（不包括999999）。'
- en: '**Remove duplicates.** Write a program `Duplicates.java` that reads in a sequence
    of integers and prints back out the integers, except that it removes repeated
    values if they appear consecutively. For example, if the input is 1 2 2 1 5 1
    1 7 7 7 7 1 1, your program should print out 1 2 1 5 1 7 1.'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**删除重复项。** 编写一个程序`Duplicates.java`，读取一系列整数并将整数打印回去，除非它们连续出现重复值。例如，如果输入是1 2
    2 1 5 1 1 7 7 7 7 1 1，则您的程序应该打印出1 2 1 5 1 7 1。'
- en: '**Run length encoding.** Write a program [RunLengthEncoder.java](RunLengthEncoder.java.html)
    that encodes a binary input using run length encoding. Write a program `RunLengthDecoder.java`
    that decodes a run length encoded message.'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**游程编码。** 编写一个程序[RunLengthEncoder.java](RunLengthEncoder.java.html)，使用游程编码对二进制输入进行编码。编写一个程序`RunLengthDecoder.java`，解码游程编码的消息。'
- en: '**Head and tail.** Write programs `Head.java` and `Tail.java` that take an
    integer command line input N and print out the first or last N lines of the given
    file. (Print the whole file if it consists of <= N lines of text.)'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**头部和尾部。** 编写程序`Head.java`和`Tail.java`，接受一个整数命令行输入N，并打印给定文件的前N行或后N行。（如果文本文件包含<=
    N行文本，则打印整个文件。）'
- en: '**Print a random word.** Read a list of N words from standard input, where
    N is unknown ahead of time, and print out one of the N words uniformly at random.
    Do not store the word list. Instead, use Knuth''s method: when reading in the
    ith word, select it with probability 1/i to be the selected word, replacing the
    previous champion. Print out the word that survives after reading in all of the
    data.'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**打印随机单词。** 从标准输入读取N个单词的列表，其中N事先未知，并均匀随机打印出N个单词中的一个。不要存储单词列表。而是使用Knuth的方法：在读取第i个单词时，以1/i的概率选择它作为选定的单词，替换前一个冠军。在读取所有数据后打印出幸存的单词。'
- en: '**Caesar cipher.** Julius Caesar sent secret messages to Cicero using a scheme
    that is now known as a *Caesar cipher*. Each letter is replaced by the letter
    k positions ahead of it in the alphabet (and you wrap around if needed). The table
    below gives the Caesar cipher when k = 3.'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**凯撒密码。** 尤利乌斯·凯撒使用一种方案向西塞罗发送秘密消息，现在被称为*凯撒密码*。每个字母都被替换为字母表中比它前进k个位置的字母（如果需要，可以循环）。下表给出了当k
    = 3时的凯撒密码。'
- en: '[PRE8]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: For example the message "VENI, VIDI, VICI" is converted to "YHQL, YLGL, YLFL".
    Write a program `Caesar.java` that takes a command-line argument k and applies
    a Caesar cipher with shift = k to a sequence of letters read from standard input.
    If a letter is not an uppercase letter, simply print it back out.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，消息"VENI, VIDI, VICI"被转换为"YHQL, YLGL, YLFL"。编写一个名为`Caesar.java`的程序，它接受一个命令行参数k，并将Caesar密码应用于从标准输入读取的字母序列，其中移位=
    k。如果一个字母不是大写字母，只需将其打印出来。
- en: '**Caesar cipher decoding.** How would you decode a message encrypted using
    a Caesar cipher? *Hint*: you should not need to write any more code.'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**凯撒密码解密。** 如何解密使用凯撒密码加密的消息？*提示*：你不需要再写任何代码。'
- en: '**Parity check.** A Boolean matrix has the *parity property* when each row
    and each column has an even sum. This is a simple type of error-correcting code
    because if one bit is corrupted in transmission (bit is flipped from 0 to 1 or
    from 1 to 0) it can be detected and repaired. Here''s a 4 x 4 input file which
    has the parity property:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**奇偶校验。** 当每行和每列的和都是偶数时，布尔矩阵具有*奇偶校验属性*。这是一种简单的纠错码，因为如果在传输中一个位被损坏（位从0翻转到1或从1翻转到0），它可以被检测和修复。这是一个具有奇偶校验属性的4
    x 4输入文件：'
- en: '[PRE9]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Write a program ParityCheck.java that takes an integer N as a command line
    input and reads in an N-by-N Boolean matrix from standard input, and outputs if
    (i) the matrix has the parity property, or (ii) indicates which single corrupted
    bit (i, j) can be flipped to restore the parity property, or (iii) indicates that
    the matrix was corrupted (more than two bits would need to be changed to restore
    the parity property). Use as little internal storage as possible. Hint: you do
    not even have to store the matrix!'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编写一个名为ParityCheck.java的程序，它将一个整数N作为命令行输入，并从标准输入读取一个N x N的布尔矩阵，并输出（i）矩阵是否具有奇偶校验属性，或者（ii）指示哪个单个损坏的位（i，j）可以翻转以恢复奇偶校验属性，或者（iii）指示矩阵已损坏（需要更改两个以上的位才能恢复奇偶校验属性）。尽可能少地使用内部存储。提示：你甚至不需要存储矩阵！
- en: '**Takagi''s function.** Plot Takagi''s function: everywhere continuous, nowhere
    differentiable.'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**高木函数。** 绘制高木函数：处处连续，无处可导。'
- en: '**Hitchhiker problem.** You are interviewing N candidates for the sole position
    of American Idol. Every minute you get to see a new candidate, and you have one
    minute to decide whether or not to declare that person the American Idol. You
    may not change your mind once you finish interviewing the candidate. Suppose that
    you can immediately rate each candidate with a single real number between 0 and
    1, but of course, you don''t know the rating of the candidates not yet seen. Devise
    a strategy and write a program `AmericanIdol` that has at least a 25% chance of
    picking the best candidate (assuming the candidates arrive in random order), reading
    the 500 data values from standard input.'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**搭便车问题。** 你正在面试N位候选人，竞争唯一的美国偶像职位。每分钟你可以看到一个新的候选人，并且你有一分钟的时间来决定是否宣布那个人为美国偶像。一旦你结束面试候选人，就不能改变主意。假设你可以立即用0到1之间的一个实数对每个候选人进行评分，但当然，你不知道尚未见过的候选人的评分。设计一种策略，并编写一个名为`AmericanIdol`的程序，该程序至少有25%的机会选择最佳候选人（假设候选人以随机顺序到达），从标准输入读取500个数据值。'
- en: '*Solution:* interview for N/2 minutes and record the rating of the best candidate
    seen so far. In the next N/2 minutes, pick the first candidate that has a higher
    rating than the recorded one. This yields at least a 25% chance since you will
    get the best candidate if the second best candidate arrives in the first N/2 minutes,
    and the best candidate arrives in the final N/2 minutes. This can be improved
    slightly to 1/e = 0.36788 by using essentially the same strategy, but switching
    over at time N/e.'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*解决方案：* 面试N/2分钟，并记录到目前为止看到的最佳候选人的评分。在接下来的N/2分钟内，选择第一个评分高于记录评分的候选人。这至少有25%的机会，因为如果第二好的候选人在前N/2分钟到达，最佳候选人在最后N/2分钟到达，你将得到最佳候选人。通过在时间N/e时切换，可以稍微改进到1/e
    = 0.36788。'
- en: '**Nested diamonds.** Write a program `Diamonds.java` that takes a command line
    input N and plots N nested squares and diamonds. Below is the desired output for
    N = 3, 4, and 5.'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**嵌套菱形。** 编写一个名为`Diamonds.java`的程序，它接受一个命令行输入N，并绘制N个嵌套的正方形和菱形。下面是N = 3、4和5时的期望输出。'
- en: '| ![diamond 3](../Images/d3a54e796ce18959f9edd56416ff6d46.png) | ![diamond
    4](../Images/874259a685415cc6dd8583d255af594d.png) | ![diamond 5](../Images/45cc970f7793831a1f370d5ebe351cc1.png)
    |'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![菱形3](../Images/d3a54e796ce18959f9edd56416ff6d46.png) | ![菱形4](../Images/874259a685415cc6dd8583d255af594d.png)
    | ![菱形5](../Images/45cc970f7793831a1f370d5ebe351cc1.png) |'
- en: '**Regular polygons.** Create a function to plot an N-gon, centered on (x, y)
    of size length s. Use the function to draws nested polygons like the picture below.'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**正多边形。** 创建一个函数来绘制一个以(x, y)为中心，大小为s的N边形。使用该函数绘制如下图片中的嵌套多边形。'
- en: '![nested polygons](../Images/929ff9ccf1bebf8b016310a2d164cd2f.png)'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![嵌套多边形](../Images/929ff9ccf1bebf8b016310a2d164cd2f.png)'
- en: '**Bulging squares.** Write a program `BulgingSquares.java` that draws the following
    optical illusion from [Akiyoshi Kitaoka](http://www.ritsumei.ac.jp/~akitaoka/index-e.html)
    The center appears to bulge outwards even though all squares are the same size.'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**凸出的正方形。** 编写一个名为`BulgingSquares.java`的程序，从[Akiyoshi Kitaoka](http://www.ritsumei.ac.jp/~akitaoka/index-e.html)绘制以下光学错觉。尽管所有正方形大小相同，中心似乎向外凸出。'
- en: '![bulging squares](../Images/279043bd39bb2e796cd5de5c4dd159d4.png)'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![凸出的正方形](../Images/279043bd39bb2e796cd5de5c4dd159d4.png)'
- en: '**Spiraling mice.** Suppose that N mice that start on the vertices of a regular
    polygon with N sides, and they each head toward the nearest other mouse (in counterclockwise
    direction) until they all meet. Write a program to draw the logarithmic spiral
    paths that they trace out by drawing nested N-gons, rotated and shrunk as in [this
    animation](http://mathworld.wolfram.com/Whirl.html).'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**螺旋式老鼠。** 假设有N只老鼠，它们从一个具有N边的正多边形的顶点出发，然后它们各自向最近的其他老鼠（逆时针方向）前进，直到它们全部相遇。编写一个程序来绘制它们追踪的对数螺旋路径，通过绘制旋转和缩小的嵌套N边形，就像[这个动画](http://mathworld.wolfram.com/Whirl.html)中所示。'
- en: '**Spiral.** Write a program to draw a spiral like the one below.'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**螺旋。** 编写一个程序来绘制如下所示的螺旋。'
- en: '| ![spiral](../Images/0fc375f3300289c26e056e386471631b.png) |'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![螺旋](../Images/0fc375f3300289c26e056e386471631b.png) |'
- en: '**Globe.** Write a program [Globe.java](Globe.java.html) that takes a real
    command-line argument α and plots a globe-like pattern with parameter α. Plot
    the polar coordinates (r, θ) of the function *f(θ) = cos(α × θ)* for θ ranging
    from 0 to 7200 degrees. Below is the desired output for α = 0.8, 0.9, and 0.95.'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**球体。** 编写一个程序[Globe.java](Globe.java.html)，接��一个实数命令行参数α，并绘制一个参数为α的球形图案。绘制函数*f(θ)
    = cos(α × θ)*的极坐标（r，θ），θ范围从0到7200度。下面是α为0.8、0.9和0.95时的期望输出。'
- en: '| ![globe pattern with alpha = 0.8](../Images/0eb36c843dcc624205b4d59b40968cf3.png)
    | ![globe pattern with alpha = 0.9](../Images/2348fa6466c16978b4c77c9f6c9f04a7.png)
    | ![globe pattern with alpha = 0.95](../Images/865b3da2e17501cb6ba16c782d2ef5d6.png)
    |'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![α = 0.8 的球形图案](../Images/0eb36c843dcc624205b4d59b40968cf3.png) | ![α =
    0.9 的球形图案](../Images/2348fa6466c16978b4c77c9f6c9f04a7.png) | ![α = 0.95 的球形图案](../Images/865b3da2e17501cb6ba16c782d2ef5d6.png)
    |'
- en: '**Drawing strings.** Write a program [RandomText.java](RandomText.java.html)
    that takes a string s and an integer N as command line inputs, and writes the
    string N times at a random location, and in a random color.'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**绘制字符串。** 编写一个程序[RandomText.java](RandomText.java.html)，接受一个字符串s和一个整数N作为命令行输入，随机选择一个位置和颜色，将字符串写入N次。'
- en: '| ![hello](../Images/8c4c33cff2cbc23c7bbf0e4a16a55dfb.png) | ![world](../Images/32e31168f3f62974e743216bd774009b.png)
    | ![java](../Images/2efe836fed8303108d10d189cdd201a7.png) |'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![hello](../Images/8c4c33cff2cbc23c7bbf0e4a16a55dfb.png) | ![world](../Images/32e31168f3f62974e743216bd774009b.png)
    | ![java](../Images/2efe836fed8303108d10d189cdd201a7.png) |'
- en: '**2D random walk.** Write a program [RandomWalk.java](RandomWalk.java.html)
    to simulate a 2D random walk and animate the results. Start at the center of a
    2N-by-2N grid. The current location is displayed in blue; the trail in white.'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**2D随机漫步。** 编写一个程序[RandomWalk.java](RandomWalk.java.html)，模拟一个2D随机漫步并动画显示结果。从一个2N×2N网格的中心开始。当前位置以蓝色显示；轨迹以白色显示。'
- en: '| ![random walk in 2d after 5 steps](../Images/2ad422454dc019807744e96be33e3b03.png)
    |          | ![random 2d walk after 25 steps](../Images/cf9c989a62f7772f1a88451385c3a352.png)
    |          | ![random 2d walk after 106 steps](../Images/f74f7617cfdd8d596cab35731988da93.png)
    |'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| ![5步后的2D随机漫步](../Images/2ad422454dc019807744e96be33e3b03.png) |         
    | ![25步后的2D随机漫步](../Images/cf9c989a62f7772f1a88451385c3a352.png) |          |
    ![106步后的2D随机漫步](../Images/f74f7617cfdd8d596cab35731988da93.png) |'
- en: '**Rotating table.** You are seated at a rotating square table (like a lazy
    Susan), and there are four coins placed in the four corners of the table. Your
    goal is to flip the coins so that they are either all heads or all tails, at which
    point a bell rings to notify you that you are done. You may select any two of
    them, determine their orientation, and (optionally) flip either or both of them
    over. To make things challenging, you are blindfolded, and the table is spun after
    each time you select two coins. Write a program `RotatingTable.java` that initializes
    the coins to random orientations. Then, it prompts the user to select two positions
    (1-4), and identifies the orientation of each coin. Next, the user can specify
    which, if any of the two coins to flip. The process repeats until the user solves
    the puzzle.'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**旋转桌子。** 你坐在一个旋转的正方形桌子上（就像一个懒人苏珊），桌子的四个角放着四个硬币。你的目标是翻转这些硬币，使它们要么都是正面要么都是反面，此时会响起一声铃声通知你完成了。你可以选择其中任意两个，确定它们的朝向，并（可选）翻转其中一个或两个。为了增加难度，你被蒙上了眼睛，每次选择两个硬币后桌子都会旋转。编写一个名为`RotatingTable.java`的程序，将硬币初始化为随机朝向。然后，提示用户选择两个位置（1-4），并确定每个硬币的朝向。接下来，用户可以指定要翻转哪一个或哪两个硬币。这个过程重复进行，直到用户解决了谜题。'
- en: '**Rotating table solver.** Write another program `RotatingTableSolver.java`
    to solve the rotating table puzzle. One effective strategy is to choose two coins
    at random and flip them to heads. However, if you get really unlucky, this could
    take an arbitrary number of steps. Goal: devise a strategy that always solves
    the puzzle in at most 5 steps.'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**旋转桌子求解器。** 写另一个名为`RotatingTableSolver.java`的程序来解决旋转桌子谜题。一种有效的策略是随机选择两个硬币并将它们翻转为正面。然而，如果你非常不走运，这可能需要任意数量的步骤。目标：设计一种策略，最多在5步内解决谜题。'
- en: '**Hex.** [Hex](http://mathworld.wolfram.com/GameofHex.html) is a two-player
    board game popularized by John Nash while a graduate student at Princeton University,
    and later commercialized by Parker Brothers. It is played on a hexagonal grid
    in the shape of an [11-by-11 diamond](http://www.wikipedia.org/wiki/Hex_(game)).
    Write a program `Hex.java` that draws the board.'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**六角形。** [六角](http://mathworld.wolfram.com/GameofHex.html) 是由约翰·纳什在普林斯顿大学攻读研究生时推广的一种双人棋盘游戏，后来由帕克兄弟公司商业化。它在一个呈[11×11菱形](http://www.wikipedia.org/wiki/Hex_(game))的六边形网格上进行。编写一个名为`Hex.java`的程序来绘制棋盘。'
- en: '**Projectile motion with drag.** Write a program [BallisticMotion.java](BallisticMotion.java.html)
    that plots the trajectory of a ball that is shot with velocity v at an angle theta.
    Account for gravitational and drag forces. Assume that the drag force is proportional
    to the square of the velocity. Using Newton''s equations of motions and the Euler-Cromer
    method, update the position, velocity, and acceleration according to the following
    equations:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**带阻力的抛体运动。** 编写一个程序[BallisticMotion.java](BallisticMotion.java.html)，绘制以速度v和角度θ射出的球的轨迹。考虑重力和阻力力。假设阻力力与速度的平方成正比。使用牛顿的运动方程和欧拉-克罗默方法，根据以下方程更新位置、速度和加速度：'
- en: '[PRE10]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Use G = 9.8, C = 0.002, and set the initial velocity to 180 and the angle to
    60 degrees.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 G = 9.8，C = 0.002，将初始速度设为180，角度设为60度。
- en: '**Heart.** Write a program [Heart.java](Heart.java.html) to draw a pink heart:
    Draw a diamond, then draw two circles to the upper left and upper right sides.'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**心形。** 编写一个程序[Heart.java](Heart.java.html)来绘制一个粉色的心形：先画一个菱形，然后在左上角和右上角各画两个圆。'
- en: '![Heart](../Images/60f7dc1be849e349205a87c96d0bb862.png)'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![心形](../Images/60f7dc1be849e349205a87c96d0bb862.png)'
- en: '**Changing square.** Write a program that draws a square and changes its color
    each second.'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**变色正方形。** 编写一个程序，绘制一个正方形并每秒更改其颜色。'
- en: '**Simple harmonic motion.** Repeat the previous exercise, but animate the Lissajous
    patterns as in [this applet](http://www.dcs.napier.ac.uk/~andrew/shm/liss3by2.html).
    Ex: A = B = w[x] = w[y] = 1, but at each time t draw 100 (or so) points with φ[x]
    ranging from 0 to 720 degrees, and φ[x] ranging from 0 to 1080 degrees.'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**简谐运动。** 重复上一个练习，但像[这个小程序](http://www.dcs.napier.ac.uk/~andrew/shm/liss3by2.html)中的Lissajous图案一样进行动画。例如：A
    = B = w[x] = w[y] = 1，但在每个时间t绘制100（左右）个点，其中φ[x]范围从0到720度，φ[x]范围从0到1080度。'
- en: '**Bresenham''s line drawing algorithm.** To plot a line segment from (x1, y1)
    to (x2, y2) on a monitor, say 1024-by-1024, you need to make a discrete approximation
    to the continuous line and determine exactly which pixels to turn on. [Bresenham''s
    line drawing algorithm](http://www.cs.helsinki.fi/group/goa/mallinnus/lines/bresenh.html)
    is a clever solution that works when the slope is between 0 and 1 and x1 < x2.'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Bresenham直线绘制算法。** 要在显示器上绘制从（x1，y1）到（x2，y2）的线段，比如1024x1024，您需要对连续线进行离散近似，并确定要打开哪些像素。[Bresenham直线绘制算法](http://www.cs.helsinki.fi/group/goa/mallinnus/lines/bresenh.html)是一个聪明的解决方案，适用于斜率在0和1之间且x1
    < x2时。'
- en: '[PRE11]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Modify Bresenham's algorithm to handle arbitrary line segments.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改Bresenham的算法以处理任意线段。
- en: '**Miller''s madness.** Write a program [Madness.java](Madness.java.html) to
    plot the parametric equation:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**米勒的疯狂。** 编写一个程序[Madness.java](Madness.java.html)来绘制参数方程：'
- en: '[PRE12]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: where the parameter t is in radians. You should get the following [complex picture](images/madness.png).
    Experiment by changing the parameters and produce original pictures.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 其中参数`t`以弧度为单位。你应该得到以下[复杂图片](images/madness.png)。通过改变参数进行实验，并生成原始图片。
- en: '**Fay''s butterfly.** Write a program [Butterfly.java](Butterfly.java.html)
    to plot the polar equation:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Fay的蝴蝶。** 编写一个程序[Butterfly.java](Butterfly.java.html)来绘制极坐标方程：'
- en: '[PRE13]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: where the parameter t is in radians. You should get an image like the following
    butterfly-like figure. Experiment by changing the parameters and produce original
    pictures.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 其中参数`t`以弧度为单位。你应该得到一个类似以下蝴蝶状图案的图像。通过改变参数进行实验，并生成原始图片。
- en: '![Butterfly](../Images/d481405422d8281b8186c7bcecf75fa4.png)'
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![蝴蝶](../Images/d481405422d8281b8186c7bcecf75fa4.png)'
- en: '**Student database.** The file [students.txt](students.txt) contains a list
    of students enrolled in an introductory computer science class at Princeton. The
    first line contains an integer N that specifies the number of students in the
    database. Each of the next N lines consists of four pieces of information, separated
    by whitespace: first name, last name, email address, and section number. The program
    [Students.java](Students.java.html) reads in the integer N and then N lines of
    data of standard input, stores the data in four parallel arrays (an integer array
    for the section number and string arrays for the other fields). Then, the program
    prints out a list of students in section 4 and 5.'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**学生数据库。** 文件[students.txt](students.txt)包含普林斯顿大学一门入门计算机科学课程中注册的学生名单。第一行包含一个整数N，指定数据库中的学生人数。接下来的每个N行由四个信息组成，以空格分隔：名字，姓氏，电子邮件地址和分组号。程序[Students.java](Students.java.html)读取整数N，然后从标准输入读取N行数据，将数据存储在四个并行数组中（一个用于分组号的整数数组，其他字段用于字符串数组）。然后，程序打印出第4和第5组的学生列表。'
- en: '**Shuffling.** In the October 7, 2003 California state runoff election for
    governor, there were [135 official candidates](../data/california-gov.txt). To
    avoid the natural prejudice against candidates whose names appear at the end of
    the alphabet (Jon W. Zellhoefer), California election officials sought to order
    the candidates in random order. Write a program program [Shuffle.java](Shuffle.java.html)
    that takes a command-line argument N, reads in N strings from standard input,
    and prints them back out in shuffled order. (California decided to [randomize
    the alphabet](http://www.cnn.com/2003/ALLPOLITICS/08/12/calif.recall/) instead
    of shuffling the candidates. Using this strategy, not all N! possible outcomes
    are equally likely or even possible! For example, two candidates with very similar
    last names will always end up next to each other.)'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**洗牌。** 在2003年10月7日加利福尼亚州州长竞选中，有[135名官方候选人](../data/california-gov.txt)。为了避免对字母表末尾出现的候选人（Jon
    W. Zellhoefer）的自然偏见，加利福尼亚选举官员试图以随机顺序排列候选人。编写一个程序[Shuffle.java](Shuffle.java.html)，它接受一个命令行参数N，从标准输入读取N个字符串，然后以随机顺序将它们打印出来。（加利福尼亚决定[随机化字母表](http://www.cnn.com/2003/ALLPOLITICS/08/12/calif.recall/)而不是打乱候选人。使用这种策略，不是所有N!可能的结果都是同等可能的，甚至可能！例如，两个姓氏非常相似的候选人将总是相邻。）'
- en: '**Reverse.** Write a program [Reverse.java](Reverse.java.html) that reads in
    an arbitrary number of real values from standard input and prints them in reverse
    order.'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**反转。** 编写一个程序[Reverse.java](Reverse.java.html)，从标准输入读取任意数量的实数值，并以相反顺序打印它们。'
- en: '**Time series analysis.** This problem investigates two methods for forecasting
    in time series analysis. Moving average or exponential smoothing.'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**时间序列分析。** 这个问题研究了时间序列分析中的两种预测方法。移动平均或指数平滑。'
- en: '**Polar plots.** Create any of these [polar plots](http://www.mapleapps.com/powertools/calcII/html/L27-polarGraphs.html).'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**极坐标图。** 创建任何这些[极坐标图](http://www.mapleapps.com/powertools/calcII/html/L27-polarGraphs.html)之一。'
- en: '**Java games.** Use `StdDraw.java` to implement one of the games at [javaunlimited.net](http://javaunlimited.net/games/java4k_2006.php).'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Java游戏。** 使用`StdDraw.java`实现[Java无限网](http://javaunlimited.net/games/java4k_2006.php)上的游戏之一。'
- en: Consider the following program.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑以下程序。
- en: '|'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE14]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '|'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '|'
- en: 'Suppose the file `input.txt` contains the following integers:'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设文件`input.txt`包含以下整数：
- en: '|'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE15]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '|'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '|'
- en: What is the contents of the array `a` after running the following command
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行以下命令后，数组`a`的内容是什么？
- en: '|'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE16]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '|'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '|'
- en: '**High-low.** Shuffle a deck of cards, and deal one to the player. Prompt the
    player to guess whether the next card is higher or lower than the current card.
    Repeat until player guesses it wrong. Game show: ???? used this.'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**高低。** 洗一副牌，并发一张给玩家。提示玩家猜测下一张牌是比当前牌更高还是更低。重复直到玩家猜错。游戏节目：????使用了这个。'
- en: '**Elastic collisions.** Write a program `CollidingBalls.java` that takes a
    command-line argument n and plots the trajectories of n bouncing balls that bounce
    of the walls and each other according to the laws of elastic collisions. Assume
    all the balls have the same mass.'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**弹性碰撞。** 编写一个名为`CollidingBalls.java`的程序，接受一个命令行参数n，并绘制n个弹跳球的轨迹，这些球根据弹性碰撞的法则与墙壁和彼此弹跳。假设所有球的质量相同。'
- en: '**Elastic collisions with obstacles.** Each ball should have its own mass.
    Put a large ball in the center with zero initial velocity. Brownian motion.'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**弹性碰撞与障碍物。** 每个球应该有自己的质量。在中心放一个大球，初始速度为零。布朗运动。'
- en: '**Statistical outliers.** Modify [Average.java](Average.java.html) to print
    out all the values that are larger than 1.5 standard deviations from the mean.
    You will need an array to store the values.'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**统计异常值。** 修改[Average.java](Average.java.html)以打印出大于平均值1.5个标准差的所有值。您需要一个数组来存储这些值。'
- en: '**Optical illusions.** Create a [Kofka ring](http://web.mit.edu/persci/gaz/gaz-teaching/flash/koffka-movie.swf)
    or one of the other [optical illusions](http://web.mit.edu/persci/gaz/gaz-teaching/index.html)
    collected by Edward Adelson.'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**视觉错觉。** 创建一个[Kofka环](http://web.mit.edu/persci/gaz/gaz-teaching/flash/koffka-movie.swf)或Edward
    Adelson收集的其他[视觉错觉](http://web.mit.edu/persci/gaz/gaz-teaching/index.html)之一。'
- en: '**Computer animation.** In 1995 James Gosling presented a demonstration of
    Java to Sun executives, illustrating its potential to deliver dynamic and interactive
    Web content. At the time, web pages were fixed and non-interactive. To demonstrate
    what the Web could be, Gosling presented applets to rotate 3D molecules, visualize
    sorting routines, and Duke cart-wheeling across the screen. Java was officially
    introduced in May 1995 and widely adopted in the technology sector. The Internet
    would never be the same.'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**计算机动画。** 1995年，詹姆斯·高斯林向Sun高管展示了Java的潜力，展示了其提供动态和交互式Web内容的潜力。当时，网页是固定的，不可交互的。为了展示Web的潜力，高斯林展示了旋转3D分子、可视化排序例程和公爵在屏幕上翻筋斗的小程序。Java于1995年5月正式推出，并在技术领域被广泛采用。互联网将永远不同。'
- en: '![Duke doing cartwheels](../Images/5d476fb207f3a74a6d6b20d9b1b64258.png)'
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_IMG
  zh: '![公爵翻筋斗](../Images/5d476fb207f3a74a6d6b20d9b1b64258.png)'
- en: Program [Duke.java](Duke.java.html) reads in the 17 images [T1.gif](T1.gif)
    through [T17.gif](T17.gif) and produces the animation. To execute on your computer,
    download the 17 GIF files and put in the same directory as `Duke.java`. (Alternatively,
    download and unzip the file [duke.zip](duke.zip) or [duke.jar](duke.jar) to extract
    all 17 GIFs.)
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 程序[Duke.java](Duke.java.html)读取了17个图像[T1.gif](T1.gif)到[T17.gif](T17.gif)，并生成了动画。要在您的计算机上执行，请下载这17个GIF文件并放在与`Duke.java`相同的目录中。（或者，下载并解压文件[duke.zip](duke.zip)或[duke.jar](duke.jar)以提取所有17个GIF。）
- en: '**Cart-wheeling Duke.** Modify [Duke.java](Duke.java.html) so that it cartwheels
    5 times across the screen, from right to left, wrapping around when it hits the
    window boundary. Repeat this cart-wheeling cycle 100 times. *Hint*: after displaying
    a sequence of 17 frames, move 57 pixels to the left and repeat. Name your program
    [MoreDuke.java](MoreDuke.java.html).'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**翻筋斗的公爵。** 修改[Duke.java](Duke.java.html)，使其在屏幕上从右向左翻5次筋斗，当碰到窗口边界时环绕。重复这个翻筋斗的循环100次。*提示*：在显示一系列17帧后，向左移动57像素并重复。将你的程序命名为[MoreDuke.java](MoreDuke.java.html)。'
- en: '**Tac (cat backwards).** Write a program `Tac.java` that reads lines of text
    from standard input and prints the lines out in reverse order.'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Tac（猫的反向拼写）。** 编写一个名为`Tac.java`的程序，从标准输入读取文本行，并以相反顺序打印这些行。'
- en: '**Game.** Implement the game [dodge](http://www.lewpen.com/game/) using `StdDraw`:
    move a blue disc within the unit square to touch a randomly placed green disc,
    while avoiding the moving red discs. After each touch, add a new moving red disc.'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**游戏。** 使用`StdDraw`实现游戏[dodge](http://www.lewpen.com/game/)：在单位正方形内移动一个蓝色圆盘，触碰随机放置的绿色圆盘，同时避开移动的红色圆盘。每次触碰后，添加一个新的移动红色圆盘。'
- en: '**Simple harmonic motion.** Create an animation like the one below from [Wikipedia](http://en.wikipedia.org/wiki/Image:Simple_harmonic_motion_animation.gif)
    of simple harmonic motion.'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**简谐运动。** 创建一个类似于[Wikipedia](http://en.wikipedia.org/wiki/Image:Simple_harmonic_motion_animation.gif)中的简谐运动动画。'
- en: '![Simple harmonic motion](../Images/9677902e2ca42df74e54438ad06bf67d.png)'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![简谐运动](../Images/9677902e2ca42df74e54438ad06bf67d.png)'
- en: '**Yin yang.** Draw a [yin yang](http://www.krazydad.com/bestiary/bestiary_yinyang.html)
    using `StdDraw.arc()`.'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**阴阳。** 使用`StdDraw.arc()`绘制一个[阴阳](http://www.krazydad.com/bestiary/bestiary_yinyang.html)。'
- en: '**Twenty questions.** Write a program [QuestionsTwenty.java](QuestionsTwenty.java.html)
    that plays 20 questions from the opposite point of view: the user thinks of a
    number between 1 and a million and the computer makes the guesses. Use *binary
    search* to ensure that the computer needs at most 20 guesses.'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**二十个问题。** 编写一个名为[QuestionsTwenty.java](QuestionsTwenty.java.html)的程序，从相反的角度进行20个问题的游戏：用户想一个介于1和一百万之间的数字，计算机进行猜测。使用*二分查找*确保计算机最多需要20次猜测。'
- en: 'Write a program `DeleteX.java` that reads in text from standard input and deletes
    all occurrences of the letter X. To filter a file and remove all X''s, run your
    program with the following command:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为`DeleteX.java`的程序，从标准输入读取文本并删除所有字母X的出现。要过滤文件并删除所有X，请使用以下命令运行您的程序：
- en: '[PRE17]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Write a program `ThreeLargest.java` that reads integers from standard input
    and prints out the three largest inputs.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为`ThreeLargest.java`的程序，从标准输入读取整数，并打印出最大的三个输入。
- en: Write a program `Pnorm.java` that takes a command-line argument p, reads in
    real numbers from standard input, and prints out their *p-norm*. The p-norm norm
    of a vector (x[1], ..., x[N]) is defined to be the pth root of (|x[1]|^p + |x[2]|^p
    + ... + |x[N]|^p).
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个名为`Pnorm.java`的程序，接受一个命令行参数p，从标准输入读取实数，并打印出它们的*p-范数*。向量(x[1]，...，x[N])的p-范数定义为(|x[1]|^p
    + |x[2]|^p + ... + |x[N]|^p)的p次根。
- en: Consider the following Java program.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑以下Java程序。
- en: '[PRE18]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Suppose that the file `input.txt` contains
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设文件`input.txt`包含
- en: '[PRE19]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: What does the following command do?
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下命令做什么？
- en: '[PRE20]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Repeat the previous exercise but use the following command instead
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复上一个练习，但使用以下命令代替
- en: '[PRE21]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Consider the following Java program.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑以下Java程序。
- en: '[PRE22]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Suppose that the file `input.txt` contains the integers 1 and 1\. What does
    the following command do?
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设文件`input.txt`包含整数1和1。以下命令会做什么？
- en: '[PRE23]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Consider the Java program [Ruler.java](Ruler.java.html).
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑Java程序[Ruler.java](Ruler.java.html)。
- en: '[PRE24]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Suppose that the file `input.txt` contains the integers 1 and 1\. What does
    the following command do?
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设文件`input.txt`包含整数1和1。以下命令会做什么？
- en: '[PRE25]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Modify [Add.java](Add.java.html) so that it re-asks the user to enter two positive
    integers if the user types in a non-positive integer.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改[Add.java](Add.java.html)，以便在用户输入非正整数时，重新要求用户输入两个正整数。
- en: 'Modify [TwentyQuestions.java](TwentyQuestions.java.html) so that it re-asks
    the user to enter a response if the user types in something other than `true`
    or `false`. Hint: add a `do-while` loop within the main loop.'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改[TwentyQuestions.java](TwentyQuestions.java.html)，以便在用户输入除`true`或`false`之外的内容时，重新要求用户输入响应。提示：在主循环中添加一个`do-while`循环。
- en: '**Nonagram.** Write a program to plot a [nonagram](http://mathworld.wolfram.com/Nonagram.html).'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Nonagram.** 编写一个程序来绘制一个[nonagram](http://mathworld.wolfram.com/Nonagram.html)。'
- en: '**Star polygons.** Write a program `StarPolygon.java` that takes two command
    line inputs p and q, and plots the [{p/q}-star polygon](http://mathworld.wolfram.com/StarPolygon.html).'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**星形多边形。** 编写一个程序`StarPolygon.java`，接受两个命令行输入p和q，并绘制[{p/q}-star polygon](http://mathworld.wolfram.com/StarPolygon.html)。'
- en: '**Complete graph.** Write a program to plot that takes an integer N, plots
    an N-gon, where each vertex lies on a circle of radius 256\. Then draw a gray
    line connecting each pair of vertices.'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**完全图。** 编写一个程序，接受一个整数N，绘制一个N-gon，其中每个顶点位于半径为256的圆上。然后绘制连接每对顶点的灰色线。'
- en: '**Necker cube.** Write a program `NeckerCube.java` to plot a [Necker cube](http://mathworld.wolfram.com/NeckerCube.html).'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**内克立方体。** 编写一个程序`NeckerCube.java`来绘制一个[内克立方体](http://mathworld.wolfram.com/NeckerCube.html)。'
- en: 'What happens if you move the `StdDraw.clear(Color.BLACK)` command to before
    the beginning of the `while` loop in [BouncingBall.java](BouncingBall.java.html)?
    *Answer*: try it and observe a nice woven 3d pattern with the given starting velocity
    and position.'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果将`StdDraw.clear(Color.BLACK)`命令移到[BouncingBall.java](BouncingBall.java.html)中`while`循环开始之前会发生什么？
    *答案*：尝试一下，观察给定起始速度和位置的漂亮编织的3D图案。
- en: What happens if you change the parameter of `StdDraw.show()` to 0 or 1000 in
    [BouncingBall.java](BouncingBall.java.html)?
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果将[在BouncingBall.java中将`StdDraw.show()`的参数更改为0或1000会发生什么？
- en: Write a program to plot a circular ring of width 10 like the one below using
    two calls to `StdDraw.filledCircle()`.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序，使用两次调用`StdDraw.filledCircle()`来绘制一个宽度为10的圆环。
- en: Write a program to plot a circular ring of width 10 like the one below using
    a nested `for` loop and many calls to `StdDraw.point()`.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序，使用嵌套的`for`循环和多次调用`StdDraw.point()`来绘制一个宽度为10的圆环，如下所示。
- en: Write a program to plot the Olympic rings.![Olympic rings http://www.janecky.com/olympics/rings.html](../Images/5a40bae61ad7a1793534903a4c140956.png)
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序来绘制奥运五环。![奥运五环 http://www.janecky.com/olympics/rings.html](../Images/5a40bae61ad7a1793534903a4c140956.png)
- en: Write a program [BouncingBallDeluxe.java](BouncingBallDeluxe.java.html) that
    embellishes [BouncingBall.java](BouncingBall.java.html) by playing a sound effect
    upon collision with the wall using `StdAudio` and the sound file [pipebang.wav](pipepang.wav).
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序[BouncingBallDeluxe.java](BouncingBallDeluxe.java.html)，通过使用`StdAudio`和声音文件[pipebang.wav](pipepang.wav)在与墙碰撞时播放声音效果来装饰[BouncingBall.java](BouncingBall.java.html)。
