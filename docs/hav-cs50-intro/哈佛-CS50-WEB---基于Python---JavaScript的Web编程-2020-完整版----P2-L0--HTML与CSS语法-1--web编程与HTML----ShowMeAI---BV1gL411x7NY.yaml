- en: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P2：L0- HTML与CSS语法 1 (web编程与HTML)
    - ShowMeAI - BV1gL411x7NY
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P2：L0- HTML与CSS语法 1 (web编程与HTML)
    - ShowMeAI - BV1gL411x7NY
- en: '![](img/7be82e6347afae50c0689d25a513a49f_0.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_0.png)'
- en: '[Music]。![](img/7be82e6347afae50c0689d25a513a49f_2.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[音乐]。![](img/7be82e6347afae50c0689d25a513a49f_2.png)'
- en: all right welcome everyone to web，programming with Python and JavaScript。my
    name is Brian U and in this course，we'll dive into the design and。implementation
    of web applications in，lectures we'll have an opportunity to。discuss and explore
    many of the ideas，and tools and languages that are central。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，欢迎大家来到使用Python和JavaScript的网页编程。我叫Brian U，在这个课程中，我们将深入研究网页应用的设计和实现。在讲座中，我们将有机会讨论和探索许多核心的想法、工具和语言。
- en: to modern web programming and through，hands-on projects you'll have an。opportunity
    to take those ideas and put，them into practice，designing multiple web applications
    of。your own culminating in a final project，of your own choosing throughout the
    term。we'll cover a number of topics in this，world of web programming beginning
    with。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于现代网页编程，通过动手项目，你将有机会将这些想法付诸实践，设计多个你自己的网页应用，最终以一个你自己选择的项目作为结尾。在整个学期中，我们将涵盖网页编程领域的多个主题，从这里开始。
- en: html5 and css3 two of the languages that，are central to the understanding of。webpages
    HTML is a language we'll use to，describe the structure of a web page and。CSS is
    a language we'll use to describe，the style of a web page the colors and。the fonts
    and the layouts and the，spacing that make the web page look。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: html5和css3是理解网页的两种核心语言。HTML是一种我们用来描述网页结构的语言，CSS是一种我们用来描述网页样式的语言，包括颜色、字体、布局和使网页看起来的间距。
- en: exactly the way we want it to look after，that we'll turn our attention to get
    a。tool not specific to web programming per，se but that we can use in order to。version
    control our programs to keep，track of the different changes we make。to our web
    programs and to allow us to，be able to work on various different。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些之后，我们将关注获取一个工具，这个工具并不是特定于网页编程，但我们可以用它来进行版本控制，跟踪我们对网页程序所做的不同更改，并使我们能够在多个不同项目上工作。
- en: parts of the web application at the same，time before merging those pieces back。together
    after that we'll take a look at，Python one of the first main languages。that we're
    going to be exploring in the，course which is a language that we're。going to use
    in order to build our web，applications specifically we'll use。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 同时也将网页应用的各个部分整合在一起。之后，我们将关注Python，这是我们将要探索的第一种主要语言，这是一种我们将用来构建网页应用的语言，具体来说我们将使用。
- en: Python using a framework called django，django is a web programming framework。written
    in the Python programming，language that we're going to use to make。it easy to
    design and develop our web，applications django in particular makes。it easy to
    design web applications that，interact with data so after that we'll。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Python使用一个叫django的框架，django是用Python编程语言编写的网页编程框架，我们将用它来简化网页应用的设计和开发。特别是django使得设计与数据交互的网页应用变得简单，因此在这之后我们将继续。
- en: turn our attention to sequel a language，that we can use to interact with。databases
    in particular looking at how，django allows us to use models and。migrations to
    interact with data and，allow users to interact with data all。the more easily next
    we'll turn our，attention to the second of the main。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接着我们将关注sequel，这是一种我们可以用来与数据库互动的语言，特别是研究django如何允许我们使用模型和迁移来与数据交互，以及如何让用户更方便地与数据互动。接下来，我们将关注主要内容的第二部分。
- en: programming languages that we'll be，exploring in this class javascript and。looking
    at how we can use JavaScript to，run in users web browsers to make web。pages just
    a little bit more interactive，in particular we'll use javascript in。the context
    of user interfaces looking，at modern user interfaces and exploring。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这门课上探索的编程语言是JavaScript，看看如何使用JavaScript在用户的网页浏览器中运行，使网页变得更加互动，特别是在用户界面的背景下研究现代用户界面。
- en: how it is that those interfaces work and，how we can develop those user interfaces。with
    a combination of pi，and JavaScript next we'll turn our，attention to testing and
    see ICD or。continuous integration and continuous，delivery which are tools that
    we can use。and software best practices to make sure，that we're able to design
    and develop。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将关注测试，看看持续集成（ICD）和持续交付，这些是我们可以使用的软件最佳实践工具，以确保我们能够设计和开发。
- en: code more efficiently and testing in，particular makes sure that as we make。![](img/7be82e6347afae50c0689d25a513a49f_4.png)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '更有效地编写代码，特别是在测试中，确保我们在进行更改时，![](img/7be82e6347afae50c0689d25a513a49f_4.png) '
- en: changes to our code we're not breaking，existing parts of our web application
    by。making sure that we have a whole suite，of tests that we can use them to ensure。that
    our web application is always，behaving as it should and finally we'll。turn our
    attention to scalability and，security on the Internet thinking about。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对我们的代码进行更改时，确保我们没有破坏现有的网络应用程序部分，确保我们有一整套测试，可以用来确保我们的网络应用程序始终如预期那样运行，最后我们将关注可扩展性和互联网安全性。
- en: what happens as our web application，grows larger as more and more different。users
    start to use our web application，how do we load balance between those。people and
    what do we need to change，about our database to make sure lots of。users are able
    to connect to our web，application at the same time moreover。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们的网络应用程序变得越来越大，越来越多的不同用户开始使用我们的网络应用程序，我们该如何在这些人之间进行负载均衡，以及我们需要对数据库做出哪些更改，以确保大量用户能够同时连接到我们的网络应用程序？
- en: we'll look at the security implications，behind designing our web applications。what
    might an adversary do if we're not，careful and how should we proactively be。designing
    our web application to make，sure that it's secure but today we begin。our conversation
    with HTML and CSS two，of the languages that are foundational。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将探讨设计网络应用程序的安全隐患。如果我们不小心，敌对者可能会做些什么，我们应该如何主动设计我们的网络应用程序，以确保其安全，但今天我们将以HTML和CSS开始我们的讨论，这两种语言是基础。
- en: to understanding web pages and how web，browsers are able to display those web。pages
    and we'll start with HTML or，hypertext markup language which is a。language that
    we can use to describe the，structure of the web page all of the。buttons and the
    text and the forums and，other parts of the web page that the。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 理解网页以及网页浏览器如何显示这些网页，我们将从HTML（超文本标记语言）开始，这是一个我们可以用来描述网页结构的语言，网页中的所有按钮、文本、表单以及其他部分。
- en: user ultimately sees and interacts with，our very first HTML page is going to。look
    a little something like this it's，going to be text-based code that we。write then
    a web browser like Safari or，Chrome or Firefox is then able to look。at parse understand
    and display to the，user so let's take a look at this page。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 用户最终看到并与之交互的我们第一个HTML页面将类似于这个，它将是我们编写的基于文本的代码，然后像Safari、Chrome或Firefox这样的网页浏览器能够查看、解析、理解并显示给用户，所以让我们来看一下这个页面。
- en: one line at a time and get an，understanding for how it works even if。you don't
    quite understand all the，nuances of the syntax there are probably。a couple of
    things that stand out to you，you might notice the word title which。probably reflects
    the title of the web，page for example which in this case。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一次一行，逐步理解其工作原理，即使你不完全理解语法的所有细微差别，也许会有几件事情引起你的注意，你可能会注意到“标题”这个词，这可能反映了网页的标题，例如，在这个例子中。
- en: appears to be the word hello and then，down further below we see that we have。the
    body of the web page that seems to，contain the words of hello world so what。is
    this web page actually going to look，like well let's take a look at it we'll。go
    ahead and open up a text editor you，can use any text editor you want but for。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 似乎是“你好”这个词，然后进一步往下，我们看到网页主体似乎包含“你好，世界”这几个字。那么这个网页实际上会是什么样子呢？我们来看一下，打开一个文本编辑器，你可以使用任何你想要的文本编辑器。
- en: this course I'm going to use Microsoft's，Visual Studio code，and I'm going to
    open up a new file that。I'm just going to call hello dot HTML，inside of hello
    dot HTML I'm going to。write the same HTML that we just saw a，moment ago and we'll
    explain each of。these lines in due time but recall that，we had a title of the
    page that said。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这门课程中，我将使用微软的Visual Studio Code，并打开一个新文件，我将称之为hello.html，在hello.html中，我将编写刚刚看到的相同HTML，并将在适当的时候解释这些行，但请记住，我们有一个标题为。
- en: '![](img/7be82e6347afae50c0689d25a513a49f_6.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_6.png)'
- en: something like hello and then a body of，the page where we said something like。hello
    world for example so this is our，very first HTML page and if I go ahead。![](img/7be82e6347afae50c0689d25a513a49f_8.png)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于hello的内容，以及页面的主体，我们在这里说了类似hello world的内容，所以这是我们的第一个HTML页面，如果我继续进行。
- en: and open that HTML page as by opening，hello HTML for example inside of a web。browser
    what I'll see is something like，this in the body of the page I see the。words hello
    world and if you notice up，here at the top of my web browser I see。the title bar
    where I have the title for。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 打开HTML页面，例如打开hello HTML，在网页浏览器中，我会看到页面主体中有hello world的字样，如果你注意到我网页浏览器顶部的标题栏，我看到有我们页面内容的标题。
- en: '![](img/7be82e6347afae50c0689d25a513a49f_10.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_10.png)'
- en: this page which in this case is just the，word hello so this is our very first
    web。program that we've been able to develop，just using HTML and now let's explore
    in。more detail how exactly this program，works so here again was the web page。that
    we were just looking at and this，very first line here doctype HTML is。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个页面在这种情况下仅包含单词hello，所以这是我们能够开发的第一个网页，仅使用HTML，现在让我们更详细地探索这个程序是如何工作的。这里再次是我们刚刚查看的网页，这一行doctype
    HTML是。
- en: what we might call a doctype declaration，it's a way of telling the web browser。what
    version of HTML we're using in this，particular web page because depending on。the
    version of HTML the web browser，might want to display different。information or
    I might need to parse the，page a little bit differently each。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以称之为文档类型声明，这是一种告诉网页浏览器我们在这个特定网页上使用哪个版本的HTML，因为根据HTML的版本，网页浏览器可能会想要显示不同的信息，或者可能需要以不同的方式解析页面。
- en: version of HTML has had a slightly，different way of indicating that version。but
    this line here doctype HTML is our，way of saying that this HTML page is。written
    using html5 the latest version，of HTML，after that our HTML page is structured。as
    a series of nested HTML elements，where an HTML element describes。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: HTML的不同版本略有不同的方式来指示该版本，但这一行doctype HTML是我们表示该HTML页面是用HTML5编写的方式，这是HTML的最新版本，之后我们的HTML页面结构是由一系列嵌套的HTML元素构成的，每个HTML元素描述。
- en: something on the page and we might have，elements that are inside of other。elements
    each of those elements is，indicated by what we're going to call an。HTML tag enclosed
    using those angled，brackets and right here we'll see the。beginning of the HTML
    tag which means，this is the beginning of the HTML。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 页面上的某些内容可能会有嵌套在其他元素中的元素，每个元素都由我们所称的HTML标签表示，这些标签用尖括号括起来，这里我们看到HTML标签的开始，这意味着这是HTML的开始。
- en: content of our page down below this，slash HTML means that this is the end of。the
    HTML content of the page and in，between is the actual HTML content of。the page
    which might include a，HTML elements you might also notice that。in this HTML tag
    we've specified what，we're going to call an HTML attribute。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下方的这条slash HTML意味着这是页面HTML内容的结束，而中间则是页面的实际HTML内容，这可能包括HTML元素。你可能还会注意到在这个HTML标签中，我们指定了一个HTML属性。
- en: some additional information that we're，giving about this tag in particular。we're
    giving it a Lang or language，attribute which is equal to en or。English this just
    tells the web browser，or anyone looking at the HTML of this。page that this page
    is written in a，language and the language it's written。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里提供了一些关于这个标签的附加信息。我们为其提供了一个Lang或语言属性，该属性等于en或英语，这只是告诉网页浏览器或任何查看此页面HTML的人，这个页面是用一种语言编写的。
- en: in is English and this is helpful for，search engines for example when they're。looking
    through many different web pages，trying to figure out what language each。webpage
    is in we can just tell the，search engine or anyone else who's。looking at the page
    that this page is，written in English now inside of the。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 它是英语，这对搜索引擎来说是有帮助的，例如，当它们在浏览许多不同的网页时，试图弄清楚每个网页使用的是什么语言，我们可以告诉搜索引擎或任何其他查看页面的人，这个页面是用英语编写的。
- en: HTML body of the page we have a number，of different elements that are going
    to。describe what we want on this page，starting with the head section of the。web
    page which describes stuff not in，the main body of the web page the part。of the
    web page the user see is but，other information about the web page。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面的 HTML 主体中，我们有许多不同的元素来描述我们希望在此页面上展示的内容，从网页的头部分开始，它描述的是不在网页主体中的内容，用户所看到的网页部分，以及关于网页的其他信息。
- en: that's going to be helpful or useful for，web browsers to know about for example。one
    important thing that the web browser，needs to know is what is the title of。the
    web page and here we see a title tag，again indicated by the word title in。those
    angled brackets followed by the，end of the title tag indicated by a。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于网页浏览器来说是有用的信息，例如，网页浏览器需要知道的一个重要信息是网页的标题。在这里我们再次看到一个标题标签，用词“title”表示，包围在尖括号中，接着是以斜杠结束的标题标签，表明标题标签的结束。
- en: slash before the title and in between，the two title tags is the word hello。which
    means the title of this page，should be the word hello and that's all。the information
    we'll have in the head，of the page we'll add more information。there later but
    for now all the web page，needs to know is that it has a title and。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个标题标签之间是“hello”这个词，这意味着这个页面的标题应该是“hello”，这就是我们在页面头部所需的全部信息，之后我们会添加更多的信息，但现在网页所需知道的仅仅是它有一个标题。
- en: the title is the word hello next up，comes the body of the page again。indicated
    by a body tag and that ends，with the tag with slash body meaning。this is the end
    of the body of the page，and the body of the page again is just。the visible part
    of the page that the，user can see and what do we want inside。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 标题是“hello”这个词，接下来是页面的主体，再次通过主体标签来表示，并以带有斜杠的主体标签结束，表示这是页面主体的结束。而页面的主体部分就是用户可以看到的可见部分，我们希望在
    HTML 页面主体内放置什么呢？
- en: the body of the page for now we just，want the text hello world and that's the。information
    that's going to be displayed，when someone visits this web page and so。that's all
    there really is to this HTML，page we specified in the header that。there's a title
    of the page called hello，and inside the body we're saying that。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 目前页面的主体中我们只想要文本“hello world”，而这是当有人访问这个网页时要显示的信息，这就是这个 HTML 页面所包含的全部内容，我们在头部指定了页面的标题为“hello”，而在主体内我们说明。
- en: the page should say the words hello，world and if you want to visually think。about
    the way that all these HTML，elements are structured it can sometimes，be helpful。to
    think about an HTML page in terms of，a tree like structure that we call the。document
    object model or Dom and so here，for example is what the Dom for this web。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 页面应该显示“hello world”这几个字。如果你想在视觉上考虑所有这些 HTML 元素的结构，有时可以帮助思考 HTML 页面在树状结构中的形式，这就是我们称之为文档对象模型（DOM）。例如，这里就是这个网页的
    DOM。
- en: page might actually look like here on，the left is the HTML content that we。just
    saw a moment ago and over here on，the right is the Dom the document object。model
    the tree like structure that，describes how all of these HTML elements。are related
    to each other so we start up，here with the HTML element and this。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 页面可能实际看起来像这里左边是我们刚才看到的 HTML 内容，右边是 DOM，即文档对象模型，树状结构描述了所有这些 HTML 元素是如何彼此关联的，因此我们从
    HTML 元素开始。
- en: parent element so to speak has two child，elements within it a head element and
    a。body element as we can see here we're，inside of HTML we have a head section。and
    a body section and the indentation，here that we're including in the HTML。text
    it's not strictly necessary the web，browser doesn't care what the。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 所谓的父元素有两个子元素，其中包含一个头元素和一个主体元素。正如我们在这里看到的，我们处于 HTML 结构中，拥有一个头部分和一个主体部分，而我们在 HTML
    文本中包含的缩进并不是严格必要的，网页浏览器并不关心这些。
- en: indentation is but it can be helpful for，someone who's reading the page just
    to。see the indentation to understand，visually that the head is inside of the。HTML
    element and the body is inside of，the HTML element too so inside of the。head element
    we have a title element and，inside of the title element is just the。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个缩进虽然不是必需的，但对于阅读页面的人来说，看到缩进可以帮助他们视觉上理解头部是在 HTML 元素内部，主体也在 HTML 元素内部。因此在头元素内我们有一个标题元素，标题元素内部仅包含。
- en: text the word hello and likewise inside，of the body element we also have some。text
    the text hello world so thinking，about HTML and HTML documents in terms。of this
    structure can be helpful for，understanding which HTML elements are。inside of which
    other HTML elements and，that's going to make it easier for us to。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 文本“hello”，同样在body元素内我们也有一些文本，文本“hello world”。因此，从这种结构来思考HTML和HTML文档，有助于理解哪些HTML元素包含在其他HTML元素内，这将使我们更容易。
- en: reason about these pages later on and，especially as we later transition into。the
    world of JavaScript javascript is，going to make it all the more powerful。and give
    us the ability to actually，modify parts of this done as well but。we'll certainly
    get to that in due time，so now let's take a look at some of the。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后对这些页面进行推理，尤其是当我们过渡到JavaScript的世界时，JavaScript将使其变得更强大，并让我们能够实际修改部分内容。但我们会在适当的时候深入探讨这一点，现在先看看一些。
- en: other common HTML tags and HTML elements，that we might be interacting with in
    our。web page and we'll start by thinking，about HTML headings so big banners at。the
    top of a page for example some，headline that describes what a page is。about so
    I'll go ahead into my text，editor and create a new file that I'll。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 其他常见的HTML标签和我们可能在网页中交互的HTML元素，我们将首先考虑HTML标题，例如页面顶部的大横幅，一些描述页面内容的标题。因此，我会在文本编辑器中创建一个新的文件。
- en: call headings dot HTML and the structure，of this page is going to be pretty。similar
    to the pages that we've seen，before already so I'm going to start by。just using
    the hello HTML text and paste，it in here I'll change the title of the。page instead
    of hello we'll go ahead and，call it head，but inside the body of this page now
    I。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我将其命名为headings.html，这个页面的结构与我们之前看到的页面非常相似，所以我将开始使用hello HTML文本并将其粘贴在这里，我会将页面标题改为head，而在这个页面的body内现在我。
- en: want something a little bit different，I'm going to inside the body of the page。use
    an h1 element and say this is a，heading for example so h1 is a tag that。I can
    use to create a large heading at。![](img/7be82e6347afae50c0689d25a513a49f_12.png)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 想要稍微不同一些的东西，我将在页面的body内部使用h1元素，说明这是一个标题。例如，h1是一个我可以用来创建大标题的标签。！[](img/7be82e6347afae50c0689d25a513a49f_12.png)
- en: the top of my page like for the title of，a page for example so if I open up。![](img/7be82e6347afae50c0689d25a513a49f_14.png)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我页面顶部的标题，例如，如果我打开！[](img/7be82e6347afae50c0689d25a513a49f_14.png)。
- en: headings dot HTML I might see something，that looks like this a big heading at。the
    top of my page that says this is a，heading h1 where the H stands for。heading and
    the 1 stands for the largest，possible heading and in fact HTML gives。us a number
    of different tags that we，can use in order to create headings of。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: headings.html 可能会看到类似这样的内容：页面顶部有一个大标题，写着“这是一个”，h1，其中H代表标题，1代表最大的可能标题，实际上HTML提供了许多不同的标签，我们可以用来创建不同大小的标题。
- en: '![](img/7be82e6347afae50c0689d25a513a49f_16.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_16.png)'
- en: various sizes so for example I could，also say h2 inside of which I say this。is
    a smaller heading if h1 is the。![](img/7be82e6347afae50c0689d25a513a49f_18.png)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 所以例如，我也可以说h2，里面我说这是一个较小的标题，如果h1是！[](img/7be82e6347afae50c0689d25a513a49f_18.png)。
- en: largest heading h2 is the second-largest，heading so if I load this page for。example
    I now see the h1 at the very top，this is the big heading and then beneath。that
    I see this is a smaller heading the。![](img/7be82e6347afae50c0689d25a513a49f_20.png)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最大的标题h2是第二大的标题，因此如果我加载这个页面，例如，我现在看到最顶部的h1，这是大标题，然后在下面我看到“这是一个较小的标题”。！[](img/7be82e6347afae50c0689d25a513a49f_20.png)
- en: h2 and it turns out there's also h3 h4。![](img/7be82e6347afae50c0689d25a513a49f_22.png)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: h2，结果发现还有h3、h4。！[](img/7be82e6347afae50c0689d25a513a49f_22.png)
- en: h5 all the way down to h6 which is the，smallest heading such that if I load。![](img/7be82e6347afae50c0689d25a513a49f_24.png)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: h5一直到h6是最小的标题，因此如果我加载！[](img/7be82e6347afae50c0689d25a513a49f_24.png)。
- en: this page now I have a big heading a，smaller one and then here's the smallest。so
    we can often use these h1 h2 h3 tags，just for visually organizing text inside。of
    a page if I want the title of the，page but also I want titles for each of。the
    various different sections and，subsections that might be contained。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我有一个大标题，一个较小的标题，还有一个最小的标题。因此，我们通常可以使用这些h1、h2、h3标签来视觉上组织页面内的文本，如果我想要页面的标题，但同时也希望为各种不同的部分和子部分提供标题。
- en: within that page as well so those are，headings and now let's also take a look。at
    some other elements that we might，want to add on webpages we see not just。titles
    and not just text but we might，also see lists for example like if。you've ever
    used a to-do list program on，a web page for example you might see a。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 该页面中的内容也是如此，所以那些是。标题，现在我们也来看看一些我们可能想要添加到网页上的其他元素。我们看到的不仅仅是标题，不仅是文本，还有。可能也会看到列表，例如，如果你曾经在网页上使用待办事项列表程序，你可能会看到一个。
- en: list of things that you need to do or，other web pages might display lists of。information
    and it turns out that HTML，has two basic types of Lists we have。ordered lists
    for things that are in a，particular order like item number one。item number two
    item number three and we，have unordered lists for lists that。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 需要做的事情或其他网页可能会显示信息列表。事实证明，HTML有两种基本类型的列表，我们有。用于特定顺序的有序列表，比如项目编号一。项目编号二，项目编号三，而我们则有无序列表。
- en: don't have any particular order so just，bullet point bullet point bullet points。for
    example and both are quite easy to，use I'll go ahead and create a new file。and
    we'll call this lists dot html' and，again in list of HTML I'll copy the same。structure
    from hello dot HTML we're，again going to have doctype HTML just to。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 没有任何特定顺序，所以只是项目符号项目符号项目符号。作为例子，两者都非常容易使用。我将创建一个新文件。我们称之为lists dot html，再次在HTML列表中，我将复制来自hello
    dot HTML的相同。结构，我们将再次使用doctype HTML。
- en: indicate the version of HTML most of the，heading is the same I'm just going
    to。change the title from hello to lists and，then we're going to replace the body
    of。this page to show some different，information here so let me first show。what
    an ordered list might look like，something that has numbers 1 2 3 and。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 表示HTML的版本大部分，标题是一样的，我只是要。将标题从hello更改为lists，然后我们将替换页面的主体。以显示一些不同的信息，所以让我先展示。一个有序列表可能是什么样子，带有数字1
    2 3。
- en: ordered lists as an HTML tag is just oh，L o L for ordered list so I can add
    a。tag that says o L and now inside of my，oh L element my ordered list element
    I。need a new element for every list item，list item we're going to abbreviate to。just
    Li so the Li tag in HTML is what，we're going to use to designate an item。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有序列表作为HTML标签就是哦，L o L代表有序列表，所以我可以添加一个。标签说o L，现在在我的哦 L元素内部，我需要为每个列表项添加一个新元素。我们将列表项缩写为。Li，所以HTML中的Li标签是我们。用来指定项目的标签。
- en: inside of an HTML list so here for，example I could say Li and then first。item
    and then I could do the same thing。![](img/7be82e6347afae50c0689d25a513a49f_26.png)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML列表内部，所以在这里，例如我可以说Li，然后第一个。项目，然后我可以做同样的事情。![](img/7be82e6347afae50c0689d25a513a49f_26.png)
- en: Li second item and then again Li third，item so what I have here are some。elements
    and then elements nested within，other elements I have an ordered list。element
    inside of which are three other，HTML elements three list items that are。each indicating
    each of the individual，items that are inside of my HTML list I。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Li第二个项目，然后再次Li第三个项目，所以我在这里有一些。元素，然后元素嵌套在其他元素内，我有一个有序列表。元素，其中有三个其他的HTML元素，三个列表项，分别指示每一个。单独的项目，这些项目都在我的HTML列表内。
- en: can open this up by opening lists HTML，and this is what I see I see an ordered。list
    where I have item number one first，item second item third item note that I。didn't
    actually need to in the HTML，anywhere specify the number one the。number two in
    the number three when the，my web browser reads this should be an。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过打开lists HTML来打开它，这就是我所看到的，我看到一个有序。列表，其中有项目编号一，第一个项目，第二个项目，第三个项目，注意到我。实际上不需要在HTML中指定数字一、数字二和数字三，当我的。网页浏览器读取时，应该是一个。
- en: ordered list my web browser Chrome in，this case just adds those numbers in for。me
    because it knows what an ordered list，means and it knows how to take the HTML。![](img/7be82e6347afae50c0689d25a513a49f_28.png)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的网页浏览器Chrome中，这个例子只是为我添加了那些数字。因为它知道有序列表意味着什么，也知道如何处理HTML。![](img/7be82e6347afae50c0689d25a513a49f_28.png)
- en: that I've written and display it in the，way that I intend to to the user now
    in。addition to ordered lists that all have，numbers 1 2 3 we also have unordered。lists
    that are just bullet points bullet，points of information so I could up。above add
    some more content to this HTML，page I can say here is an unordered list。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我写的内容并以我意图的方式展示给用户。现在除了所有有数字1 2 3的有序列表，我们还有。无序列表，只是项目符号的信息，所以我可以在上面。再添加一些内容到这个HTML页面，我可以说这是一个无序列表。
- en: and just as an ordered list we，represented using the Oh，I'll tag in HTML Oh
    L standing for。ordered lists likewise we can use the UL，tag in HTML to create
    an unordered list。you for unordered so here we're gonna，add a UL tag and again
    my text entered。here is automatically adding the closing，tag here this / UL meaning
    the end of。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们使用`O`标签表示有序列表一样，`O`表示有序列表，我们同样可以在HTML中使用`UL`标签创建无序列表。所以这里我们将添加一个`UL`标签，我的文本编辑器这里会自动添加关闭标签`/UL`，表示结束。
- en: the unordered list and many text editors，will do this now just so you the。programmer
    don't forget to add that and，now inside of this unordered list we're。again going
    to have some list items also，using the li tag here is one item and。here is another
    item and here is yet。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 无序列表，许多文本编辑器现在会这样做，只是为了让你这个程序员记得添加，现在在这个无序列表中，我们又将有一些列表项，也使用`li`标签，这里是一个项目，这里是另一个项目，这里还有一个。
- en: '![](img/7be82e6347afae50c0689d25a513a49f_30.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_30.png)'
- en: another item if I go ahead and refresh。![](img/7be82e6347afae50c0689d25a513a49f_32.png)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个项目，如果我继续刷新。![](img/7be82e6347afae50c0689d25a513a49f_32.png)
- en: the page now I'm still on list dot HTML，I now see that on top of my ordered
    list。I have an unordered list where each item，instead of being numbered 1 2 3
    is。instead labeled with just bullet point，bullet point bullet point where each
    of。these bullet points in each of these，numbered items is a list item element
    or。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我仍然在`list.html`中，我现在看到在我的有序列表顶部，有一个无序列表，其中每个项目不是编号1、2、3，而是仅用项目符号标记，项目符号、项目符号、项目符号，其中每个这些项目符号以及这些编号项目都是一个列表项元素。
- en: in Li so hopefully now we can see that，as we start to explore these various。different
    HTML tags and nesting HTML，tags inside of one another，we're able to create more
    and more。interesting webpages as a result so，let's explore now what other types
    of。web pages we can create using other，types of HTML elements in addition to。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在Li中，希望现在我们可以看到，当我们开始探索这些不同的HTML标签，以及将HTML标签嵌套在彼此内部时，我们能够创建越来越多有趣的网页。因此，让我们现在探索一下我们可以使用其他HTML元素创建的其他类型网页。
- en: lists one thing you might imagine is，that one of the important things on the。web
    is not just displaying text but also，displaying other types of media like。images
    for example so how might we go，about doing that well I can for example。let's go
    back into my text editor let me，create a new file that I'm going to call。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中你可能想象的事情之一是，网页上重要的事情不仅是显示文本，还包括显示其他类型的媒体，比如图像。那么，我们该如何做到这一点呢？我可以，例如，回到我的文本编辑器，创建一个新的文件，我将称之为。
- en: image dot HTML which is going to contain，some code for displaying some images。I'll
    go ahead and go into hello dot HTML，and copy this text into the page again。change
    the title to image and now inside，of the body I'm going to add a new tag。called
    image and the image tag has a，couple of required attributes remember。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`image.html`将包含一些显示图像的代码。我将进入`hello.html`，并将这段文本复制到页面中，再次将标题改为图像，现在在正文中，我将添加一个新的标签，称为图像，图像标签有几个必需属性，请记住。'
- en: that attributes are what we saw before，things like adding a Lang equals en to。the
    top of my page to indicate that this，web page is written in English for。example
    and the image tag has a couple，of required attributes that I need to。add in particular
    when I display an，image on the page I need to specify。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 属性就是我们之前看到的内容，比如在页面顶部添加`Lang equals en`以指示该网页是用英语编写的。例如，图片标签有几个我需要添加的必需属性，尤其是在我页面上显示图像时，我需要指定。
- en: image I actually want displayed for，example so I might specify image SRC。short
    for source is going to be equal to，what image do I actually want to display。on
    this page and it just so happens that，inside of my folder where I have image。dot
    HTML I have an image called cat jpg，so I'm just going to specify cat jpg as。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上我想显示的图像，例如，我可能会指定图像`SRC`，它是`source`的缩写，将等于我实际想在此页面上显示的图像。碰巧的是，在我的文件夹中，包含`image.html`，我有一张名为`cat.jpg`的图像，所以我将指定`cat.jpg`作为。
- en: the file name of the image that I want，to display and it turns out that images。also
    have a second required attribute in，addition to the file name or the link to。whatever
    image I want to display I also，need to provide a some alternative text。a text
    based representation of what，you're going to see on the image because。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我想显示的图像的文件名，结果是图像除了文件名或我想显示的任何图像的链接外，还需要提供一些替代文本，即图像的文本表示，因为。
- en: in some cases some web browser might not，be able to render the image correctly。you
    might imagine if there's some error，rendering the image or if someone's on a。slow
    internet connection or if someone's，using a screen reader and therefore。can't
    actually see the image we want，some text-based representation of that。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，一些网页浏览器可能无法正确呈现图像。你可以想象，如果图像呈现时出错，或者某人使用较慢的互联网连接，或某人正在使用屏幕阅读器，因此无法实际看到图像，我们希望有一些基于文本的表示。
- en: image as well and so I'll provide some，alt text some alternative text that can。be
    used to substitute the image in case，for some reason we can't display the。image
    and the alt text that I'll use in，this case is just going to be the word。cat for
    example and that's all I need，now notice in particular there's。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图像也是如此，因此我会提供一些替代文本，以便在某种情况下无法显示图像时，可以用来替代图像，而我在这种情况下使用的替代文本仅仅是“cat”这个词，这就是我需要的全部。请特别注意这里有。
- en: something a little bit different about，this image tag compared to other tags。that
    we've seen before in the sense that，it doesn't have a closing tag in the。sense
    that the body had a beginning of，the body and an end of the body and our。ordered
    list had a beginning of the，ordered list in the end of the ordered。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图像标签与我们之前看到的其他标签有一点不同，因为它没有关闭标签，意思是主体有开始和结束，顺序列表有开始和结束。
- en: list with list items in between it，doesn't really make sense。for for an image
    for example to have the，beginning of the image and the end of。the image and some
    content in-between，because the image is just a single HTML。element that can't
    really have anything，inside of it so in that sense we don't。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中有列表项之间，这对于图像来说并没有真正意义。例如，图像的开始和结束以及一些内容在中间，因为图像只是一个单独的HTML元素，里面并不能有任何东西，所以从这个意义上说我们不需要。
- en: actually need a closing image tag the，image tag is self closing it is its own。beginning
    and end so we can just say we，want an image to be here that is cat jpg。with an
    alternative text of just the，word cat for example so now if I open up。image dot
    HTML will see that what gets，loaded is quite large a picture of a cat。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上不需要关闭图像标签，图像标签是自闭合的，它是自己的开始和结束，因此我们可以说我们想要在这里放一个图像，那就是cat jpg，替代文本仅仅是“cat”这个词。因此现在如果我打开image.html，会看到加载的是一张相当大的猫的照片。
- en: and I can scroll around and see this，entire image of course this picture of
    a。cat is probably larger than I wanted it，to be I probably when I my user business。web
    page I don't want them to have to，scroll all the way to the right in order。to
    see the entire cat so I can actually，add additional HTML attributes in order。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以滚动查看整个图像，当然这张猫的照片可能比我想要的要大，我在用户的业务网页上，可能不希望他们需要向右滚动才能看到整只猫，因此我实际上可以添加额外的HTML属性。
- en: to modify the size of the image that I'm，displaying and later we'll see we can。use
    CSS to do a similar thing as well，but for now what I can add is an。additional
    attribute and say that let me，give cat jpg this image tag another。attribute but
    in this case I'll just，call width and I'll say that width is。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 修改我正在显示的图像的大小，稍后我们将看到我们也可以使用CSS来做类似的事情，但现在我可以添加一个额外的属性，并说让我给这个图像标签另一个属性，但在这种情况下我只会称之为宽度，并且我会说宽度是。
- en: going to be equal to 300 because I would。![](img/7be82e6347afae50c0689d25a513a49f_34.png)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 将等于300，因为我会。![](img/7be82e6347afae50c0689d25a513a49f_34.png)
- en: like for this image to be 300 pixels，wide for example so now if i refresh。this
    page I now see that the same cat，image appears except now it appears at。![](img/7be82e6347afae50c0689d25a513a49f_36.png)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，现在如果我刷新这个页面，我会看到同一只猫的图像出现，除了现在它的显示为！[](img/7be82e6347afae50c0689d25a513a49f_36.png)。
- en: 300 pixels wide exactly so I'm able to，add additional attributes additional。information
    to control how an HTML，element is going to appear in this case。I want to control
    its width and it，automatically scales down the height to。make sure that the image
    is proportional，as well now on the Internet in addition。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 宽度正好是300像素，所以我可以添加额外的属性，额外的信息来控制HTML元素在这种情况下的显示方式。我想控制它的宽度，并且它会自动缩小高度，以确保图像的比例也合适。现在在互联网上，我希望这个图像的宽度是300像素。
- en: to just displaying information on a，single page it's also common for a page。to
    link to other pages in fact that's，one of the main important values of the。Internet
    is the ability to go from one，page to another via these links and so。one thing
    we might reasonably want to do，is add some links to our page where if。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅仅是在单一页面上展示信息，页面链接到其他页面也是很常见的。实际上，这是互联网的一个主要价值之一，即通过这些链接从一个页面跳转到另一个页面。因此，我们可能合理地想在我们的页面上添加一些链接，这样如果。
- en: you click on something you're taken to，another page altogether so let's take
    a。look at an example of that I'll create a，new file based on hello dot HTML and。I'll
    add Lang equals English for good，measure and I'll call this new file link。dot
    HTML we're here we're going to，practice with building some links into。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你点击某个东西时，你会被带到另一个页面。因此，让我们看一个例子，我将基于 hello.dot HTML 创建一个新文件，并且我将添加 Lang 等于 English，以确保万无一失，并将这个新文件命名为
    link.dot HTML。在这里，我们将练习构建一些链接。
- en: our HTML page I'll copy the content of，hello dot HTML again call this link and。in
    order to create a link I'm going to，use a tag called the a tag short for the。anchor
    tag and the a tag takes one，important attribute which is called H。ref for hyperlink
    reference which is，going to specify what page I would like。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 HTML 页面中，我将再次复制 hello.dot HTML 的内容，调用这个链接。为了创建一个链接，我将使用一个叫做 a 标签的标签，它是锚点标签的缩写，而
    a 标签有一个重要属性，称为 H.ref，即超链接引用，它将指定我想要的页面。
- en: to link to so if for example I wanted，when a user clicks on this link to go
    to。Google calm then I'd set the href，attribute of this tag equal to HTTP，colon
    slash slash google。com for example，then inside of the a tag I would specify，what
    text I want to display what text。should the user see。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 链接到的地方，例如，如果我希望当用户点击这个链接时去 Google.com，那么我会将这个标签的 href 属性设置为 HTTP://google.com。例如，然后在
    a 标签内部，我会指定我想要显示的文本，用户应该看到什么文本。
- en: '![](img/7be82e6347afae50c0689d25a513a49f_38.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_38.png)'
- en: such that when the user clicks on that，text they're taken to the web page in。this
    case I'm just going to say，something like click here for instance。![](img/7be82e6347afae50c0689d25a513a49f_40.png)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，当用户点击那个文本时，他们会被带到网页。在这种情况下，我只是说，比如点击这里！[](img/7be82e6347afae50c0689d25a513a49f_40.png)
- en: now if I open up link HTML this is what，the user sees they see a blue link that。says
    click here and when the user does，click on that link they're taken to HTTP。colon
    slash slash Google comm and it，turns out that we can use this href。attribute not
    only to link to different。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我打开 link.html，这就是用户所看到的，他们看到一个蓝色链接，上面写着点击这里，当用户点击那个链接时，他们会被带到 HTTP://Google.com。事实证明，我们不仅可以使用这个
    href 属性链接到不同的。
- en: '![](img/7be82e6347afae50c0689d25a513a49f_42.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_42.png)'
- en: websites altogether but we can link to，different pages on the same website so。for
    example if I wanted to link to that，cat page that I designed a moment ago。instead
    of linking to Google com it。![](img/7be82e6347afae50c0689d25a513a49f_44.png)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 整个网站我们可以链接到同一网站上的不同页面。例如，如果我想链接到我刚刚设计的那个猫页面，而不是链接到 Google.com。![](img/7be82e6347afae50c0689d25a513a49f_44.png)
- en: instead just link to image dot HTML and，now if I save that and refresh or if
    I。open up link HTML again now I see a，click here link where when I click on。click
    here now I'm taken to that page。![](img/7be82e6347afae50c0689d25a513a49f_46.png)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 只是链接到 image.dot HTML，现在如果我保存并刷新，或者再次打开 link.html，现在我看到一个点击这里的链接，当我点击这里时，我就被带到了那个页面。![](img/7be82e6347afae50c0689d25a513a49f_46.png)
- en: cat image dot HTML that happen to have，that picture of the cat from before so。using
    these anchor tags and href，attributes we're able to link together。multiple pages
    so that if we have a，website that has many different web。pages we can connect
    them all together，by using a combination of these various。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: cat image.dot HTML 恰好有之前那只猫的图片。通过使用这些锚点标签和 href 属性，我们能够连接多个页面，以便如果我们有一个有许多不同网页的网站，我们可以通过使用这些不同的组合将它们全部连接起来。
- en: different links so now that we've seen，images and links and lists what other。HTML
    elements might we add to our web，page well one thing we might want to add。are
    things like tables just other ways，of displaying information so let's go。ahead
    and create a table and look at，what HTML elements we can use in order。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的链接，现在我们已经看到了图像、链接和列表，我们还可以在网页上添加哪些 HTML 元素呢？我们可能想要添加的一个东西是表格，就是以其他方式展示信息，所以让我们去创建一个表格，看看我们可以使用哪些
    HTML 元素。
- en: to do so so I'll go back here to my text，editor create a new file called table。dot
    HTML using the same starting HTML，we'll call this page title our table and。inside
    the body of this page now there，are a number of different HTML elements。that we'll
    need in order to create a，table because as you might imagine a。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我将回到我的文本编辑器，创建一个名为table。dot HTML的新文件，使用相同的起始HTML，我们将这页面标题定为我们的表格。在这个页面的主体内部，现在有许多不同的HTML元素。我们需要创建一个表格，因为你可能想象得到。
- en: table is really composed of multiple，parts we have our big table but each。table
    is really just a sequence of，individual table rows and each of those。rows is really
    just a sequence of，individual cells of data within that。table and so that's structure
    that we're，imagining a table that consists of。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 表格实际上是由多个部分组成，我们有一个大表格，但每个。表格实际上只是一个独立表格行的序列，而每一行。实际上只是一个独立数据单元的序列，在那个。表格中，这就是我们想象的一个由个别行组成的表格。
- en: individual rows where each row consists，of individual cells and is exactly how。we're
    going to represent this table in，eight，table tag that's going to represent the。entirety
    of this table but inside of the，table we might have different parts we。might have
    the heading of the table and，we'd have the body of the table so in。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 每一行由个别单元组成，这正是我们将用来在。表格标签中表示这个表格的方式，它将代表整个表格，但在。表格内部我们可能有不同的部分，我们。可能有表格的标题，还有表格的主体，因此在。
- en: order to represent that I'll add T head，that's going to stand for the heading
    of。the table the stuff at the top of the，table that might indicate what each。column
    of the table means for example，and let's see what columns do I want。well let's
    go ahead and add some table，headings which I can represent using the。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 为了表示这一点，我将添加T头，代表表格的标题，表格顶部的部分。可能指示每列的意义，例如，我想要什么列。好吧，让我们添加一些表格标题，我可以用。
- en: th tag H for heading and maybe I want in，this web page to display information。about
    various different oceans for，example so maybe I have one column for。the ocean
    and another column another，table heading for the average depth of。that ocean and
    another table heading for，the maximum depth of that ocean and。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: th标签代表标题，也许我想在。这个网页上展示关于各种不同海洋的信息。比如我有一列用于海洋，另一列是关于。那个海洋的平均深度的表格标题，还有一个表格标题是。那个海洋的最大深度。
- en: that'll be the very first row of that，table the heading of the table but in。addition
    to the heading of the table we，also have the body of the table so。underneath the
    tea head I'll go ahead，and include tea body body for the main。part of the table
    where all my data is，going to be and that body is going to。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是该表格的第一行，表格的标题，但除了。表格的标题，我们还有表格的主体。因此在茶头下面，我将包括茶主体，作为表格的主要部分，所有数据将在这里。
- en: consist of individual rows of a table so，I might have a TR which here stands
    for。table row and the inside of this table，row we'll go ahead and add some。individual
    data points inside of the，table so inside of my table row I'm。gonna have one table
    data point or TD，for table data that says Pacific Ocean。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 由表格的个别行组成，因此我可能有一个TR，这里代表。表格行，在这个表格行内部，我们将添加一些。独立的数据点。所以在我的表格行中，我将有一个表格数据点或TD，表示太平洋。
- en: for example then another table data that，says four thousand two hundred and。eighty
    meters and then another one for，the maximum depth of the Pacific Ocean。which is
    ten thousand nine hundred and，eleven meters and in fact this these。three table
    heads as well at the top of，the page the ocean the average depth in。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，另一个表格数据是四千二百八十米，还有一个是。太平洋的最大深度，即一万九千一百一十米。实际上，这三个表头也在页面顶部，海洋的平均深度在。
- en: the maximum depth those should actually，probably be in a row of their own as。well
    because the very first part of the，table that is also a row so I'll go。ahead and
    add a TR short for table row，and inside of that TR put these headings。I'll go
    ahead and add one more row just，so we can see what this looks like and。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 最大深度时，这些部分也应该可能在各自的行中。因为表格的第一部分也是一行，所以我将。添加一个TR，代表表格行，里面放这些标题。我将再添加一行，这样我们可以看看这看起来是什么样的。
- en: then we'll take a look at the page and，then go back to this code I'll add the。![](img/7be82e6347afae50c0689d25a513a49f_48.png)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将查看页面，然后回到这段代码，我将添加。![](img/7be82e6347afae50c0689d25a513a49f_48.png)
- en: Atlantic Ocean to which has an average，depth of three thousand six hundred and。forty
    six meters as well as a maximum，eighty。![](img/7be82e6347afae50c0689d25a513a49f_50.png)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 大西洋的平均深度为三千六百四十六米，最大深度为八十米。![](img/7be82e6347afae50c0689d25a513a49f_50.png)
- en: meters as well so when I open up table，dot html' now here's what I'm going to。see
    I'm going to see a table like，representation of the data it's not just。one thing
    after another after another，anymore it's structured in a table now。granted there
    aren't any borders and I，could probably add some colors and。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 米，所以当我打开'table，dot html'时，现在我会看到一个表格，这个数据的表现形式不再是。一个接一个的，而是以表格的形式结构化了。可以说，现在没有任何边框，我可能还可以添加一些颜色。
- en: '![](img/7be82e6347afae50c0689d25a513a49f_52.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7be82e6347afae50c0689d25a513a49f_52.png)'
- en: spacing to make this look a little bit，nicer but I see three columns。Oshin average
    depth and maximum depth，where this very first row is what we。might call the table
    header the very top，of the table that's defining what all of。the columns mean
    inside of that table，header is a single table row that has。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 空间布局使其看起来更美观，但我看到有三列。海洋的平均深度和最大深度，其中第一行被称为表头，表格的顶部，定义了表中所有列的含义，表头中有一个单一的表格行。
- en: three table data cells ocean average，depth and maximum depth then beneath。this
    table header represented in bold is，the tables body or the tea body element。inside
    of which we had two rows one for，representing the Pacific Ocean one for。representing
    the Atlantic Ocean and then，we had data cells in each one of those。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 三个表格数据单元格：海洋的平均深度和最大深度，然后在。这个以粗体表示的表头下，是表格的主体或者说是茶主体元素。里面有两行，一行代表太平洋，一行代表大西洋，然后每一行中都有数据单元格。
- en: rows for representing each of the，individual cells that's located within。this
    table so this is what that page，ultimately looks like and let's take one。more
    look at the HTML just to get an，understanding for how all of these tags。and interact
    with one another and no，need to memorize all these tags right。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 行中代表每一个单独的单元格，这些单元格位于。这个表格中，因此，这就是那个页面，最终的样子。让我们再看一眼HTML，以便了解这些标签是如何相互作用的，不需要记住所有这些标签。
- en: now slowly as you begin to design HTML，pages you'll start to get more familiar。with
    what HTML tags are available to you，and certainly all of these HTML tags are。things
    that are easy to reference if you，need to look them up it's very helpful。to be
    able to look up something like how，do I create a table in HTML and then。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你慢慢开始设计HTML页面，你会变得越来越熟悉。可供你使用的HTML标签，当然，这些HTML标签都很容易查找，如果你需要查找的话，查找如何在HTML中创建表格非常有用。
- en: you'll be able to see what the various，different tags you'll need to add are
    in。order to generate the table that you're，looking for but again just to recap
    here。we have a table element inside of which，are two child elements tea head and
    tea。body inside of each of those are one or，more table rows representing using
    TR。
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你将能够看到生成所需表格的各种不同标签是什么。但再次回顾一下，我们有一个表格元素，里面有两个子元素：茶头和茶。主体，每个里面都有一个或多个表格行，使用TR表示。
- en: inside of each of those are three table，data cells representing using TD and
    so。using these nested tags elements inside，of elements inside of other elements。we've
    been able to build something far，more complex than just a bulleted list。we've
    been able to build an entire table，that has information as well but。
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个表格中都有三个数据单元格，使用TD表示。因此，利用这些嵌套标签，元素嵌套在其他元素内部。我们能够构建出比简单的项目符号列表更复杂的内容，构建出一个包含信息的完整表格。
- en: ultimately our webpages should be，webpages that don't just display。information
    but that also let users，interact with that information in some，way。example you
    might imagine that on，Google's homepage for example it's not。just unchanging there's
    a field where I，can type something in and any time users。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们的网页应该不仅仅是展示。信息，而是让用户以某种方式与这些信息进行互动。举例来说，你可能想象，在谷歌的主页上，它并不是一成不变的，而是有一个可以输入内容的字段，任何时候用户都可以。
- en: can provide input to a webpage we，generally call that a forum or some。place
    where a user can fill out a form，in order to provide information to the。webpage
    and so now let's take a look at，how we can use HTML in order to create a。form
    that's going to display some，information so I'll go ahead and create。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 用户向网页提供输入，我们通常称之为论坛或某个用户可以填写表单以向网页提供信息的地方。那么现在我们来看看，如何使用 HTML 来创建一个将显示某些信息的表单。我将继续创建。
- en: a new page called form HTML again using，that same HTML as before call the page。form
    and inside of the body of this page，now let's say that I want to create a。form
    that gives the user an opportunity，to provide their full name for example。how
    do I do that well the first thing I，need is a form element some way of。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 再创建一个新的页面，叫做表单 HTML，使用之前相同的 HTML，命名该页面为表单。在这个页面的主体内部，现在假设我想创建一个表单，给用户提供填写全名的机会。例如，我该怎么做呢？首先我需要一个表单元素，也就是某种方式。
- en: saying here is going to be a form and，now inside of that form what are the。various
    different parts of the form well，there's really two parts that you might。imagine
    to this form one is a place for，the user to actually type in their name。and they
    probably also need some way to，submit the form some button that just。
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这里所说的将是一种表单，而现在在这个表单内部，表单的不同部分是什么呢？实际上，你可以想象这个表单有两个部分，一个是供用户实际输入他们的名字的地方，他们可能还需要某种方式来提交表单，比如一个按钮。
- en: says submit such that they can click on，that button in order to submit the form。so
    how would we do that well in order to，create an input field we're going to use。an
    input tag whose type in this case is，going to be text there are a number of。different
    ways the users might provide，input to a forum they might type in text。
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 说到提交，这样他们就可以点击那个按钮来提交表单。那么我们该怎么做呢？为了创建一个输入字段，我们将使用一个输入标签，在这种情况下，它的类型将是文本。用户可能会以多种方式向论坛提供输入，他们可能会输入文本。
- en: they might choose from a drop-down menu，they might choose from a radio button。option
    or they might provide input s by，clicking on a button for example in this。case
    we're specifically using the type，attribute to say that when the user is。providing
    input in this way the type of，input that they're providing is going to。
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可能会从下拉菜单中选择，或者可能会选择单选按钮选项，或者他们可能会通过点击按钮提供输入。例如在这种情况下，我们特别使用类型属性来说明，当用户以这种方式提供输入时，他们提供的输入类型将是。
- en: be some kind of text then we might，provide a placeholder some default text。that's
    going to be inside of that input，field the first time the user looks at。the page
    so for example the placeholder，might be full name that way the user。knows that
    what they should type into，this place well into this placeholder is。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 可能是某种文本，我们可以提供一个占位符，即用户第一次查看页面时，输入字段内的默认文本。例如，占位符可以是全名，这样用户就知道他们应该在这个地方，也就是占位符中输入什么。
- en: their own full name and then finally，we're going to go ahead and give a name。to
    this input field now this isn't going，to be something that the user sees when。they
    visit the page but anytime you，submit a form when we receive that form。in our
    web application something we'll，explore later on we need some way。
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的全名，最后我们将给这个输入字段命名。虽然用户在访问页面时看不到这个名字，但每当你提交一个表单，我们在网络应用程序中接收到该表单时，这就是我们稍后会探讨的内容，我们需要某种方式。
- en: knowing which input field correspondent，to which value and so we're going to。name
    each of the input fields just so，that later on we'll be able to reference。them
    and for now since the user is，typing their full name here we could。just name this
    full name or we could，more succinctly just say name as the。
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 知道哪个输入字段对应哪个值，因此我们将为每个输入字段命名，这样稍后我们就能引用它们。现在由于用户在这里输入他们的全名，我们可以简单地命名为全名，或者更简洁地说成名字。
- en: name of this input field after that we，have an input field where the user can。type
    in their name and now we need some，way for the user to be able to submit。this
    form so we might say something like。![](img/7be82e6347afae50c0689d25a513a49f_54.png)
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输入字段的名称之后，我们有一个输入字段，用户可以在其中输入他们的名字，现在我们需要某种方式让用户能够提交这个表单，所以我们可能会说一些类似于！[](img/7be82e6347afae50c0689d25a513a49f_54.png)
- en: input type equals submit to say here is，a way for the user to submit the form。type
    equals submit means this is how，they're going to submit the form when。![](img/7be82e6347afae50c0689d25a513a49f_56.png)
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 输入类型等于提交，表示这是用户提交表单的一种方式。类型等于提交意味着这是他们提交表单的方式，当！[](img/7be82e6347afae50c0689d25a513a49f_56.png)
- en: they're done completing it now if I open，up form HTML this is the page that
    we're。ultimately going to see when we load，this HTML this entire page just contains。a
    single HTML form but that HTML form，contains two parts the first part was。this
    input element here that allowed an，opportunity for the user to type in。
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 他们现在完成了，如果我打开HTML，这就是我们最终在加载这个HTML时会看到的页面，这整页只包含一个单独的HTML表单，但这个HTML表单包含两个部分，第一部分是这个输入元素，允许用户输入。
- en: their full name they type in their full，name into this input field and when。they're
    done they can click the submit，button to indicate that they would like。to now
    submit this form of course right，now this form isn't going to do anything。when
    we type in our name and click，Submit because we haven't added in a。
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的全名，他们在这个输入字段中输入他们的全名，当他们完成时，可以点击提交按钮以表示他们希望提交这个表单，当然，现在这个表单在我们输入名字并点击提交时并不会做任何事情，因为我们还没有添加。
- en: logic in order to handle this form but，later on as we transition into the world。of
    building web applications using，Python we'll see how we can design a。form such
    that after the user submits it，we save information to a database or。display some
    sort of results back to the，user all by using the power of building。
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 处理这个表单的逻辑，但稍后当我们过渡到使用Python构建网页应用程序的世界时，我们将看到如何设计一个表单，以便在用户提交后，我们将信息保存到数据库或向用户显示某种结果，所有这些都是通过构建的力量实现的。
- en: these web applications and connecting，them to these sorts of HTML forms and。HTML
    forms can actually get quite a bit，more complex we'll take a look at。another example
    for instance let me open，up forms one form one dot HTML which is。a form that I
    built in advance which，shows a number of other ways that users。
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这些网页应用程序并将它们连接到这些HTML表单，HTML表单实际上可以变得相当复杂，我们将查看另一个例子，例如让我打开forms1.html，这是我提前构建的一个表单，展示用户的其他多种输入方式。
- en: can provide information as input to an，HTML form here we see an input whose。type
    is text meaning we want the user to，type in their name as text but you might。also
    imagine that if a user is logging，in to a website for example they might。in addition
    to typing in a text-based，name or username or email also provide a。
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 可以作为输入提供信息的HTML表单，这里我们看到一个输入，其类型为文本，意味着我们希望用户以文本形式输入他们的名字，但你可能还想象到，如果用户登录一个网站，他们可能除了输入基于文本的名字、用户名或电子邮件外，还会提供一个。
- en: password and generally if you've been on，a web site and you've typed in a。password
    the password characters don't，all show up as the actual character。for security
    reasons they generally show，up as just little dots on the screen。hiding the actual
    characters that，they're representing and in HTML we can。
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 密码，通常如果你在一个网站上输入过密码，密码字符不会全部以实际字符显示。出于安全原因，它们通常只会以小点的形式出现在屏幕上，隐藏它们所代表的实际字符，在HTML中我们可以。
- en: do that very easily by just saying that，the type of this input is password if。they're
    typing in a password our web，browser will know not to actually。display those individual
    characters in，addition to just text-based input we。also have radio button input
    as I，alluded to a moment ago so here we have。
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以非常简单地做到这一点，只需将这个输入的类型设为密码，如果他们正在输入密码，我们的网页浏览器会知道不实际显示这些字符，除了基于文本的输入，我们还有单选按钮输入，正如我刚才提到的，这里我们有。
- en: a number of different radio inputs where，the user might be able to select from
    a。number of options choosing their，favorite color for example from a number。of
    these options and finally just to，take it what look at one other。additional feature
    of html5 in fact a，new feature of html5 is something we。
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 多个不同的单选输入，用户可以从多个选项中选择，例如选择他们喜欢的颜色，最后，再来看一个HTML5的其他附加功能，实际上，HTML5的新功能是我们。
- en: might call a data list where we might，have the user choose in a drop-down from。a
    number of different options but we，want to very quickly filter down or。autocomplete
    based on those options so，if the user needs to select what country。they're from
    for example we might have，an input field and specify that it's。
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会称之为数据列表，用户可以从多个不同的选项中选择，但我们希望能很快地根据这些选项进行筛选或自动完成，因此如果用户需要选择他们来自哪个国家，例如，我们可能会有一个输入字段，并指定它是。
- en: going to be associated with a list，called countries then immediately below。that
    I have a data list element whose，ideas countries where here I'm going to。specify
    these are all of the options for，what country we could have each one is。inside
    of an option element whose value，is whatever country they could select。
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这将与一个称为国家的列表关联，然后在下面，我有一个数据列表元素，其思想是这里我要指定的都是我们可以选择的国家选项，每一个都在一个选项元素内部，其值是他们可以选择的国家。
- en: and we have all of the countries of the。![](img/7be82e6347afae50c0689d25a513a49f_58.png)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 而我们有所有的国家。![](img/7be82e6347afae50c0689d25a513a49f_58.png)
- en: world listed in these option elements so，this input here is going to allow me
    to。select one option from a list of all of，these possible options so now if I
    open。up form one dot HTML here's what that，form ultimately looks like I can here。inside
    of the name field again that word，name shows up because it's the place。
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 列出在这些选项元素中的世界，因此这里的输入将允许我从所有这些可能的选项中选择一个选项，现在如果我打开 form1.html，这就是这个表单的最终样子，我可以在名称字段内部再次看到那个单词名称，因为它是占位符。
- en: holder I can type in my name here and，inside of the password field anything
    I。type is going to show up as just little，dots instead of the actual characters。because
    the type of that input field was，password instead of the type being text。in favorite
    color I now have the ability，to choose between various different。
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以在这里输入我的名字，而在密码字段中，我输入的任何内容都将显示为小点，而不是实际字符，因为该输入字段的类型是密码，而不是文本类型。在最爱颜色中，我现在可以选择不同的选项。
- en: favorite color options in a radio button，format I choose from one of a number
    of。options and finally inside this country，drop-down I have the ability now when
    I。click on it to see all of the countries，but as I start to type letters like
    you，and。it filters down to only the options that，I actually care about so here
    if I type。
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 最爱颜色选项以单选按钮格式，我可以从多个选项中选择，最后在这个国家下拉菜单中，当我点击它时，我现在能够看到所有的国家，但当我开始输入字母时，比如说你，它会过滤到我实际关心的选项，所以如果我输入。
- en: in enough letters eventually I see。![](img/7be82e6347afae50c0689d25a513a49f_60.png)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 最终我看到足够的字母。![](img/7be82e6347afae50c0689d25a513a49f_60.png)
- en: United States and I can click on that，option as well so html5 builds in these。additional
    features to make it easy to，implement something like a text field。where it will
    autocomplete based on the，text that you provide you can just。specify that it is
    inside of this data，list and then provide a list of all the。
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 美国，我也可以点击那个选项，因此 HTML5 内置了这些额外的功能，使得实现像文本字段这样的东西变得容易，它会根据你提供的文本进行自动补全，你只需指定它在这个数据列表内部，然后提供所有的。
- en: possible values and then HTML and your，web browser intern will take care of
    the。process of rendering that information in，the way that you expect it to be。displayed
    so those are just some of the，possible HTML elements that we can。ultimately create
    by using these various，different elements that we nest within。
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 可能的值，然后 HTML 以及你的网页浏览器将处理将这些信息渲染为你期望显示的方式，因此这些只是我们最终可以通过使用这些各种不同元素来创建的一些可能的
    HTML 元素，它们彼此嵌套。
- en: each other and there are definitely，other HTML elements that exist as well。you
    can begin to explore but all of them，follow a very similar pattern that we're。going
    to have some tag that might，require some attributes additional。information about
    the HTML to give，context to the web browser for how that。
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他 HTML 元素也存在。你可以开始探索，但它们都遵循非常相似的模式，我们将有一些标签可能需要一些属性以及有关 HTML 的附加信息，以便为网页浏览器提供上下文。
- en: element should be displayed，maybe that element needs to have a。particular source
    for an image maybe it，needs a link in order if the link to。somewhere or other
    information as well，and then inside of that element。you might nest other elements
    so that，your table has rows and inside of those。
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 元素应该被显示，也许那个元素需要有一个特定的图像来源，或者它需要一个链接以便连接到某个地方或其他信息，然后在那个元素内部，你可能会嵌套其他元素，这样你的表格就有行，而在这些行内部。
- en: rows we have other cells and you might。
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 行，我们还有其他单元格，你可能会。
