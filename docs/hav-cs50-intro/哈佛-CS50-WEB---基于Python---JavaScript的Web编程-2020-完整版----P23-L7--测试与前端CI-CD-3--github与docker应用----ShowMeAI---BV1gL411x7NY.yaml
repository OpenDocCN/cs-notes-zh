- en: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P23：L7- 测试与前端CI／CD 3 (github与docker应用)
    - ShowMeAI - BV1gL411x7NY
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P23：L7- 测试与前端CI／CD 3 (github与docker应用)
    - ShowMeAI - BV1gL411x7NY
- en: little bit easier what techniques can we，use in order to do so and there are
    a。number of different continuous，integration tools but one of them，produced by
    github more recently is。known as github actions and what github，actions allows
    us to do is to create。these workflows where we can say that，anytime for example
    someone pushes to a。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使其更简单，我们可以使用一些技术，市面上有多种持续集成工具，但其中之一是github最近推出的github actions。github actions允许我们创建这些工作流，例如我们可以说每当有人推送到一个github仓库时，我们会自动运行希望在该代码库上执行的任何测试。
- en: git repository I would like for certain，steps to take place certain steps that。might
    be like checking to make sure the，code is styled well but if a company has。some
    style guide that it expects all of，its programmers to adhere to when。working on
    a particular product you，could have a github action such that。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在git仓库中，我希望某些步骤能够进行，例如检查代码格式是否良好，如果公司有期望所有程序员遵循的样式指南，你可以设置一个github action。
- en: anytime someone pushes to a repository，you have an action that automatically。checks
    that code against the style guide，to make sure that it is well styled well。commented
    documented and so forth you，might also for instance have a github。action that
    tests our code to make sure，that any time any one pushes code to a。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每当有人推送到一个仓库时，你会有一个自动检查代码是否符合样式指南的动作，以确保代码格式良好、注释完整等。此外，你可能还会有一个github action来测试我们的代码，以确保每当有人推送代码时。
- en: github repository we automatically run，whatever tests we would like to。on that
    particular codebase and github，actions can allow us to do that as well。by defining
    some workflow to be able to，do so and so that's what we'll take a。look at in just
    a moment using github，actions to automate the process of。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: github actions可以通过定义某些工作流来实现这一点，所以我们稍后将使用github actions来自动化这一过程。
- en: running tests so that the human though，it would be a good thing for the。programmer
    when they're done writing，their code to test their code and make。sure it works
    we can enforce that by，making sure that every time anyone。pushes to a github repository
    will，automatically run some github action。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试的目的是为了让程序员在编写完代码后，能够测试自己的代码并确保其正常工作，我们可以通过确保每次有人推送到github仓库时，自动运行一些github操作来强制执行这一点。
- en: that is going to take care of the，process of running tests on that program。and
    we'll know immediately as via an，email that github might send to you to。say that
    this particular test failed and，you'll know every time you push to that。repository
    so how do these workflows get，structured what is the syntax of them。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这将处理在该程序上运行测试的过程，我们会立即通过github可能发送给你的电子邮件知道某个特定测试失败了，而你在每次推送到该仓库时都会知道。那么，这些工作流是如何结构化的，它们的语法是什么？
- en: will they use a particular type of，syntax known as llamo which is some。language
    a configuration language that，can be used in order to describe often。describe
    for configuration in various，different tools and software github。actions happens
    to use that other，technologies use it as well and yeah。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 它们使用一种称为llamo的特定语法，这是一种配置语言，可以用于描述各种不同工具和软件的配置，github actions恰好使用它，其他技术也在使用。
- en: Mille is a file format that structures，its data sort of like this in terms of。key
    value pairs much in the same way，that a JSON object or a Python。dictionary might
    where we'll have the，name of a key followed by a colon。followed by its value name
    of a key，followed by a colon followed by a value。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Mille是一种文件格式，其数据结构类似于键值对，类似于JSON对象或Python字典，格式是键的名称后跟冒号，然后是其值，键的名称后跟冒号，再后跟一个值。
- en: and the value doesn't necessarily need，to be just a single value it could be
    a。sequence of value it's like a list of，values for example and those are denoted。this
    way by like a - indicating a list，item 1 item 2 item 3 and in addition to。just
    having single values and lists of，items these ideas these lists these。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 值不一定只是一个单一的值，它可以是一个值的序列，比如值的列表，这些用“-”表示，指示列表项1、项2、项3，除了单个值和列表项之外，这些思想和列表也适用。
- en: sequences these values can be nested，within one another that you might have。one
    key that leads to another set of，keys that are associated with values。that leads
    to other sets of keys，associated with values as well much in。the same way that
    a JSON object like a，representation of keys and values can。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些值可以相互嵌套，你可能会有一个键指向另一组与值关联的键，导致其他与值关联的键集合，这与JSON对象的键值对表示方式非常相似。
- en: also have nested JSON objects within a，JSON object likewise too we can have。nested
    key value pairs and as the value，for a particular key - so we'll take a。look at
    an example of what that actually，looks like in the context of creating。some github
    workflow that will run some，github actions so what will that look。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在JSON对象中也可以有嵌套的JSON对象，同样，我们可以有嵌套的键值对，作为某个键的值 - 所以我们将看看在创建一些将运行一些GitHub Action的GitHub工作流时，这实际上是什么样子的。
- en: like let's go back into airline zero，we're here I've defined inside of a dot，github
    directory。a directory called workflows inside of，which I have a CI dot yml file
    it can be。any name llamo yml or dot YAML are the，conventional file extensions
    for a yamo。file and here I'll open up CI yml and，this now is the configuration
    for how。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，让我们回到airline zero，我在一个`.github`目录中定义了一个名为workflows的目录，在其中有一个CI.yml文件，文件名可以是任何名称，`.yml`或`.yaml`是YAML文件的传统扩展名。现在我将打开CI.yml，这就是如何。
- en: this workflow ought to behave I give the，workflow a name it's called testing。because
    what I want the workflow to do，is like test my airline application then。I specify
    an on key to mean when should，this workflow run and here I've said on。push meaning
    anytime someone pushes，their code to github we would like to。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工作流应该如何工作，我给工作流命名为testing，因为我想让工作流做的就是测试我的航空应用程序。然后我指定一个on键，表示这个工作流何时运行，我说在push时，意味着每当有人将代码推送到GitHub时，我们希望。
- en: run this workflow every workflow，consists of some jobs and so what are。the jobs
    what tasks should happen any，time that I try and push to this，repository。well
    I've defined a job called test，project and this is a name that I chose。for myself
    you can choose any name for a，job that you would like and now I need。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每次工作流运行时，包含一些作业，那么这些作业是什么？在我尝试推送到这个`repository`时，应该发生哪些任务。我定义了一个名为test的作业，这是我为自己选择的名称，你可以为作业选择任何名称，现在我需要。
- en: to specify two things for what happens，on a job one thing I need to specify
    is。what sort of machine is it going to run，on that github has its own virtual。machines
    of the wise known as VMs and I，would like to run this job on one of。those virtual
    machines and their virtual，machines for various different operating。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 指定两个事项，关于作业应该发生什么。第一件事是需要指定它将在什么机器上运行，GitHub有自己的虚拟机（VMs），我想在其中一台虚拟机上运行这个作业，它们支持不同的操作。
- en: systems and here I'm just saying go，ahead and run on the latest version of。Ubuntu
    which is a later version of Linux，that I would like for this test to run。on and
    then for the job I specify what，steps should happen where I can now。specify like
    what actions should happen，when someone tries to test the project。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 系统，这里我只是说继续在最新版本的Ubuntu上运行，这是我希望这个测试运行的最新Linux版本。接下来，我为作业指定应该发生的步骤，现在我可以指定当有人尝试测试项目时应该发生哪些操作。
- en: when I try and run this job and here I'm，using a particular github action and。this
    is a github action written by，github called actions a slash check out。and what
    this is going to do is it's，going to check out my code in the get。repository and
    allow me to like run，programs that operate on that code and。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当我尝试运行这个作业时，我在这里使用一个特定的GitHub Action，这是一个由GitHub编写的GitHub Action，名为actions/checkout。这将检出我在`repository`中的代码，并允许我运行在该代码上操作的程序。
- en: you can write your own github actions if，you would like but here all we really。need
    to do is go ahead and check out the，code as by looking at what's on the。branch
    that I just pushed to and then，I'm going to run Django unit tests this。is just
    a description for me to know，what's going on in this particular step。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意，可以编写自己的GitHub Actions，但我们现在需要做的就是检出代码，查看我刚刚推送到的分支，然后我将运行Django单元测试，这只是我知道在这一特定步骤中发生了什么的描述。
- en: and here is what I would like to run I'm，going to first go ahead and install。Django
    because I'm going to need to，install Django to be able to run all。these tests
    but after and if there are，other requirements I might need to。install those requirements
    as well but，the airline program is fairly simple all。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我想运行的内容是，我将首先安装**Django**，因为我需要安装Django来运行所有这些测试，但如果有其他需求，我可能还需要安装那些需求，不过航空程序相对简单。
- en: we really need in order to run the test，is just Django so I'll go ahead and。install
    Django and then I'll run Python，3 Manish PI test I would like to test。run all
    of the tests and the way I can，do that is just by providing this。managed up high
    command to say that I，would like to run all of the tests on。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们运行测试所需的只是Django，所以我将安装Django，然后运行`Python 3 Manish PI test`，我想测试所有测试，我可以通过提供这个`managed
    up high`命令来运行所有测试。
- en: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_1.png)'
- en: this particular application so this，configuration file altogether now is。going
    to specify a particular workflow，the workflow that says that every time I。push
    to the github repository what I，would like to happen is I would like to。check
    out my code inside of the get，repository so on some bun to VM github。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定应用的配置文件将指定一个工作流程，该工作流程表示每次我推送到GitHub仓库时，我希望的结果是检查我的代码。
- en: is going to check out my code and it's，going to run these commands it's going。to
    install Django and then it's going to，test my code and it will then give back。to
    me what the response is after I do，that so let's go ahead and test this and。in
    particular let's run it on a program，where the tests are going to fail so I。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 系统将检查我的代码，并运行这些命令，安装Django，然后测试我的代码，并在执行后将响应反馈给我，所以让我们测试一下，特别是让它在一个测试将失败的程序上运行。
- en: might say for example let's go into，flights and model stop pie and let's go。to
    my is valid flight function from，before and change it back to that。version that
    didn't work but before it，was something and something I'll change。it to something
    or something that as，long as the origin is not the。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我可能会说，例如，让我们进入`flights`和`model stop pie`，回到我之前的`is valid flight`函数，并将其更改回之前不起作用的版本。
- en: destination or the duration is greater，than zero we'll count them as valid but。we
    know that that's wrong that should，not work see here's what I'll do I'll go。ahead
    and first say get status see all，right what's changed and it seems that。all right
    I've changed i've modified，models pi which makes sense i'll go。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目的地或持续时间大于零，我们将其视为有效，但我们知道这是错误的，不应该这样。看看我会怎么做，我会先说`get status`，看看有什么改变，似乎我已经修改了`models
    pi`，这很合理。
- en: ahead and get added i'll add dot we'll，just add all the files that I might have。modified
    I'll commit my changes so I go，ahead and use wrong valid flight。function that's
    what I'm gonna do and，now I'm going to push my code to github。I added it I committed
    it I pushed it，that now then pushes my code to github。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我将添加所有可能修改的文件，使用`add dot`，然后提交我的更改，我将使用错误的`valid flight function`进行提交，现在我要将我的代码推送到GitHub上。我已添加、提交并推送我的代码。
- en: into a repository called。![](img/80e431d7e9ec5e03b4e38d52dddd2733_3.png)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_3.png)'
- en: Airlines that I already have and now if，I go ahead and go to github and I go
    to。my airline compositor II what you'll，notice is that we've mostly been dealing。with
    this code tab but github gives us，other tabs as well，quite useful as you begin
    to think about。working on a project in larger teams so，in addition to looking
    at the code we。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我进入GitHub，查看我的航空公司合成器II，您会注意到我们大多在处理这个代码标签，但GitHub还给我们其他标签，当你开始考虑在较大团队中工作时，这非常有用。
- en: have issues issues are ways for people，to just report that something is not。quite
    right or there is a feature，request that we have for this particular。code base
    so the issues might maintain a，list of all of the pending action items。for a particular
    repository things that，we still need to deal with and once。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是人们报告某些东西不太对劲或对该代码库的功能请求的方式，问题可能会维护该特定仓库所有待处理事项的列表，即我们仍需处理的事项。
- en: those issues are dealt with the issues，can be closed so I have no issues here，as
    well。poll requests are people that are trying，to merge some part of the code from
    one。branch into another branch so you might，imagine on a larger project you don't。want
    everyone merging things into master，all at the same time you might have。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: people working on their own separate，branches and then when they feel。confident
    and happy with their code then，they can propose a pull request to merge。their
    code into the master branch and，that allows for various other features。like the
    ability for someone to offer a，code review to be able to review the。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: code write comments and propose，suggestions for what changes should be。made
    to a particular part of the code，before it gets merged into the master。branch
    and that's another common，practice with regards to working on a。github repository
    or any other larger，project that you're controlling using。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: source control is this idea of code，reviews that oftentimes you don't want。just
    one person making the changes，without anyone's eyes on that code but。you want
    a second pair of eyes to be，able to look things over make sure the，code is correct。make
    sure it's efficient make sure it's，in line with the practices of the。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: application is using and so pull，requests can be quite helpful for that。and
    then this fourth tab over here，represents github actions these are the。various
    different actions or workflows，that I might want to run on this。particular repository
    and what we'll see，here is that if I go to the actions tab。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: now what I'll see is here is my most，recent testing action so anytime I push。I
    get a new testing action this one was，from 29 seconds ago，I'll go ahead and click
    on it and see。what's within it all right here was the，job that I ran test project
    I see that。on the left-hand side you'll notice this，big red X on the left-hand
    side of this。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: workflow means something went wrong so，I'd like to know what it is that went。wrong
    I'll go ahead and click on test，project and here within it these are all。of the
    steps the things that happened，when we actually ran this particular job。first
    the job sets up then the checkout，action goes ahead，checks out my code because
    we need。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: access to my code to be able to run it，here was the step I defined run Django。unit
    tests which was going to install，Django and run those tests it has an X。next to
    it indicating something went，wrong and I see down below annotations。one failure
    so all over the place，github is trying to tell me that。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: something went wrong it failed two，minutes ago here I'll go ahead and open。this
    up and what I'll see is the first，thing that happened is we install Django。and
    that seems to have worked okay but，down below what you'll see is the output。of
    running these unit tests that we see，failed failures too and now I can see。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: here are the unit tests that failed we，failed the invalid flight destination。test
    we failed the invalid flight，duration test and as before I can see in。github user
    interface what those，assertion errors are I can see it true。is known false true
    is not false those，were the problems that happened when I。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是失败的单元测试，我们失败了无效的航班目的地测试，我们失败了无效的航班持续时间测试，正如之前我在GitHub用户界面中看到的那些断言错误，我可以看到它们是真的。
- en: tried to run this particular test suite，and now others who are also working
    on。this repository can see as well what the，results of these tests are and can
    offer。suggestions can offer ways that I might，be able to fix the code in order
    to deal。with that problem but now I know that，this particular test failed and
    if I go。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我尝试运行这个特定的测试套件，现在其他也在这个库上工作的人员也可以看到这些测试的结果，并可以提供建议，给出我可能修复代码的方式，但现在我知道这个特定的测试失败了，如果我继续。
- en: back to the main code page for this，github repository I'll see that next to。![](img/80e431d7e9ec5e03b4e38d52dddd2733_5.png)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '回到这个GitHub库的主代码页面，我会看到下方的情况。  '
- en: this commit there's a little X symbol，and that little X symbol next to the。commit
    just tells me that the most，recent time I tried to commit something。went wrong
    they ran the workflow when，there was an error and so I'll。immediately see for
    this commit and I，can go back and look at the history of。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个提交旁边有一个小X符号，这个小X符号告诉我，我上次尝试提交时出了问题，他们在出现错误时运行了工作流，因此我会立即看到这个提交的情况，并且可以回头查看历史记录。
- en: commits and see which ones were okay and，which ones had a tendency to cause
    a。some sort of problem so this one it，appears caused a problem and we know why。it
    caused a problem because of this，condition something or something else so，I can
    fix it。I'll change the order to an end I'll go，ahead and get add dot get commit
    say I。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我会查看提交，看看哪些是正常的，哪些有导致某种问题的倾向，所以这个显然造成了问题，我们知道为什么，因为这个条件或者其他什么原因，所以我可以修复它。我会改变顺序并且添加提交。
- en: will fix a valid flight check if I do，get status just to check out like what's。going
    on right now I'm ahead of the，master branch by one commit that's。exactly what
    I would expect and now I'll，go ahead and push my code to github by。running git
    push saying alright let's。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我会修复有效航班检查，如果我获取状态来检查现在发生了什么，我的主分支领先一个提交，这正是我所期望的，现在我会推送代码到GitHub。
- en: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_7.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_7.png)'
- en: push this update and now hopefully we're，going to pass the workflow now now
    I go，back to the report。i refresh the page here is my latest，commit fix valid
    flightcheck you'll。notice here there's an orange dot，instead of the red X as before
    this dot。just means the tests are currently，pending the workflow is in progress。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 推送这个更新，希望我们能够通过工作流，现在我回到报告。我刷新页面，这里是我的最新提交“修复有效航班检查”，你会注意到这里有一个橙点，而不是之前的红色X，这个点意味着测试当前在等待中，工作流正在进行中。
- en: because it takes some time for github to，be able to start up the VM to be able
    to。initialize the job to check out my code，to run all those tests it does take
    some。time but if I go back to the actions tab，I'll see that all right this time
    for。testing we get a green checkmark，everything seems to be okay I go to test。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 因为GitHub需要一些时间来启动虚拟机，初始化工作以检出我的代码并运行所有测试，但如果我回到Actions标签，我会看到这次测试时获得了绿色勾号，一切似乎都正常。
- en: project just to see it and now I notice，the green checkmark next to run Django。unit
    test means that the unit test has，passed as well if I open those up now I。see
    at the bottom the same output that I，saw before when I was running those unit。tests
    on my own machine，we ran ten tests and everything was okay，and that tells me these
    tests have。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我去项目中查看，现在我注意到“运行Django单元测试”旁边的绿色勾号意味着单元测试也通过了，如果我打开它们，现在我看到底部有与我之前在自己的机器上运行单元测试时相同的输出，我们运行了十个测试，一切正常，这告诉我这些测试通过了。
- en: passed so github actions have the，ability to allow for certain jobs to。happen
    certain work to happen anytime，you push code anytime you submit a pull。request
    or on various different actions，that might happen on a github repository。and they're
    very helpful for being able，to implement this idea of continuous。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions能够允许某些工作在你推送代码、提交拉取请求或在GitHub库上发生的各种不同操作时进行，这对实施持续集成的想法非常有帮助。
- en: integration because it means you can，make sure that when you're merging code。from
    some developers branch into the，main branch that everyone's merging。their code
    into you can verify that，those tests can pass and you can add。rules to say that
    you don't want to，allow anyone to merge code into the。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 集成意味着当你将某个开发者分支的代码合并到主分支时，可以确保每个人的代码合并时都能通过测试。你可以添加规则来阻止任何人将未通过测试的代码合并到主分支。
- en: branch if the tests don't pass to，guarantee that any code that does get。merged
    is going to pass all of those，tests as well and so that can definitely。help the
    development cycle make it，easier to ensure the changes could be。made quickly but
    as we make those，changes quickly we're not going to lose。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 确保合并的任何代码都能通过所有测试，这确实有助于开发周期，使得快速更改变得更加容易，但在快速进行这些更改时，我们不会失去。
- en: accuracy and validity within our code，that we can make sure that our code。still
    passes those tests by automating，the process of running those tests all。together
    so other than continuous，integration then we now talked about。this idea of continuous
    delivery these，short application cycles where we would。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的代码中保持准确性和有效性，使我们能够确保代码通过这些测试的方法就是自动化地运行所有测试。因此，除了持续集成之外，我们现在谈论这个持续交付的理念，这种短暂的应用周期。
- en: like to very quickly be able to deploy，our application onto some sort of web。server
    and when we're deploying，applications to a web server there are。things that we
    need to think about we，need to think about getting our program。that was running
    fine on our computer，working on a web server as well and this。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望能够快速将应用程序部署到某种网络服务器。当我们将应用程序部署到网络服务器时，需要考虑的事项包括确保在我们的计算机上运行良好的程序也能在网络服务器上正常工作。
- en: can just be fraught with headaches and，all sorts of configuration problems。because
    you might imagine that the，computer that you，using is not necessarily going to
    be the。same as the computer that on the cloud，the computer in the server where
    your。web application is actually running it，might be running a different operating。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会引发头疼和各种配置问题，因为你可能想象，所使用的计算机并不一定与云端的计算机相同，托管你网络应用程序的服务器上的计算机可能运行着不同的操作系统。
- en: system it might have a different version，of Python installed if you have certain。packages
    working on your own computer，those same packages might not be。installed on the
    server so we've run，into all sorts of various different。configuration problems
    where you can be，developing deploy your code and realize。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 系统可能安装了不同版本的Python，如果你在自己计算机上运行某些包，那么在服务器上这些包可能并未安装，因此我们会遇到各种配置问题，你可能正在开发代码并意识到。
- en: that it doesn't work on the server，because of some sort of difference。between
    what's happening on your，computer and what's happening on the。server and this
    becomes even more，problematic if you're working on a。larger team you and multiple
    other，people working on a software project but。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在服务器上不工作，这可能是由于你计算机上发生的事情和服务器上发生的事情之间的某种差异。如果你在一个更大的团队中工作，这种情况会变得更加棘手，你和其他多位开发者一起工作在一个软件项目上。
- en: you each have different versions of，various different packages or libraries。installed
    and those different word，versions have different features and。might not all work
    and cooperate with，one another and so we need some way in。order to be able to
    deploy applications，efficiently and effectively to be able。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你们每个人都有不同版本的各种包或库安装，这些不同的版本具有不同的特性，可能并不能彼此兼容，因此我们需要某种方式来高效有效地部署应用程序。
- en: to standardize on just you know one，version of the environment one version。of
    all these packages to make sure that，every developer is working on the。project
    in the same environment and once，we deploy the application it's going to。be working
    in the same environment as，well and the solution to this comes in a。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 需要对环境的版本进行标准化，确保每位开发者在相同环境下工作。一旦我们部署应用程序，它将在相同的环境中运行，解决方案在于一个。
- en: number of possible options but one，option is to take advantage of a tool。like
    docker which is some sort of，containerization software and by。containerization
    software what we're，talking about is the idea that when。we're running an application
    instead of，just running it on your computer we're。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多可能的选项，但一个选择是利用像 Docker 这样的工具，这是一种容器化软件，通过容器化软件，我们所讨论的是，当我们运行一个应用程序时，不是仅仅在你的计算机上运行，而是。
- en: going to run it inside of a container on，your computer and each container is。going
    to contain its own configuration，it's going to have certain packages。installed
    it's going to have certain，versions of certain pieces of software。it's going to
    be configured in exactly，the same way and by leveraging a tool。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在你的计算机上的一个容器内运行它，每个容器将包含其自己的配置，安装某些软件包，包含某些特定版本的软件，配置方式完全相同，并通过利用一个工具。
- en: like docker you can make sure that so，long as you provide the right。instructions
    for how to start up and set，up these containers then if you are。working on the
    application and someone，you're working with some colleague is。also working on
    the same project so long，as you're using the same instructions。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Docker 这样的工具可以确保，只要你提供了正确的启动和设置这些容器的指令，那么如果你正在开发应用程序，而你的一位同事也在同一项目上工作，只要你们使用相同的指令。
- en: for how to set up a docker container，you're going to be working in the。identical
    environments that if a package，is installed on your computer in your。container
    it's going to be installed in，your colleagues container as well and。the advantage
    of this to works with this，idea of continuous delivery when you。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何设置 Docker 容器，你将会在相同的环境中工作，如果一个软件包在你的计算机上安装，那么它也会在你同事的容器中安装。这种工作方式的好处与持续交付的理念相结合，当你。
- en: want to deliver and deploy your，application to the Internet you can run，your
    application。and inside of that exact same container，setup using the exact same
    set of。instructions so that you don't have to，worry about the nightmare headaches
    of。trying to make sure that all the right，packages and all the right versions
    are。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将你的应用程序交付和部署到互联网上，你可以在完全相同的容器设置内运行你的应用程序，使用完全相同的一组指令，这样你就不必担心确保所有正确的软件包和版本的问题。
- en: in fact installed on the server dock oh，right might remind you of the idea of
    a。virtual machine or a VM if you're，familiar with that concept github uses。VMs
    for instance when running its github，actions they are in fact different a VM。is
    effectively running an entire virtual，computer with its own virtual operating。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上安装在服务器上的 dock 哦，没错可能会让你想起虚拟机的概念，或者说 VM，如果你对这个概念熟悉的话，GitHub 使用。例如，VM 在运行其
    GitHub actions 时，实际上是不同的 VM。一个 VM 实际上是在运行一个完整的虚拟计算机，拥有自己的虚拟操作系统。
- en: system in libraries and application，running on top of that all inside of。your
    own computer so a virtual machine，ends up taking up a lot of memory taking。up
    a lot of space docker containers，meanwhile are a bit lighter weight they。don't
    have their own operating system，they're all running still on top of the。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 系统中的库和应用程序运行在你的计算机上，所以虚拟机最终会占用很多内存，占用很多空间，而 Docker 容器则稍微轻量一些，它们没有自己的操作系统，仍然是在上面运行的。
- en: host operating system but there's this，docker layer in between that keeps track。of
    all these various different，containers and keeps track of for each。container such
    that every container can，have its own separate set of libraries。that put a set
    of binaries and an，application running on top of that so。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 主机操作系统，但在这之间有一个 Docker 层，跟踪所有这些不同的容器，并为每个容器跟踪，以便每个容器可以拥有自己独立的一组库，运行在其上的一组二进制文件和应用程序。
- en: the advantage event of containerization，is that these containers are lighter。weight
    than having an entire virtual，machine but they can still keep their。own environment
    consistent such that you，can feel confident that if the。application is working
    in a docker，container you can have that docker。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 容器化的优势在于这些容器比完整的虚拟机更轻量，但仍然可以保持自己的环境一致，这样你就可以放心，如果应用程序在 Docker 容器中运行，你可以拥有那个
    Docker。
- en: container running on your computer，on someone else's computer on the server。to
    guarantee that the application is，going to work the way that you would。actually
    expect it to and so how exactly，do we configure these various different。docker
    containers well in order to do so，we're going to write what's called a。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的计算机上运行的容器，在别人的计算机上，或者在服务器上，以确保应用程序将以你实际预期的方式工作。那么我们如何配置这些不同的 docker 容器呢？为了做到这一点，我们将编写一个所谓的。
- en: docker file so to do this I'll go ahead，and go into airline 1 and I'll open
    up。this docker file and the docker file，describes the instructions for creating。a
    docker image where the docker image，represents all of the libraries and。other
    installed items we might want to，have inside of the container and Sanon。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: docker 文件，所以为了做到这一点，我将继续进入 airline 1，并打开这个 docker 文件。这个 docker 文件描述了创建 docker
    镜像的指令。docker 镜像代表了我们可能希望在容器和 Sanon 中包含的所有库和其他已安装项。
- en: based on that image we're able to create，a whole bunch of different containers。that
    are all based on that same image，where each container has its own files。and can
    run the web application inside，of it so this docker file for example。describes
    how I might create a container，that is going to run my Django web。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 基于那个镜像，我们能够创建一堆不同的容器，这些容器都基于同一个镜像，每个容器都有自己的文件，并且可以在其中运行 web 应用程序，所以这个 docker
    文件例如描述了我如何创建一个容器，这个容器将运行我的 Django web。
- en: application so first I say from Python ：three this happens to be another docker。image
    on which I'm going to base these，instructions that this is going to be a。docker
    image that already contains，instructions for installing Python 3。installing other
    related packages it，might be helpful oftentimes when you're。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序，所以我首先说 from Python ：three，这恰好是我将基于这些指令的另一个 docker 镜像，这将是一个已经包含安装 Python
    3 的指令的 docker 镜像，安装其他相关包，这在许多情况下是有帮助的。
- en: writing a docker file you'll base it on，some existing docker file that already。exists
    so here I'm saying go ahead and，use Python 3 and now what do I want to。do in order
    to set up this container，well I want to copy anything in dot in。my current directory
    into the container，and I have to decide where in the。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 编写 docker 文件时，你会基于一些已存在的 docker 文件，所以这里我说继续使用 Python 3。现在我想做什么来设置这个容器呢？我想把我当前目录中的所有内容复制到容器中，我必须决定复制到容器中的位置。
- en: container am I going to store it well，there I could choose to store it。anywhere
    but I'll just store it in slash，user slash source slash app just some。you are
    some particular path that will，take me to a directory where I am going。to store
    the application but you could，choose something else entirely。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 容器我将存储在哪里呢？我可以选择在任何地方存储，但我将其存储在 /user/source/app，只是一个我选择的特定路径，它将带我到一个我将存储应用的目录，但你可以完全选择其他东西。
- en: so I copy all of the current files in my，current directory，so that'll include
    things like my。requirements file my manage type I file，my applications files all
    my settings。files everything inside of the directory，I would like to copy into
    the container。then I'm saying work der meaning changed，my working directory effectively
    the。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我复制我当前目录中的所有当前文件，这将包括我的 requirements 文件、我的 manage type I 文件、我的应用文件以及我所有的设置文件，目录中的所有内容我都想复制到容器中。然后我说
    work der 意味着改变我的工作目录。
- en: same thing as something like CD on your，terminal to move into some directory
    I。would like to set my working directory，equal to that same application directory。the
    application directory inside of the，container that now contains all of the。files
    for my application because I，copied all of those files into the。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 和在你的终端中使用 CD 移动到某个目录是一样的，我希望将我的工作目录设置为相同的应用目录。容器内部的应用目录现在包含我应用的所有文件，因为我已经将所有这些文件复制到。
- en: container now once I'm inside of this，directory I need to install all of my。requirements
    so assuming I've put all my，requirements like Django and any other。packages that
    I need inside of a file，called requirements text I can just run。the command pip
    install requirement text，and then finally inside the docker file。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一旦我进入这个目录，我需要安装我的所有要求，所以假设我把所有的需求，比如 Django 和我需要的任何其他包，放在一个名为 requirements
    text 的文件中，我只需运行命令 pip install requirement text，然后最后在 docker 文件内。
- en: I specify a command and this is the，command that should run when I start up。the
    container everything else is gonna，happen initially when we're just setting。up
    this docker image but when I start up，the container and actually want to run。my
    web application here is the command，that should run and I provided。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我指定了一个命令，这就是当我启动容器时应该运行的命令。所有其他的事情将在我们设置这个 Docker 镜像时发生，但当我启动容器并实际想要运行我的 Web
    应用程序时，这里是应该运行的命令，我提供了。
- en: effectively is like a Python list where，each word in the command is separated
    by。a comma we're here I'm saying the，command that I would like to run when。you
    start up this container is Python，managed up I run server and here I'm，port。like
    it to run running it on port 8000，for example but I could choose another。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上就像一个 Python 列表，每个命令中的单词都用逗号分隔。在这里，我指定了当你启动这个容器时要运行的命令是 Python manage.py runserver，我希望它运行在
    8000 端口，但我可以选择其他端口。
- en: port that I would like to run instead so，what's going to happen that is that
    when。I start up this docker container it's，going to if it needs to go through
    these。instructions and make sure that it sets，up the container according to these。instructions
    make sure that we've，installed all of the necessary。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望运行的端口，所以，当我启动这个 Docker 容器时，如果需要，它会按照这些指令执行，确保根据这些指令设置容器，确保我们已安装所有必要的。
- en: requirements make sure that we're using，Python 3 and anyone using the same。docker
    file can generate a container，that has all the same configuration on。it we don't
    have to worry about，configuration differences between me and。someone else who
    might not have the，exact same computer setup that I do and。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们使用的是 Python 3，任何使用相同 Docker 文件的人都可以生成具有相同配置的容器。我们不必担心我与其他人之间的配置差异，他们可能没有与我完全相同的计算机设置。
- en: the nice thing about this is that it can，run on Mac and Windows and Linux so
    even。people running on different operating，systems can still have containers that。all
    have the same configuration that all，work in the same way just to speed up。that
    process now so far when we've been，building django applications we've been。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这点很好，因为它可以在 Mac、Windows 和 Linux 上运行，即使是不同操作系统的人也可以使用配置相同的容器，所有容器的工作方式都相同，以加速这一过程。到目前为止，在构建
    Django 应用程序时，我们一直在。
- en: using a sequel Lite database sequel Lite，database just being a file that is。stored
    inside of our application and，this file based database allows us to。create tables
    insert rows into it delete，rows from it in most production。environments and most
    real web，applications and working with many many。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 SQLite 数据库，SQLite 数据库只是一个存储在我们应用程序内部的文件，这个基于文件的数据库允许我们创建表、插入行、从中删除行。在大多数生产环境和真实
    Web 应用程序中，处理很多数据。
- en: users sequel Lite is not actually the，database that is used it doesn't scale。nearly
    as well when there are many users，all trying to access it concurrently。oftentimes
    in those sorts of situations，you want your database hosted elsewhere。on some separate
    server to be able to，handle its own incoming requests and。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对于用户来说，SQLite 实际上并不是使用的数据库。当有很多用户同时访问时，它的扩展性远不如其他数据库。在这些情况下，通常你希望将数据库托管在其他地方，在某个独立的服务器上，以便能够处理自己的请求。
- en: connections and we talked about a couple，of possible databases we could use。instead
    of sequel Lite things like my C，group MySQL things like Postgres are。various different
    sequel based databases，so imagine now I want to deploy my。application but instead
    of using sequel，Lite I would like to use Postgres for。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了一些可以使用的数据库连接，比如说除了 SQLite，还有 MySQL、Postgres 等各种不同的基于 SQL 的数据库。所以想象一下，现在我想部署我的应用程序，但我希望使用
    Postgres，而不是 SQLite。
- en: example as the database server that I，would like to run well that would seem。to
    be pretty complicated for me to test，on my own because now in addition to。running
    my web application in one server，effectively I also need like another。server that's
    running Postgres for，example such that I can communicate with。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，作为我想要运行的数据库服务器，这对我来说似乎很复杂，因为除了在一台服务器上运行我的 Web 应用程序外，我实际上还需要另一台服务器在运行 Postgres，以便我可以与其通信。
- en: that Postgres database instead and，that's going to be even harder for like。other
    people to be able to work on as，well potentially it might be difficult。to get
    the server to work in that way，too but the nice thing about docker is。that I can
    run each of these processes，and in a different container effective。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Postgres数据库，这对其他人来说会更加困难，他们可能无法进行有效的工作，另外，可能会很难让服务器以那种方式运行，但Docker的好处在于，我可以在不同的容器中运行这些进程。
- en: I can have one container that's running，my web application using this docker。file
    right here and I can have another，container that's just going to run。Postgres
    and as long as other people，also have access to that same container。for running
    Postgres they can be working，in an identical environment to the one。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以有一个容器运行我的网页应用程序，使用这个Docker文件，同时还有另一个容器运行Postgres，只要其他人也能访问同一个用于运行Postgres的容器，他们就可以在与我相同的环境中工作。
- en: that i am working in as well and so，there's also a feature of docker known。as
    docker compose and what docker，compose lets us do is allow us to。compose multiple
    different services，together that i would like to run my web。application in one
    container and i would，like to run a Postgres database in。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个Docker的功能叫做Docker Compose，它允许我们组合多个不同的服务。我希望在一个容器中运行我的网页应用程序，而在另一个容器中运行Postgres数据库。
- en: another container but I would like for，those containers to be able to talk to。each
    other to be able to work together，whenever I start up the application so。if I'd
    like to do that in order to run，this application on my computer and have。both
    the web application and Postgres，installed I can create a docker compose。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这些容器能够相互通信，协同工作，因此当我启动应用程序时，如果我想这样做以便在我的计算机上运行这个应用程序，并安装网页应用程序和Postgres，我可以创建一个Docker
    Compose文件。
- en: file which looks like this，here I'm specifying using version 3 of。docker compose
    here I specify again，using a yamo file，much as in my github workflows were。formatted
    in Yeman just as a，configuration file docker compose dot。yml is a yamo file that
    describes all of，the various different services that I。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 文件看起来是这样的，我在这里指定使用版本3的Docker Compose，这里我再次指定，使用YAML文件，就像我的GitHub工作流格式化在YAML中一样，Docker
    Compose.yml是一个描述我想要的所有不同服务的配置文件。
- en: want to be part of my application where，each service is going to be its own。container
    that could be based on a，different docker image here I'm saying。that I have two
    services one called DB，for database one called web for my web。application the
    database is going to be，based on the Postgres docker image image。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 每个服务都将是自己的容器，可以基于不同的Docker镜像。在这里，我声明我有两个服务，一个叫DB（数据库），一个叫web（网页应用程序），数据库将基于Postgres
    Docker镜像。
- en: the Postgres wrote that I don't have to，worry about someone else has written
    the。docker file for how to start up a，Postgres container here though for the。web
    application that's gonna be built，based on the docker file in my current。directory
    the docker file that I have，written and then down below I've just。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Postgres，我不必担心其他人已经为启动Postgres容器编写了Docker文件，而网页应用程序将基于我当前目录中的Docker文件构建，这个Docker文件是我自己编写的，然后在下面我只是。
- en: specified that my current directory，should correspond to the app directory。and
    then I've specified when I'm running，this on my own computer I would like。port
    8000 on the container to correspond，to port 8000 on my own computer just so。that
    I can access port 8000 or my，browser and access port 8000 inside the。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 指定我的当前目录应对应于应用目录，然后我指定在我自己的计算机上运行时，我希望容器的8000端口与我自己的计算机的8000端口对应，以便我可以通过浏览器访问8000端口，并访问我正在工作的端口8000。
- en: container it just lets my computer，actually talk to the container so I can。open
    up the web application in my web，browser for example and actually see the。results
    of all of this so here then I've，created two services a database and web。![](img/80e431d7e9ec5e03b4e38d52dddd2733_9.png)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 容器让我的计算机能够与容器实际交互，因此我可以在我的网页浏览器中打开网页应用程序，并看到所有这些的结果。于是我创建了两个服务，一个是数据库，一个是网页应用程序。![](img/80e431d7e9ec5e03b4e38d52dddd2733_9.png)
- en: so now let's actually try starting up，these containers I'm going to first go。into
    my airline one directory and I'm，going to say docker compose up to mean。go ahead
    and start up these services，I'll press return and what you'll see is。we're going
    ahead and starting up to，services I'm starting up the database。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们实际尝试启动这些容器，我将首先进入我的航空公司目录，然后输入 docker compose up，意味着继续启动这些服务。我按下回车，你会看到我们正在启动两个服务，我正在启动数据库。
- en: service and I'm starting up the web。![](img/80e431d7e9ec5e03b4e38d52dddd2733_11.png)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 服务，我正在启动 Web。![](img/80e431d7e9ec5e03b4e38d52dddd2733_11.png)
- en: service and now as a result of all of，this I've started up the application and。I
    started it on port 8000 so if I go to，0 dot 0 dot 0 dot 0 / 8000 or colon 8000。flash
    flights that's going to take me to，the flights page and now this is running。not
    just on my own computer but inside，of a docker container now of course。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 服务，现在由于这一切，我已经启动了应用程序，并在 8000 端口上启动了它。所以如果我访问 0.0.0.0:8000 或者 :8000/flights，这将带我到航班页面，现在这个应用程序不仅在我自己的电脑上运行，还在
    Docker 容器内运行。
- en: right now there are no flights inside of，this page because I haven't actually。added
    anything to the database yet so I，could do that if I wanted to but how do。I do
    that well I needed to like go into，slash admin to say like let me login and。go
    ahead and create some sample flights。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这个页面内没有航班，因为我还没有实际添加任何内容到数据库中。如果我想这样做，我需要进入 /admin 来登录，并继续创建一些样本航班。
- en: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_13.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_13.png)'
- en: but I don't have a login yet because I，need to like create a super user account。and
    I can't just like inside of my，airline one directory say Python managed。PI create
    super user the way that I used，to because this is running in my，terminal on my
    computer。whereas what I really want to do is go，into the docker container and
    run this。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我还没有登录，因为我需要创建一个超级用户帐户。我不能像在我的航空公司目录中那样使用 Python 管理的命令创建超级用户，因为这是在我电脑的终端上运行的。而我真正想做的是进入
    Docker 容器并运行这个。
- en: command there inside of the container so，how can I do that well there are various。different
    docker commands that I can use，docker PS will show me all of the docker。containers
    that are currently running so，go ahead and shrink this down a little。bit I see
    two rows one for each，container one for my Postgres container。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我该如何做到这一点呢？有多种不同的 Docker 命令可以使用，docker ps 会显示当前正在运行的所有 Docker 容器。我将这一视图缩小一点，看到两行，每行对应一个容器，一行是我的
    Postgres 容器。
- en: that's running the database one for just，my web application that's running as。well
    each one has a container ID so I，want to go into my web application。container
    in order to run some commands，inside of that container so I'm going to。copy its
    container ID and say docker，exact meaning go ahead and execute a。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这正在运行数据库，仅用于我的 Web 应用程序，每个服务都有一个容器 ID，所以我想进入我的 Web 应用程序容器，以便在该容器内运行一些命令，所以我将复制其容器
    ID，并输入 docker exec，意味着在容器内执行一个命令。
- en: command on the container - IT will make，this interactive here is the container。idea
    that I would like to execute a，command on and the command I want to。execute is
    - passing the - L flag but，bash to say I want to run a bash prompt。I want to be
    able to interact with a，shell so that I can run commands inside，of this container。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在容器上执行命令 - 它将使这个交互式，这里是我想执行命令的容器。我想执行的命令是 - 传递 -L 标志，使用 bash 说我想运行一个 bash 提示符。我希望能够与
    shell 交互，以便我可以在这个容器内运行命令。
- en: so I press return and now what you'll，notice is that I am inside of my。container
    in the user source app，directory that directory that contained。all the information
    about this web，application I type LS and what I'll see。is here all the files inside
    of this，container now and now I can say。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我按下回车，现在你会注意到我在用户源应用程序的目录中。这一目录包含了关于这个 Web 应用程序的所有信息。我输入 LS，会看到这个容器内的所有文件，现在我可以说。
- en: something like Python managed up I，create super user and now it's going to。let
    me create a super user so I'll，create a user inside of my web，application called
    Brian。I'll give it my email address I'll type，in a password and now we've created
    a。super user and you can run other，commands here if you wanted to migrate。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Python 管理命令一样，我创建超级用户，现在它将让我创建一个超级用户，所以我将在我的 Web 应用程序中创建一个名为 Brian 的用户。我会提供我的电子邮件地址，输入一个密码，现在我们已经创建了一个超级用户，如果你想迁移，这里还可以运行其他命令。
- en: all of your migrations I could say，Python managed up PI migrate it turns。out
    I've already done that so I didn't，actually have to do it again but you can。run
    any commands that you could run them，on your computer but now you can run。them
    inside of the docker container，instead I'm going to press control D。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/80e431d7e9ec5e03b4e38d52dddd2733_15.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
- en: just to log out get out of the container，and get back to my computer but now
    I've。created a super user so I could go ahead，and sign in to Django's admin and
    now I。can begin to manipulate this database，which is a Postgres database running
    in。a separate container but the nice thing，about it is that I can start them both。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: up together just by running something，like docker compose up for example so。docker
    can be quite a powerful tool for，allowing us to very quickly ensure that。an application
    is running in the，environment that we expect it to be。running to make sure that
    all the right，libraries are installed make sure that。
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: all the right packages are installed as，well that the configuration between
    my。development environment and the，environment that's running on the server。are
    the same as well so those then were，just some of the best practices for how。you
    can go about developing a program，now that we have the tools to do so we。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: have a lot of tools for being able to，develop these web applications。but as
    our program start to get more，complex it'll be increasingly important。to test
    them make sure that each various，different component of our web。application behaves
    the way that it is，expected to behave and then taking。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: advantage especially in bigger teams of，CI CD continuous integration continuous。delivery
    to make incremental changes and，make sure each of those incremental。changes in
    fact works on the web，application and then CD continuous。delivery to say that
    rather than wait，and then deploy everything all at once。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: let's deploy things in Chrome，as well let users more quickly get。access to the
    latest features and more，quickly find out if something went wrong。we can better
    identify what it is that，went wrong if we've deployed things。incrementally rather
    than waiting a long，time in order to do so as well so these。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: are some of the best practices in modern，software application development not。only
    for web applications but for，software more generally next time we'll。consider
    other challenges that might，arise as we go about trying to make web。applications
    that are used by more and，more users in particular taking a look。
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: at challenges that all arise in terms of，scalability as the programs get bigger。and
    also security of what security，vulnerabilities open themselves up as we。begin
    to design our web applications，using Python and JavaScript so more on。![](img/80e431d7e9ec5e03b4e38d52dddd2733_17.png)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
