- en: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P5：L1- github操作 1 (Git与GitHub基本操作)
    - ShowMeAI - BV1gL411x7NY
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛CS50-WEB ｜ 基于Python / JavaScript的Web编程（2020·完整版） - P5：L1- github操作 1（Git与GitHub基本操作）
    - ShowMeAI - BV1gL411x7NY
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_0.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_0.png)'
- en: '[Music]。![](img/930d8b513effaf77964ac86b639a5fa8_2.png)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[音乐]。![](img/930d8b513effaf77964ac86b639a5fa8_2.png)'
- en: all right welcome back everyone to web，programming with Python and JavaScript。so
    last time we took a look at two，languages HTML and CSS both of which can。be used
    to design web pages HTML we used，in order to describe the structure of。web pages
    to decide what content we want，in the layout of the page and then CSS。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，欢迎大家回到Python和JavaScript的网页编程课程中。所以下次我们看了两种语言，HTML和CSS，这两者都可以用来设计网页。HTML用来描述网页的结构，以决定我们希望在页面布局中包含什么内容，然后是CSS。
- en: we use to describe the style of the page，what color we want and things how much。space
    we wanted around things as well，today we're going to turn our attention。to a tool
    that we can use as we begin to，develop these web applications and in。particular
    we're going to be looking at，a tool called git and what get is is it。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用来描述页面的样式，想要什么颜色以及周围的空间，今天我们将关注一个工具，随着我们开始开发这些网页应用，特别是我们将要查看一个叫做Git的工具，Git的作用是什么。
- en: as a version control tool not specific，to web programs necessarily but that。we're
    going to use as we begin to，develop bigger and more sophisticated。web applications
    over the course of this，term so what is get going to enable us。to do well it's
    going to do a couple of。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个版本控制工具，虽然不一定仅限于网页程序，但我们将用它来开始开发更大、更复杂的网页应用，随着本学期的进展，Git将使我们能够做到的事情有几项。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_4.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_4.png)'
- en: things first and foremost what get is it，is a command-line tool that's going
    to。allow us to first keep track of changes，that we make to code so once upon a
    time。the first time I was starting to develop，web applications I remember working
    on a。file and then when I wanted to make，changes I might have wanted to save the。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，Git是什么，它是一个命令行工具，可以让我们跟踪代码的更改。曾经在我第一次开始开发网页应用时，我记得我在一个文件上工作，当我想进行更改时，我可能想要保存那个版本。
- en: old version so I would duplicate the，file and then just make changes to the。duplicate
    but this quickly gets messy，especially if you have lots of different。versions
    of your code in various，different stages keeping track of them。just starts to
    become a nightmare so，what git is going to enable us to do is。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 旧版本，所以我会复制文件，然后只对复制件进行更改，但这很快就会变得混乱，特别是当你在不同阶段有很多不同版本的代码时，跟踪它们就会变成一场噩梦，因此，Git将使我们能够做到。
- en: to keep track of changes that we make to，our code so we might create a file。initially
    save that version of it but，over time as we make changes add to it。remove things
    from it we can save，snapshots so to speak of various。different parts of our code
    at different，points in time such that we can quickly。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪我们对代码所做的更改，所以我们可能最初会创建一个文件，保存那个版本，但随着时间的推移，当我们进行更改、添加或删除内容时，我们可以保存各种不同部分代码在不同时间点的快照。
- en: and easily reference all of those，changes that we've made to that code。additionally
    git is going to make it，easy for us to synchronize code between。different people
    in larger scale web，applications is rarely just one person。who's working on the
    entire application，usually you're working with a co-worker。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 并且轻松引用我们对代码所做的所有更改。此外，Git将使我们在较大规模的网页应用中方便地同步代码，因为通常并不只是一个人工作在整个应用上，通常你是和同事一起工作的。
- en: and multiple co-workers all on the same，application and all at the same time
    and。one definitely tricky part of this，process is figuring out how to。synchronize
    your work between different，people if I make a change on my part of。the web application
    I want to make sure，that my colleagues are also able to see。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以及多个同事在同一应用程序上同时工作，这个过程的一个确实棘手的部分是找出如何在不同人之间同步工作。如果我在网页应用的部分做了更改，我希望确保我的同事也能看到。
- en: those changes and get access to the，latest changes that I've made and then I。want
    to be able to get access to the，latest changes that the people I'm。working with
    have made too so we need。![](img/930d8b513effaf77964ac86b639a5fa8_6.png)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更改，并获取我所做的最新更改，然后我想能够获取我正在合作的人的最新更改，所以我们需要。
- en: some way to keep everything in sync and，it is going to enable us to do that
    what。we're going to effectively have is one，version of the code stored in what
    we're。gonna call a repository somewhere online，and both I and someone I'm working
    with。a partner for example might both be able，to get access to that exact same。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一种同步所有内容的方法，而这将使我们能够做到这一点。我们将拥有一个版本的代码存储在我们所称的在线**repository**中，而我和我的合作伙伴（例如）都能够访问同一个。
- en: repository those same files in the same，state and if ever I and the other person。make
    changes to those files we can each，make changes to those files and then。![](img/930d8b513effaf77964ac86b639a5fa8_8.png)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**repository**中的相同文件处于相同状态。如果我和另一个人对这些文件进行更改，我们都可以进行更改，然后。![](img/930d8b513effaf77964ac86b639a5fa8_8.png)'
- en: synchronize them back up pushing them，back up to the server so to speak so。that
    the server will have the most，recent most up-to-date version of this。code then
    after that after we've both，pushed our changes up to the server then。we can both
    pull changes from the server，so to speak in order to get access to。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 将它们同步回去，也就是说将更改推送到服务器上，以便服务器拥有最新的，最及时的代码版本。之后，在我们都将更改推送到服务器后，我们可以从服务器拉取更改，以便获取访问权限。
- en: the latest version of the code so that，no matter what so long as I've been。working
    on the same project that my，partner has we can use git to。synchronize our work
    so that I have，access to my colleagues most recent，changes and vice versa。git
    also enables us to do a number of。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 最新的代码版本，因此无论如何，只要我与我的合作伙伴在同一个项目上工作，我们可以使用**Git**来同步我们的工作，以便我能够访问同事的最新更改，反之亦然。**Git**还使我们能够执行许多。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_10.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_10.png)'
- en: other things for example get allows us，to test changes to our code without。![](img/930d8b513effaf77964ac86b639a5fa8_12.png)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**Git**允许我们测试代码的更改而无需。![](img/930d8b513effaf77964ac86b639a5fa8_12.png)
- en: removing access to the original so for，example you might imagine that as I'm。working
    on writing a program I might，want to try making some changes but I'm。not sure
    if they're quite going to work，so I want to test those changes but I。don't want
    to lose access to my original，working version of the program just in。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一下，当我在编写程序时，可能会尝试做一些更改，但不确定这些更改是否有效，所以我想测试这些更改，但又不想失去对程序原始工作版本的访问。
- en: case something goes wrong，so what get enables us to do is it lets。![](img/930d8b513effaf77964ac86b639a5fa8_14.png)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现问题，那么**Git**让我们能够这样做，它允许我们进行操作。![](img/930d8b513effaf77964ac86b639a5fa8_14.png)
- en: us make changes to code on a separate，branch so to speak such that later once。we're
    happy and satisfied with the，changes we can merge those changes back。into the
    original version of our code，being able to test those changes before。we're really
    sure that they're the ones，that we want to make and finally one。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在一个独立的分支上对代码进行更改，以便在我们满意之后，可以将这些更改合并回代码的原始版本，在我们确信这些更改是我们想要的之前能够测试这些更改。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_16.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_16.png)'
- en: powerful feature that git gives us，access to is the ability to revert back。![](img/930d8b513effaf77964ac86b639a5fa8_18.png)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**Git**提供给我们的一个强大功能是能够回退。![](img/930d8b513effaf77964ac86b639a5fa8_18.png)'
- en: to old versions of our code so you might，imagine in the situation where I've
    been。working on some code and I realized that，actually what I'm doing right now
    isn't，what I want。get enables us to say you know what this，most recent change
    isn't something that。I wanted I would like to revert back to，a previous version
    of the code instead。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们代码的旧版本，因此可以想象这样一种情况：我一直在处理一些代码，意识到目前的做法并不是我想要的。**Git**让我们能够说，最近的更改并不是我想要的，我想回到代码的先前版本。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_20.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_20.png)'
- en: and get makes it very easy to go back to，those previous versions so the goal
    for。today is going to be to learn how to use，this tool to learn the various different。git
    commands that will be quite popular，and quite common as you go about working。on
    web applications or really any other，code related project because version。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Git**使我们很容易回到之前的版本，因此今天的目标是学习如何使用这个工具，了解各种流行且常见的**Git**命令，以便在开发网页应用或其他与代码相关的项目时使用，因为版本控制。'
- en: control really allows a number of useful，features that are practical as you
    begin。to work on larger and larger projects，but ultimately as we begin working
    on。these get projects they need to be，stored somewhere online such that we're。able
    to download them from anywhere such，that me and a partner can both be。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 控制确实提供了许多有用的功能，这些功能在你开始处理越来越大项目时非常实用，但最终，当我们开始处理这些 git 项目时，它们需要存储在某个地方，以便我们能够从任何地方下载，这样我和我的伙伴都能访问。
- en: working on the same files in the same，code and so in order to do that we need。to
    host our git code somewhere and there，are a number of different websites that。can
    do this but one of the most popular，is a web site known as github github as。![](img/930d8b513effaf77964ac86b639a5fa8_22.png)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一个代码中一起处理同样的文件，因此为了做到这一点，我们需要将我们的 git 代码托管在某个地方，有许多不同的网站可以做到这一点，但其中一个最受欢迎的网站是
    github。![](img/930d8b513effaf77964ac86b639a5fa8_22.png)
- en: a website that stores get repositories，where all the repository is is you can。think
    of it as a folder that holds a，whole bunch of code and files related to。our code
    so we're gonna host this code，online on a website called github and。then on our
    computer we'll be able to，access these github repositories and。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一个存储 git 仓库的网站，所有的仓库就像是一个文件夹，里面保存了与我们的代码相关的许多代码和文件。所以我们将在一个叫做 github 的网站上托管这些代码，然后在我们的电脑上可以访问这些
    github 仓库。
- en: manipulate those repositories by，changing the files that are within them。so
    let's go ahead and take a look at，github and see how we can go ahead and。![](img/930d8b513effaf77964ac86b639a5fa8_24.png)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过更改仓库内的文件来操纵这些仓库。所以我们先来看一下 github，看看我们该如何继续。![](img/930d8b513effaf77964ac86b639a5fa8_24.png)
- en: create our very first github repository，if you don't already have a github。account
    you can create one by going to，github comm and signing up for an。account for free
    and I'll now go to，github comm slash new github。com slash。new is the page I go
    to if I want to，create a new github repository and so。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 创建我们第一个 github 仓库，如果你还没有 github 账户，可以通过访问 github.com 免费注册一个账户。我现在就去 github.com/new。github.com/new
    是我创建新 github 仓库时需要访问的页面。
- en: let's take a look at what I need to do，in order to create a repository the。first
    thing I need to do is give my，repository a name so in this case I'm。just going
    to call the repository hello，we can give it any name you want so long。as that
    name doesn't collide with other，repository names that you already have。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看我需要做什么来创建一个仓库。第一件事是给我的仓库命名，所以在这种情况下，我将这个仓库叫做 hello。你可以给它任何你想要的名字，只要这个名字不与你已有的其他仓库名称冲突。
- en: github optionally lets me provide a，description for this repository I'll。just
    say web programming with Python and，JavaScript and then github gives me the。choice
    do I want this to be a public，repository such that anyone can see the，repository。not
    everyone can necessarily make，changes to it but it's publicly。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: github 选项让我为这个仓库提供一个描述，我就说使用 Python 和 JavaScript 的网页编程。然后 github 给我选择，我是否希望这个仓库是公开的，这样任何人都可以看到这个仓库。并不是每个人都能做出更改，但它是公开的。
- en: available if anyone wants to download my，code and try it out public means that。anyone
    can access it or private meaning，by default only I can see this。repository but
    I can choose if I would，like other people to be able to see it。as well and I can
    select which，individuals for now I'll go ahead and。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有人想下载我的代码并试用，它是公开的，这意味着任何人都可以访问，或者是私有的，这意味着默认情况下只有我能看到这个仓库，但我可以选择是否让其他人也能看到，并且可以选择具体的个人。现在我就去做这个。
- en: make this repository public and I'll go，down here and click on the green create。repository
    button in order to make this，new repository so I click the Create。repository button
    and here it is this is，the github repository page and right now。you'll notice
    that there's a lot of，instructions here but，are no files because right now when
    I。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使这个仓库公开，然后我会向下滚动，点击绿色的创建仓库按钮，以便创建这个新仓库。所以我点击了创建仓库按钮，这就是 github 仓库页面。现在你会注意到这里有很多说明，但没有文件，因为目前我还没有。
- en: first created my first get repository I，got an empty repository with nothing
    in。it so what I'd like to do now is somehow，download this repository onto my own。computer
    such that I can add say an HTML，file that contains some HTML that I want。![](img/930d8b513effaf77964ac86b639a5fa8_26.png)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我第一次创建 git 仓库时得到了一个空的仓库，里面没有任何内容。所以我现在想要做的是将这个仓库下载到我的电脑上，以便我可以添加一个包含我想要的 HTML
    的 HTML 文件。![](img/930d8b513effaf77964ac86b639a5fa8_26.png)
- en: to keep track of using git so how am I，going to do that well in order to do。that
    we're going to take a look at the，very first git command that's going to。be involved
    with git which is known as，git clone get clone as a command that we。can run in
    order to take a repository，from the internet and download it onto。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '使用git来跟踪，所以我将如何做到这一点呢？为了做到这一点，我们将查看第一个与git相关的命令，它被称为`git clone`，这是一个我们可以运行的命令，以从互联网获取一个代码库并下载到本地。 '
- en: our own computer so you'll need to have，git installed onto your computer you
    can。![](img/930d8b513effaf77964ac86b639a5fa8_28.png)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们自己的计算机上，所以你需要在计算机上安装git。![](img/930d8b513effaf77964ac86b639a5fa8_28.png)
- en: install it on any Mac or PC or Linux，machine and once you do what you're。going
    to do is on your computer in the，terminal you'll run git clone followed。![](img/930d8b513effaf77964ac86b639a5fa8_30.png)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何Mac、PC或Linux机器上安装它，一旦你这样做，你要做的是在计算机的终端中运行`git clone`。![](img/930d8b513effaf77964ac86b639a5fa8_30.png)
- en: by the URL of the git repository that，you're trying to download so you might。imagine
    that here's your computer over，here and up here is some server where a。git repository
    is located github for，example is one such server but there are。others as well
    and up there is the，repository that potentially has files or。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '由你尝试下载的git代码库的URL来标识，所以你可以想象，这里是你的计算机，而上面是某个服务器，那里有一个git代码库，GitHub就是这样的服务器之一，但还有其他服务器，上面是包含你关心的文件或其他文件夹的代码库。 '
- en: maybe other folders with other files，that contain the contents of the，repository
    that you care about。downloading so if I run git clone，followed by the URL the
    repository I。want the effect of that is that the，repository and all of its contents
    get。downloaded onto my computer such that I，on my computer now have a copy of。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我运行`git clone`，后面跟着我想要的代码库的URL，效果就是代码库及其所有内容将下载到我的计算机上，以便我现在在我的计算机上有一个副本。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_32.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_32.png)'
- en: everything that was originally inside of，that git repository so now now that
    we。![](img/930d8b513effaf77964ac86b639a5fa8_34.png)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 原本在那个git代码库内的所有内容，所以现在我们。![](img/930d8b513effaf77964ac86b639a5fa8_34.png)
- en: know how to clone a repository let's，actually try it we've just created a。repository
    using github and now let me，go into my terminal and actually try to。clone this
    repository so that I have a，copy of it on my computer and I can。begin to make
    some changes to it so I'll，go into my terminal now and I'll go into。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '你需要知道如何克隆一个代码库，让我们实际尝试一下，我们刚刚使用GitHub创建了一个代码库，现在让我进入我的终端，实际尝试克隆这个代码库，这样我就可以在计算机上有一个副本，并可以开始进行一些更改。 '
- en: my lecture 1 directory and the first。![](img/930d8b513effaf77964ac86b639a5fa8_36.png)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我的lecture 1目录和第一个。![](img/930d8b513effaf77964ac86b639a5fa8_36.png)
- en: thing that I'm going to need is I'm，going to need the URL of the git。repository
    so if I go back into github，what you'll notice is that it gives me。an HTTP link
    in order to download my git，repository so there are a couple of。different ways
    that I can use to clone a，myself，one is using HTTP which will eventually。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '我需要的事情是git代码库的URL，所以如果我返回GitHub，你会注意到它给了我一个HTTP链接来下载我的git代码库，所以我有几种不同的方法可以用来克隆。 '
- en: involve like a username and password，that I'll have to type in in order to。prove
    to get that I these are my github，credentials，alternatively you familiar with。SSH
    this is another method of，authentication you can give as github。you are a public
    SSH key in order to，authenticate as well but no need to。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '包括像用户名和密码这样的内容，我必须输入以证明这是我的GitHub凭证，或者如果你熟悉SSH，这是一种身份验证的另一种方法，你可以将公钥提供给GitHub以进行身份验证，但不需要。 '
- en: worry about that if you're not as，familiar with that technology the key。here
    is that this URL is the github URL，that corresponds to my repository so I'm。![](img/930d8b513effaf77964ac86b639a5fa8_38.png)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对这种技术不太熟悉，不用担心，关键是这个URL是对应我代码库的GitHub URL，所以我。![](img/930d8b513effaf77964ac86b639a5fa8_38.png)
- en: going to copy that URL and then inside，of my terminal I'll type git clone and。then
    I'll just paste in the URL that I，would like to clone that contains that。repository
    I'll go ahead and press，return it says I'm cloning into a。directory called hello
    and then it's，saying you appear to have cloned an。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '我将复制那个URL，然后在我的终端中输入`git clone`，然后我会粘贴我想要克隆的包含该代码库的URL，然后按下回车，它显示我正在克隆到一个名为hello的目录，然后它说你似乎克隆了一个。 '
- en: empty repository it's saying that's a，warning but that's okay because I know。that
    I've cloned an empty repository，because the repository is brand new and。now I
    can type the command LS in my，terminal the LS command in the terminal。stands for
    list and effectively what，it's going to do is list all of the。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 空仓库，它说这是一个警告，但没关系，因为我知道我克隆了一个空仓库，因为这个仓库是全新的。现在我可以在终端中输入 LS 命令，终端中的 LS 命令表示列表，实际上它会列出所有的。
- en: files that are currently inside of this，directory all the files and folders
    that。are inside of my lecture one directory，where directory is just a fancy name
    for，all right。I now have a folder called hello inside，of my lecture one directory
    which I。didn't have before I'll go ahead and，move into this hello directory in
    order。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当前在这个目录下的所有文件，所有在我的 lecture one 目录下的文件和文件夹，其中目录只是一个华丽的名称。现在我在 lecture one 目录下有一个名为
    hello 的文件夹，而之前是没有的。我将进入这个 hello 目录。
- en: to change into a directory or folder you，can use the CD command CD stands for。change
    directory and so if I type CD，hello I will now move myself into the。hello directory
    and if i type LS you'll，see that there's nothing inside of this。hello directory
    right now because again，this repository was empty I cloned it。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要进入一个目录或文件夹，可以使用 CD 命令，CD 代表更改目录。如果我输入 CD hello，我现在就会进入 hello 目录。如果我输入 ls，你会看到这个
    hello 目录现在是空的，因为这个仓库是空的，我克隆了它。
- en: and there was nothing in it so now I'd，like to actually put something in this。repository
    the repository is only useful，if I'm keeping track of my code and。keeping track
    of the changes that I make，to that code so I'll go ahead and。actually try now
    to add some code to the，repository the first thing I'll do is。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这个仓库里什么都没有，所以我想在这里实际添加一些内容。这个仓库只有在我跟踪我的代码以及我对代码所做的更改时才有用，所以我现在就来试着向这个仓库添加一些代码，第一件我做的事是。
- en: create a new file and we could create a，new file just by opening up a text。editor
    but on the terminal there's，actually a command for creating a new。file called
    touch so in the terminal，I can type touch hello dot HTML and what。that's going
    to do is create a new file，called hello dot HTML and if I type ls'。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新文件，我们可以通过打开文本编辑器来创建一个新文件，但在终端中实际上有一个用于创建新文件的命令，叫做 touch。所以在终端中，我可以输入 touch
    hello.html，这样会创建一个名为 hello.html 的新文件。如果我输入 ls。
- en: I can see that indeed I do have a file，called hello dot HTML now inside of my，hello。![](img/930d8b513effaf77964ac86b639a5fa8_40.png)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以看到确实有一个文件，叫做 hello.html，现在在我的 hello 文件夹里。![](img/930d8b513effaf77964ac86b639a5fa8_40.png)
- en: let me now open up this directory in the，hello dot HTML file inside of a text。editor
    again I'm using vs code and let，me now add just some text to hello dot。HTML I'll
    just add a simple HTML page，same thing we've seen before where I。give it a header
    a title will be hello，and inside the body of the page will be。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我现在在文本编辑器中打开这个 hello.html 文件。我再次使用 VS Code，现在让我给 hello.html 添加一些文本。我将添加一个简单的
    HTML 页面，和我们之前看到的相同，其中我会给它一个标题，标题将是 hello，页面的主体部分将是。
- en: hello world same HTML page we've seen a，number of times now now just now inside。of
    this repository of course I haven't，yet made any saving to this repository I。haven't
    said that I want to save these，changes to the repository and the。repository isn't
    keeping track of every，single character I write I need to tell。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: hello world 同样的 HTML 页面我们已经看到好几次了，现在就在这个仓库里，当然我还没有对这个仓库进行任何保存，我还没有说我想要将这些更改保存到仓库中，并且仓库并没有跟踪我写的每一个字符，我需要告诉。
- en: git that this is a state of my current，files that I would like to keep track
    of。something that I would like to save and，in the world of get we call those save。points
    commits when I say I am making a，commit I mean I would like to save the。current
    state of all of the files and，folders and other assets that exist。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: git 这是我当前文件的状态，我想要跟踪的内容。想要保存的内容，在 git 的世界里，我们称这些保存点为提交。当我说我要进行提交时，我的意思是我想保存所有文件、文件夹和其他资源的当前状态。
- en: inside of the repository and basically，take a snapshot of their current。![](img/930d8b513effaf77964ac86b639a5fa8_42.png)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在仓库内部，基本上拍摄它们当前的快照。![](img/930d8b513effaf77964ac86b639a5fa8_42.png)
- en: position such that later I might be able，to refer back to them but in order
    to do。that they're actually a couple of steps，so the first step we need to follow
    is。an additional command so we saw that git，clone was the command we could use
    in。order to clone a repository take a，repository and download it onto our own。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 位置，以便稍后我可以引用它们，但为了做到这一点，实际上有几个步骤，所以我们需要遵循的第一步是一个额外的命令。我们看到 git clone 是我们可以用来克隆仓库的命令，将一个仓库下载到我们的本地。
- en: computer the next command will take a，look at is a command called git add and。what
    get add is going to do is it's，going to let us tell git that I would。like to add
    a file as one to track the，next time I save the next time I make a。commit to say
    that I would like to take，a snapshot of all these files such that。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机接下来的命令将是一个叫做 git add 的命令，而 git add 将让我们告诉 git，我想添加一个文件，以便下次我保存时，下次我提交时，我想对所有这些文件拍摄快照。
- en: I'm able to refer back to them later and，in order to do that I need to tell
    git。what files to keep track of so if for，example I'm keep working on this file。and
    I'd like to tell git that I'd like，to track it I can run a command like git。add
    followed by the name of the file，like food pie or dot HTML or whatever。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以便我能够稍后引用它们，为此我需要告诉 git 需要跟踪哪些文件，所以例如我继续处理这个文件，我想告诉 git 我想跟踪它，我可以运行一个像 git add
    的命令，后面跟着文件的名称，比如 food pie 或 dot HTML 或者其他的。
- en: file it happens to be and then get will，display a message saying that alright。now
    we have added food by this is now a，file that will be saved the next time I。make
    a commit so why are these two，separate steps well one reason you might。imagine
    is that if I'm working on a lot，of different files say I'm working on 10。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 文件恰好是，然后会显示一条消息，说好的，现在我们已经添加了 food，这现在是一个下次我提交时会被保存的文件。那么这两个步骤为什么是分开的呢？一个原因可能是，如果我正在处理很多不同的文件，比如说我正在处理
    10 个。
- en: different files and they're only three，that I'm happy with，three that I want
    to save it I don't。want to just say save and have，everything be saved in a commit
    I might。want to say that you know what these are，the only three files that I actually。want
    to save right now and the other，ones I'm still working on，so get gives us that
    ability to have。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的文件，只有三个我满意，三个我想保存的文件。我不想只是说保存，并且让所有内容都被保存到一次提交中，我可能想说，这三个文件是我现在真正想保存的，而其他的文件我还在继续工作，所以
    git 给我们这样的能力。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_44.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_44.png)'
- en: this separation to say let me explicitly，say that I want to track this file
    the。next time I save the next time I make a，commit and not all of the files for。example
    though there are shortcuts we，can use if we do want to add all of the。files and
    we'll see those in a moment as，well so let's go ahead and try that。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这种分离意味着让我明确表示我想跟踪这个文件，下次我保存，下次我提交时，而不是所有的文件。例如，尽管我们可以使用快捷方式，如果我们确实想添加所有文件，我们稍后会看到这些，所以让我们继续尝试一下。
- en: we'll go back to our repository where，I've created this hello dot HTML file。and
    now what I'd like to do is say that，I would like to add the hello dot HTML，my
    terminal。I'll now say again I have a hello dot，HTML file here I'll say git add
    followed。by hello dot HTML and you'll notice it，so far nothing seems to have happened。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们回到我的仓库，我在这里创建了这个 hello dot HTML 文件，现在我想做的是说，我想将 hello dot HTML 添加到我的终端。我现在会再次说我这里有一个
    hello dot HTML 文件，我会说 git add，后面跟着 hello dot HTML，你会注意到，到目前为止似乎没有发生什么。
- en: because so far I haven't yet saved，anything I've just said that I would。like
    to add hello dot HTML as a file，that the next time I say save the next。time I
    commit my repository it is going，to keep track of the changes I have now。![](img/930d8b513effaf77964ac86b639a5fa8_46.png)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 因为到目前为止我还没有保存我刚才说的任何内容，我想添加 hello dot HTML 作为一个文件，这样下次我说保存时，我提交我的仓库时，它会跟踪我现在的更改。![](img/930d8b513effaf77964ac86b639a5fa8_46.png)
- en: made - hello HTML so how do I actually，make a commit how do I actually say save。the
    state of these files well that's，going to be one more git command which。is known
    as git commit when I say git，commit I am going to tell my git。repository that
    I would like to save a，snapshot of the current state of the。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 制作 - hello HTML 那么我实际上是如何进行提交的，我如何说保存这些文件的状态呢？这将是一个更多的 git 命令，被称为 git commit。当我说
    git commit 时，我会告诉我的 git 仓库我想保存当前状态的快照。
- en: repository keeping track of any of the，changes that have been made to files。![](img/930d8b513effaf77964ac86b639a5fa8_48.png)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 仓库跟踪对文件所做的任何更改。![](img/930d8b513effaf77964ac86b639a5fa8_48.png)
- en: that I've added using git add and the，way we run it is by running git commit。followed
    by - M and then in quotation，marks a message and this message is。known as a commit
    message and what it is，is it a description in English or。whatever your language
    is of what，changes you've made in this most recent。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经使用`git add`添加了该文件，我们的运行方式是执行`git commit`，后接`-M`，然后用引号括起来的信息，这个信息被称为提交信息，它是对你在最近提交中所做更改的英文描述，或者使用你的语言。
- en: commit because over time as you work on，a big project you're probably going
    to。make lots of commits as you make lots of，changes to your program you'll commit。and
    commit again after each new edition，you make to the project and you might。want
    to refer back to a previous commit，but it's only valuable to do so if you。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间推移，当你在一个大型项目上工作时，你可能会做很多提交，因为在对程序进行大量更改时，你会一次又一次地提交，每次对项目的新版本进行更改后，你可能想要参考之前的提交，但只有在你能识别出在哪个提交中进行了特定更改时，这样做才有价值。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_50.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: 在这种情况下，它告诉我已经对一个文件进行了九次插入，因为之前该文件并不存在，现在一个包含九行的文件存在了，现在我已经保存了hello。
- en: can identify in which commit you made a，particular change for example so by。providing
    some English message just some，note to yourself such that later you can。refer
    back to all your commit messages，and know that all right at this。point in time
    in this commit this is the，change that I made that can just make it。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，通过提供一些英文信息，给自己做一些备注，以便以后能回顾所有提交信息，并知道在这个提交时我做了什么更改，这样可以更容易地跟踪你对特定git仓库所做的所有更改。因此，当你输入`git
    commit`后加上`-M`时，你可能会包含类似“我添加了一行新内容”的信息，当你这样做时，git会保存你代码的一个新快照。
- en: easier to keep track of all the changes，that you've made to a particular git。repository
    so when you type git commit，followed by - M you might include a。message something
    like I added a new，line for example and when you do get is。going to save a new
    snapshot of a，version of your code right now keeping。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，保持旧版本或曾经存在的旧版本记录在仓库中。所以让我们尝试实际提交一次，看看这将如何工作。我们已经通过运行`git add`添加了hello HTML文件作为一个需要跟踪的文件，但现在当我们满意时。
- en: track of the old version or old versions，that used to exist there inside of
    the。repository so let's try and actually，make a commit now and see how that's。actually
    going to work so we've already，added the file as by running git add to。say add
    the hello HTML file as one to，keep track of but now when we're happy。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_50.png)'
- en: with it and we could make additional，changes to the file if we want to I can。go
    back into the terminal and now say，git commit and then - M and then I can。specify
    the commit message some English，description of what it is that I did in。this most
    recent commit and what I did，was I added the hello dot HTML file so。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对文件进行额外的更改，如果我们想的话。我可以回到终端，输入`git commit`，然后加上`-M`，接着可以指定提交信息，一些英文描述我在这次最新提交中所做的事情。我所做的就是添加了hello.dot
    HTML文件。
- en: I'm just gonna say I added the hello to，the HTML file that was the change I
    made。in this most recent commit I'll go ahead，and press return and here's what
    it's。telling me it's telling me one file has，been changed with nine insertions
    so it。keeps track of changes in terms of how，many lines have been added or inserted。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我会说我添加了hello到HTML文件，这是我在最近提交中所做的更改。我会继续按下回车，这里告诉我有一个文件已更改，进行了九次插入，所以它在跟踪添加或插入的行数。
- en: and how many lines have been deleted or，removed and in this case it's telling
    me。there have been nine insertions to one，file because previously the file didn't。exist
    and now a file that has nine lines，does exist and now I have saved hello。![](img/930d8b513effaf77964ac86b639a5fa8_52.png)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_52.png)'
- en: dot HTML to this git repository so now，you might imagine if I go back to my
    git。repository on github website and refresh，it that maybe I'll see that hello
    dot。HTML file that I refresh and alright，nothing happened nothing changed I don't。see
    my hello dot HTML file and that's。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以想象，如果我返回到我的git仓库，在github网站上刷新，或许我会看到hello.dot HTML文件，刷新后，结果是，没什么变化，我没有看到我的hello.dot
    HTML文件。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_54.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_54.png)'
- en: because there's one final step here I'm，missing before my changes are going
    to。be reflected online recall that when I，ran the git clone step in order to clone。the
    repository from github github had a，version of the repository and I ran get。cloning
    to download a copy of that，repository onto my own computer and when。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 因为在我的更改反映在线之前，我缺少最后一步，请记住，当我运行 git clone 步骤来克隆 GitHub 上的仓库时，GitHub 有一个版本的仓库，而我运行
    `git clone` 来将该仓库的副本下载到我自己的电脑上。
- en: I ran get add to add the hello dot HTML，file or I ran get commit to say I would。like
    to save these changes，I was always making those changes only。to my local version
    of the repository，I was never effecting anything that was。already on github the
    changes I was，making were only happening on my own。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我运行 `git add` 来添加 hello dot HTML 文件，或者我运行 `git commit` 来表示我想保存这些更改，我一直在对本地版本的仓库进行这些更改，实际上并没有影响到已经在
    GitHub 上的内容，我所做的更改仅发生在我自己的电脑上。
- en: computer if I want to push those changes，up to github then I'm gonna need some。additional
    commands and in fact we can，see what's currently going on inside of。my repository
    using a command called git，status and what git status will do is。it'll tell us
    what's currently happening，inside of my repository so for example。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想将这些更改推送到 GitHub，那么我需要一些额外的命令，实际上我们可以使用一个名为 `git status` 的命令来查看我仓库当前发生的情况，`git
    status` 会告诉我们当前在我的仓库里发生了什么。
- en: if I were to in this current state run，the command git status then git is going。to
    report back to me and tell me that I，am currently on branch master more on。branches
    later but then it's saying my，branch is ahead of origin master by one。commit so
    this is a long-winded way of，saying that my local version of the。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我在当前状态下运行 `git status` 命令，Git 会向我报告并告诉我我当前在分支 master 上，稍后再说分支的事情，但它说我的分支比
    origin master 超前一个提交，因此这是一种啰嗦的说法，表明我的本地版本。
- en: repository the version of the repository，on my computer is ahead of the origin。version
    of the repository the version of，the repository that's up on github by。one commit
    that I have one commit that，the origin github does not have and it's。helpfully
    telling me I can use the，command git push to publish your local。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我电脑上的仓库版本比 GitHub 上的原始版本超前一个提交，也就是我拥有的一个提交是 origin GitHub 没有的，并且它友好地告诉我可以使用
    `git push` 命令来发布本地。
- en: commits get pushed as a command that I，can use in order to say I would like
    to。take my changes and actually push them，up to the server push them up to github。so
    that they're reflected there so after，we've checked our current status with。git
    status we can use the command git。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`git push` 是我可以使用的一个命令，表示我想将更改实际推送到服务器，推送到 GitHub，以便它们在那里被反映。因此，在检查了当前状态之后，我们可以使用命令
    `git`。'
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_56.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_56.png)'
- en: push to say that now whatever changes，that I've made when I run git push those。changes
    get pushed up to github so if，github has access to all of the commits。that I have
    now made so let's try those，two commands now get status to see。what's currently
    going on inside of my，repository and then get push to say I。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 推送时表示现在我所做的任何更改，在我运行 `git push` 时，这些更改会被推送到 GitHub，因此 GitHub 可以访问我现在所做的所有提交。所以让我们试试这两个命令，`git
    status` 查看我仓库当前的情况，然后 `git push` 表示我。
- en: would like to now push those changes to，github so that the online version of
    the。repository has the same contents as the，local version on my own computer alright。so
    in my terminal now I can run git，status and I see that I am on branch。master same
    as before it's a slightly，different message because there's。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我想现在将这些更改推送到 GitHub，以便在线版的仓库与我自己电脑上的本地版本内容相同。好的，现在在我的终端中我可以运行 `git status`，我看到我在分支
    master 上，与之前相同，只是消息稍有不同，因为。
- en: nothing currently inside the repository，but the key here is that now I can run。the
    command to get push to say take all，of the changes that I have made to my。repository
    and go ahead and push them up，to github so I'll type git push and。what's going
    to happen is going to，compress all the information and it's。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当前仓库里没有任何内容，但关键在于现在我可以运行 `git push` 命令，告诉系统将我对仓库所做的所有更改推送到 GitHub。因此，我会输入 `git
    push`，接下来会发生的是，它会压缩所有信息。
- en: going to push it up to github。![](img/930d8b513effaf77964ac86b639a5fa8_58.png)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要将其推送到 GitHub。![](img/930d8b513effaf77964ac86b639a5fa8_58.png)
- en: to this URL and now if I go back to，github website github。com slash my。repository
    and refresh the page I'll see，that I do actually now see something。different and
    so this is what github x'。![](img/930d8b513effaf77964ac86b639a5fa8_60.png)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到这个网址，现在如果我返回到，github 网站 github.com 斜杠我的。仓库并刷新页面，我会看到，实际上我现在看到一些。不同的东西，这就是 github
    x 的样子！[](img/930d8b513effaf77964ac86b639a5fa8_60.png)
- en: user interface actually looks like it，gives me a few pieces of information。![](img/930d8b513effaf77964ac86b639a5fa8_62.png)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 用户界面实际上看起来像，它给我几条信息。![](img/930d8b513effaf77964ac86b639a5fa8_62.png)
- en: it's telling me for example that there's，one commit currently made to the。repository
    that's the one I just made，that is on one branch so if I have only。created one
    branch the default one but，we'll see how to create more branches。later and in
    particular down below，you'll see the files that currently。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，它告诉我，目前在这个。仓库中有一次提交，就是我刚刚做的，那是在一个分支上，所以如果我只创建了一个分支，默认分支，但我们稍后会看到如何创建更多分支，特别是下面，你会看到当前的文件。
- en: exist inside of this repository that，right now I have this hello HTML file。which
    is the one that I pushed and in，particular next to it is the commit。message the
    message from the most recent，time that I touched to this file which。is in particular
    telling me that I added，the hello HTML file in the most recent。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个仓库中存在的，当前我有这个 hello HTML 文件。就是我推送的那个，特别是旁边是提交。信息，最近一次我修改这个文件的，信息特别告诉我我添加了，hello
    HTML 文件。
- en: commit that affected hello dot HTML and，if it were not Ida now to click on hello。dot
    HTML to actually see what's inside，of it I would see the same content that。I wrote
    in that file before I see，doctype HTML and then the hello world。page that we've
    seen a couple of times，now so I made the change on my own。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 提交影响 hello dot HTML 的内容，如果我现在不点击 hello。dot HTML 实际查看其内容，我会看到之前写入的相同内容，我看到，doctype
    HTML，然后是我们看到过几次的 hello world。页面，因此我在自己的文件上进行了更改。
- en: computer and I've now pushed them up to，github so they're now inside of this。repository
    that's now public such that，anyone else if they wanted to。collaborate on this
    project could take，this URL clone it to their own computer。and make their own
    changes locally as，well and so now we can explore how we。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机上，我现在已将它们推送到，github 所以它们现在在这个。仓库中，现在是公开的，以便，任何其他人如果他们想要。协作这个项目可以获取，这个 URL
    克隆到他们自己的计算机。并在本地进行更改，因此现在我们可以探索我们。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_64.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_64.png)'
- en: might be able to make additional changes，to this web page as well so if for。example
    I wanted to add a heading to，this web page for instance I might at。the top of
    the body say something like。![](img/930d8b513effaf77964ac86b639a5fa8_66.png)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 也许我能对这个网页进行额外的更改，所以如果例如我想给，网页添加一个标题，比如我可能在。主体的顶部说些像。![](img/930d8b513effaf77964ac86b639a5fa8_66.png)
- en: in an h1 tag welcome to my website and，now if I you know just for good measure。open
    up hello dead HTML see what it。![](img/930d8b513effaf77964ac86b639a5fa8_68.png)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个 h1 标签中，欢迎来到我的网站，现在如果我你知道，出于良好的措施。打开 hello dead HTML 看看是什么。![](img/930d8b513effaf77964ac86b639a5fa8_68.png)
- en: looks like this is not what my web page，now looks like and now I've made changes。to
    my hello dot HTML file changes that，have not yet been saved and I can tell。that
    if I run get status get status is，your go-to for telling you what's。currently
    going on inside of your，repository so here we see changes not。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来这不是我网页的样子，而我已经对我的 hello dot HTML 文件进行了更改，这些更改还没有保存。我可以通过运行 git status 来判断，git
    status 是告诉你当前你在，仓库内发生了什么的去处，所以在这里我们看到有更改未。
- en: staged for commit which is a fancy way，of saying files that have been changed。but
    I haven't said I would like to keep，track of them in the next commit it's。telling
    me that I've modified hello dot，HTML but，it's not something that get is currently。going
    to keep track of the next time I，make a save so if I want to save hello。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 已暂存以便提交，这是一个华丽的说法，指的是已更改的文件，但我还没有说我想要在下一次提交中跟踪它们，它告诉我我修改了 hello dot，HTML，但这不是
    git 目前将要跟踪的东西。下次我保存时，所以如果我想保存 hello。
- en: dot HTML when I commit for the next time，then I'll first need to run get ad
    hello。HTML and then I could run and get commit，but there's actually a bit of a。shorthand
    here if you want to add all of，the files that have been changed and。commit at
    the same time the shorthand is，git commit - am remember before we just。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: dot HTML 当我下一次提交时，首先需要运行 git add hello。HTML 然后我可以运行 git commit，但其实这里有一个简写，如果你想同时添加所有已经。更改的文件并提交，简写是
    git commit - am 记得之前我们刚才。
- en: used - M to say specify a message，- a。m。means git commit all of the files。that
    have been changed a for all and，also provide a message so you can。combine the
    git add step and get commit，step into just a single step by saying。I'd like to
    commit all of the files that，I've changed and then I'll provide a。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 -M 来指定一个消息，-a.m意味着git提交所有已经更改的文件，a代表所有，并且还提供一个消息，因此你可以将git add步骤和git commit步骤合并成一个步骤，说明我想提交所有更改的文件，然后我会提供一个。
- en: message what exactly did I change I，added a headache I'll go ahead and press。return
    it's kept track of the fact that，I have now changed one file with one。insertion
    all I did was add one new line，to that file and now if I run git status。it's going
    to tell me I'm on branch，master and I am ahead of origin/master。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 消息，我到底改变了什么，我添加了一个标题，我将按回车键，它记录了我现在更改了一个文件，并插入了一行，所有我做的只是向该文件添加了一新行，现在如果我运行git
    status，它会告诉我我在master分支上，并且我领先于origin/master。
- en: origin master being the version on，github by one commit that I have this。![](img/930d8b513effaf77964ac86b639a5fa8_70.png)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: origin master是github上的版本，增加了我这一提交。![](img/930d8b513effaf77964ac86b639a5fa8_70.png)
- en: add a heading commit but right now on，github if i refresh this page it's still。showing
    the old version of that page in，order to take my changes that I've made。![](img/930d8b513effaf77964ac86b639a5fa8_72.png)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一个标题提交，但现在在github上，如果我刷新这个页面，它仍然显示的是那个页面的旧版本，为了让我的更改生效。![](img/930d8b513effaf77964ac86b639a5fa8_72.png)
- en: on my computer and make sure they're，updated on github I can just run git。![](img/930d8b513effaf77964ac86b639a5fa8_74.png)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的电脑上，确保它们在github上是最新的，我可以直接运行git。![](img/930d8b513effaf77964ac86b639a5fa8_74.png)
- en: push to say push those changes up to，github and once that's done I can now。refresh
    the page on github and I'll now，see that github now has the latest。version of
    my program as well it now has。![](img/930d8b513effaf77964ac86b639a5fa8_76.png)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 推送，将这些更改推送到github，一旦完成，我现在可以刷新github上的页面，我会看到github现在拥有我的程序的最新版本，它现在有。![](img/930d8b513effaf77964ac86b639a5fa8_76.png)
- en: this h1 it says welcome to my website，so that's get push now the ability for。me
    to say I would like to make the take，the changes that I have made to the。Myatt
    repository and push them up to，some remote server the remote server on。github
    for example but we can also go in，the opposite way you might imagine that。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这个h1说“欢迎来到我的网站”，所以这就是git push，现在我可以说我想将我对Myatt仓库所做的更改推送到某个远程服务器，例如github上的远程服务器，但我们也可以反向操作，你可能会想象。
- en: maybe the version that's up on github is，more recent than the version that I
    have。![](img/930d8b513effaf77964ac86b639a5fa8_78.png)
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 也许在github上的版本比我拥有的版本更新。![](img/930d8b513effaf77964ac86b639a5fa8_78.png)
- en: on my computer and in that case I would，like to download the latest version
    of。the repository that currently exists on。![](img/930d8b513effaf77964ac86b639a5fa8_80.png)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的电脑上，在这种情况下，我想下载当前存在于的最新版本的仓库。![](img/930d8b513effaf77964ac86b639a5fa8_80.png)
- en: github and in order to do that we can，use a command called get pole how does。![](img/930d8b513effaf77964ac86b639a5fa8_82.png)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: github，为了做到这一点，我们可以使用一个叫做get pole的命令，怎么做呢？![](img/930d8b513effaf77964ac86b639a5fa8_82.png)
- en: that work well when I run it get pulled，what's going to happen is the opposite，of
    what get pushed。well get push took my changes on my，computer and pushed them up
    to github。get pull will say take the changes that，currently exist on github and
    go ahead。and pull the most recent changes down so，that I and my local version
    of the。
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行git pull时，发生的事情是与git push相反。git push将我在电脑上的更改推送到github。git pull会说取回当前在github上存在的更改，并拉取最新的更改到本地，这样我和我本地的版本。
- en: repository have access to the latest，version of all of the code that is。currently
    on github and we can，demonstrate this for example if I go。back and take a look
    at github website，itself because on github I actually have。the ability to edit
    files using github，interface so I'm gonna simulate like。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 仓库可以获取当前在github上的所有代码的最新版本，我们可以举例演示，比如我回去看看github网站本身，因为在github上，我实际上有能力使用github界面编辑文件，所以我将模拟一下。
- en: someone else working on this project for，example maybe someone else added a。second
    heading so they add an h2 that，says just hello for example and then。they can provide
    a commit message this，is sort of a graphical equivalent to the。dash M and then
    a message that we，provided before they can say added h2。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，其他人在这个项目上工作，也许其他人添加了一个第二个标题，他们添加一个h2，内容是“你好”，然后他们可以提供一个提交消息，这大致上是-dash M的图形等效物，以及我们之前提供的消息，他们可以说添加了h2。
- en: and then commit so this is another way，to edit a git repository is by literally。adding
    it in editing it inside of github，interface again up allows you to just。edit a
    file and then add or modify any，of the lines there so now the version on。github
    is actually different from the，version that we have on our computer。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 然后提交，这是一种编辑 Git 仓库的方式，实际上是在 GitHub 界面内部进行添加和编辑。这使你可以直接编辑文件，添加或修改任何行，因此现在 GitHub
    上的版本实际上与我们电脑上的版本不同。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_84.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_84.png)'
- en: that if we look at hello dot HTML here I，only see the h1 and I don't see the
    h2。that was just added because it's a more，recent commit that I don't yet have。![](img/930d8b513effaf77964ac86b639a5fa8_86.png)
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看 hello.html，我只看到 h1，而没有看到刚添加的 h2，因为这是一个我尚未拥有的更近期的提交。![](img/930d8b513effaf77964ac86b639a5fa8_86.png)
- en: access to but if I want to download that，commit then what I can say is inside
    my。terminal I can say git pull in order to。![](img/930d8b513effaf77964ac86b639a5fa8_88.png)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 访问，但是如果我想下载那个提交，我可以在我的终端中输入 git pull 来实现。![](img/930d8b513effaf77964ac86b639a5fa8_88.png)
- en: download it and alright it's updated one，file it's made some changes and so
    now。if I go back to the file you'll notice，that automatically I now have the latest。version
    of the file I now have this h2，that says hello because I've pulled the。latest
    version of the file down from。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并更新了一个文件，进行了些修改，所以现在如果我回到文件，你会注意到我现在自动获得了最新版本的文件，现在有了这个说 hello 的 h2，因为我从中拉取了最新版本的文件。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_90.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_90.png)'
- en: github so by a combination of get push，and get pull I can make changes to my。code
    push them up to github and also get，access to the latest version of code。that
    already is on github but as we do，this you might imagine that we could run。into
    some sort of problem in particular，we might run into a problem if I've been。
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 通过组合 git push 和 git pull，我可以对我的代码进行更改，将其推送到 GitHub，并获得已在 GitHub 上的最新版本代码。但是在这个过程中，你可能会想象我们可能会遇到某种问题，特别是如果我一直在。
- en: '![](img/930d8b513effaf77964ac86b639a5fa8_92.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/930d8b513effaf77964ac86b639a5fa8_92.png)'
- en: making changes to my code and some，someone else working on my same project。
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对我的代码进行更改，而其他人在我的同一个项目上工作。
