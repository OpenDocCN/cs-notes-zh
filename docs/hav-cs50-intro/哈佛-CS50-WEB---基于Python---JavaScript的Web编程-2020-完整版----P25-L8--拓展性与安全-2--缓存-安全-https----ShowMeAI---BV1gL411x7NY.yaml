- en: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P25：L8- 拓展性与安全 2 (缓存，安全，https)
    - ShowMeAI - BV1gL411x7NY
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈佛 CS50-WEB ｜ 基于Python ／ JavaScript的Web编程(2020·完整版) - P25：L8- 拓展性与安全 2 (缓存，安全，https)
    - ShowMeAI - BV1gL411x7NY
- en: articles might not be changing all that，frequently if one person makes a request。one
    second and another person makes the，same request half a second later it。probably
    is not going to be useful to，re-request all the information from the。database
    regenerate that template yet，again because it's an expensive process。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 文章可能不会经常改变，如果一个人发出请求，一秒后另一个人又发出同样的请求，那么从数据库重新请求所有信息以再次生成该模板可能没有什么用，因为这是一项昂贵的过程。
- en: of requesting data from the database of，generating that template we'd ideally。like
    some way of dealing with that，problem and the way we can deal with。that problem
    is some form of caching and，caching refers to a whole bunch of。different types
    of ideas and tools that，we can use of various different places。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据库请求数据或生成模板时，我们理想上希望有某种方法来处理这个问题，而我们可以解决这个问题的方式是某种形式的缓存，缓存指的是我们可以在不同地方使用的一系列不同类型的想法和工具。
- en: inside of our system but in general when，we're talking about caching we're。talking
    about storing a saved version of，some information in a way that we can。is it more
    quickly so that we don't need，to continue making requests to a。database for example
    and so there are a，number of ways we can do caching one way。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的系统中，一般来说，当我们谈论缓存时，我们是在谈论以某种方式存储某些信息的已保存版本，以便我们能够更快速地访问，因此我们不需要继续向数据库发出请求。例如，有许多方式可以进行缓存。
- en: we can do caching is on the client side，via client-side caching where the idea。is
    that your browser whether it's Safari，or Chrome or something else is able to。cache
    data store information so that the，browser doesn't need to re-request the。same
    information the next time if it is，the page for example if you request a。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在客户端进行缓存，通过客户端缓存，想法是你的浏览器，无论是Safari、Chrome还是其他浏览器，都能够缓存数据，存储信息，这样浏览器下次就不需要重新请求相同的信息了，举个例子。
- en: page and it loads an image on the page，for example and you reload the page well。your
    web browser might try and make a，request again for the exact same image。and then
    display it to you but an，alternative might be that your web。browser could just
    save a copy of the，image inside of a cache to locally store。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 假设该页面加载了一张图片，并且你重新加载该页面，那么你的网页浏览器可能会尝试再次请求同样的图片，然后显示给你，但另一种可能是你的网页浏览器可以在缓存中保存该图片的副本以供本地存储。
- en: a version of the image so that the next，time that the user makes a request to。the
    website the user doesn't need to，reload that entire image and that might。be true
    of entire web pages and web，resources that if there's some page that。doesn't change
    very often then if the，web browser just stores a cached a saved。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 存储该图片的一个版本，这样下次用户向网站发出请求时，用户就不需要重新加载整个图片，这也适用于整个网页和网络资源。如果某些页面不常改变，那么如果网页浏览器缓存了已保存的版本。
- en: version of that page then the next time，the user goes to their web browser tries。to
    access that page rather than re，request to the server and make a new。request that
    the server needs to respond，to if the browser has that page cached。the browser
    can just display the cached，saved version of the page if saving the。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户下一次访问他们的网页浏览器时尝试访问该页面，而不是重新向服务器发出请求并进行新的请求，如果浏览器缓存了该页面，浏览器可以直接显示缓存的已保存页面。
- en: need to talk to the server at all so，this can certainly help to reduce the。load
    on any given server that if users，are caching information inside of the。web browser
    it makes the experience，faster for the user because they can see。the information
    immediately rather than，need to make a request and wait for a。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能根本不需要与服务器交互，因此这肯定有助于减少特定服务器的负担，因为如果用户在网页浏览器中缓存了信息，用户体验会更快，因为他们可以立即看到信息，而不需要发出请求并等待响应。
- en: response to come back and it's good for，the server because the server doesn't。need
    to be dealing with as many requests，if some of those requests are getting。cached
    and so one approach to trying to，do this is by adding this inside of the。headers
    of an HTTP response that when，your web server responds to some。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 响应回来的好处在于服务器不需要处理那么多请求，如果其中一些请求得到了缓存。因此，尝试解决这个问题的一种方法是在HTTP响应的头部中添加一些内容，当你的web服务器响应某些请求时。
- en: requests the web server can include a，line like this inside of the response。something
    like cache control max-age，86，400 in effect specifying the number。of seconds that
    you should cache this，resource for but if I try to access this。page 10 seconds
    later well that's less，than 80 6400 so rather than reload and。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 网络服务器可以在响应中包含类似这样的行：cache control max-age 86,400，实际上是指定你应该缓存此资源的秒数。但如果我在10秒后尝试访问这个页面，那就少于86,400秒，因此不必重新加载。
- en: read request the entire page，we're just going to use the version of。the page
    that happens to be cached，inside of the web browser and so this。has several advantages
    that we've talked，about in terms of reducing the amount of。time it takes to see
    the content of a，page because it's already saved and。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请求整个页面时，我们只是使用网页浏览器中缓存的版本。因此，这有几个优势，我们在减少查看页面内容所需时间方面已经讨论过，因为它已经保存。
- en: reducing the load on any particular，server but it also has drawbacks that if。for
    example the resource changes within，this amount of time that maybe in 60。seconds
    the page has changed if I try，and load the page again well then if。it's loading
    the cached version of the，page I might be seeing an outdated。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这减轻了对任何特定服务器的负载，但也有缺点，例如如果在这段时间内资源发生了变化，假设在60秒内页面发生了变化，如果我再次加载页面，加载的是缓存的版本，我可能会看到过时的内容。
- en: version of a webpage I'm seeing an older，version of the webpage because my web。browser
    just so happens to have that，particular resource cached and this。might be true
    of a web page it's，especially true of other like static。resources things like
    CSS files of，JavaScript files but the CSS of a web。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我看到的网页版本是旧版本，因为我的网页浏览器恰好缓存了该特定资源。这种情况可能适用于网页，尤其适用于其他静态资源，例如CSS文件或JavaScript文件，但网页的CSS。
- en: page probably doesn't change all that，often and so as a result it's pretty。natural
    that your web browser rather，than request the exact same CSS files。again and again
    and again might just，save a copy of that those CSS files。cache them such that
    it's able to just，reuse the cached version but if the。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 页面可能并没有经常变化，因此很自然的是，网页浏览器不会一次又一次请求完全相同的CSS文件，而是可能只会保存这些CSS文件的副本，将其缓存，以便能够重复使用缓存版本。
- en: website were to update their CSS you，might not see the latest changes and you。might
    have experienced this yourself if，you're working on your own web。applications
    when you change your CSS，and refresh the page you might not。always see those changes
    reflected if，your web browser is caching those。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果网站更新了他们的CSS，你可能看不到最新的更改。如果你在自己开发网页应用时更改CSS并刷新页面，你可能不会总是看到这些更改被反映出来，如果你的网页浏览器正在缓存这些内容。
- en: results and so in most web browsers you，can do a hard refresh to say ignore。whatever
    is in the cache and actually go，out and make a new request and get some。new data
    but ultimately if you don't do，that you're subject to this cache。control where
    the web browser is going，to say unless this number of seconds has。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在大多数网页浏览器中，你可以进行硬刷新，忽略缓存中的内容，实际上发出新请求并获取一些新数据。但最终如果你不这样做，你就会受到缓存控制的限制，网页浏览器将会说，除非经过的秒数达到了这个数字。
- en: elapsed we're going to reuse the，existing version of the page and so an。alternative
    to this approach and this，approach certainly works and is quite。popular we can
    add to this approach by，adding what's known as an e-tag and the。e-tag for a resource
    like a CSS file or，an image or a JavaScript file is just。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦过去了一段时间，我们将重新使用现有版本的页面。因此，这种方法的替代方案（这确实有效且相当流行），我们可以通过添加称为e-tag的内容来扩展这一方法。资源（如CSS文件、图像或JavaScript文件）的e-tag就是。
- en: some unique sequence of characters that，identifies a particular version of a。resource
    it identifies a particular，version of a CSS file or a JavaScript。file for example
    and what this allows a，program to do like a web browser is that。when a web browser
    requests a resource，like makes a request for a CSS file or a。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一些独特的字符序列，标识特定版本的资源，比如标识一个CSS文件或JavaScript文件的特定版本。这允许程序（如网页浏览器）在请求资源时，例如请求一个CSS文件。
- en: JavaScript file they get it back，and they get its associated etag value。so I
    know that this is the value that is，associated with this version of the CSS。file
    and if the web browser web server，were ever to change that CSS file。replace it
    with a new updated CSS file，the corresponding e tag will also change。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript文件，它们会收到返回和相关的etag值。因此我知道这是与这个版本的CSS文件相关的值，如果网络浏览器的网络服务器曾经更改了那个CSS文件，并用一个更新的CSS文件替换它，对应的etag也会改变。
- en: so why is this helpful well it means，that if I am trying to decide should I。load
    a new version of the resource or，not should I try and make another。request to
    get the latest version of the，CSS what I can do first is just ask for。what is
    the e-tag value this short，sequence that can be answered very。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这有什么好处呢？这意味着如果我在考虑是否应该加载资源的新版本，或者是否应该尝试另一个请求以获取最新的CSS，首先我可以问一下etag值，这个短小的序列可以在浏览器中快速回答。
- en: quickly very quickly we can just respond，and say you know what if the e-tag
    value。is the same as what I remembered from，last time well then I don't need to
    get。a whole new version of that resource and，so this is quite common - that our
    web。browser will say hey let me request this，resource but I already have a version
    of。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，我们可以回应说，如果etag值与我上次记住的相同，那么我就不需要获取整个新版本的资源，因此这很常见 - 我们的网页浏览器会说，嘿让我请求这个资源，但我已经有一个版本。
- en: the resource with this particular etag，so if that etag is still the retag for。the
    most recent version of a particular，resource like a CSS or JavaScript file。then
    no need for the web server to send，a new version of that file just go ahead。and
    respond and say the version you have，that one works totally fine but if there。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 资源上指定这个特定etag，如果该etag仍然是某个特定资源（如CSS或JavaScript文件）最新版本的etag，那么网络服务器就不需要发送该文件的新版本，只需回应并说你拥有的版本，那个完全可以使用，但如果有。
- en: is a new version well then the web，server can respond with the new asset。the
    new CSS file for example but also，the new etag value so these two。approaches can
    work in concert with each，other that you can say go ahead and cash。this for some
    number of seconds so that，for some number of seconds you're not。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 是一个新版本，那么网络服务器可以用新资产进行响应。例如新的CSS文件，还有新的etag值，因此这两种方法可以相辅相成，你可以说继续缓存这些，持续一段时间，因此在这段时间内你不会。
- en: going to ever request a new version of，that resource but even if you do ask
    for。a new version of the resource after this，number of seconds is elapsed if the。e-tag
    value hasn't updated then no need，to redownload a whole new version of a。particular
    file you can just reuse the，version and that happens to be cached。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 决定请求该资源的新版本，但即使你在这段时间过后请求新的版本，如果etag值没有更新，那么就不需要重新下载特定文件的整个新版本，你可以直接重用缓存的版本。
- en: already in the browser so caching and，the browser can be an incredibly。powerful
    tool for trying to speed up，these requests for trying to reduce the。load on any
    particular server but the，client-side is not the only place where。we can begin
    to do this kind of caching，we also have the ability to do。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 所以缓存和浏览器可以是一个极其强大的工具，来加速这些请求，减轻特定服务器的负担，但客户端并不是我们开始进行这种缓存的唯一地方，我们也有能力进行。
- en: server-side caching and in server-side，caching we're going to introduce to our。picture
    the notion of a cache that we，have these multiple servers that are all。communicating
    with the database but，these servers can also communicate with。a cache someplace
    where we've stored，information that we might want to reuse。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端缓存，在服务器端缓存中，我们将向我们的概念介绍一个缓存，拥有多个服务器与数据库进行通信，而这些服务器也可以与某个地方的缓存进行通信，在那里我们存储可能想要重用的信息。
- en: later rather than have to do all of that，recalculation and jangling turns out
    has。an entire cache framework a whole host，of features that Django offers that。allow
    us to leverage this ability to use，the cache to be able to speed up。requests so
    there are per view caches，where you can specify a cache on a。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是做所有的重新计算，结果发现Django有一个完整的缓存框架和一整套功能，允许我们利用这个能力使用缓存来加速请求，因此有按视图缓存，可以在。
- en: particular view to say that rather than，run through all this Python code every。time
    someone makes a request to this，particular view instead and just cache。the view
    so that for the next 30 seconds，or 30 minutes the next time someone。tries to visit
    the same view go ahead，and just reuse the results of the last。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 特别的观点是，与其每次有人请求这个特定视图时都运行所有的Python代码，不如缓存该视图，这样在接下来的30秒或30分钟内，当下一个人尝试访问相同视图时，可以直接重用上次的结果。
- en: time that that view was loaded and this，can work not just for a single view
    it。can work for fragments inside of a，template that your template might have。multiple
    different parts that on your，webpage you might render the navigation。bar in the
    sidebar and the footer may be，based on information about today that。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 上次加载该视图时的时间，这不仅适用于单一视图，也适用于模板中的片段，模板可能包含多个部分，在网页上，你可能会根据当天的信息渲染导航栏、侧边栏和页脚。
- en: might change the next day but if you，expect that the sidebar of your page is。not
    going to change very often within，the same minute or within the same hour。well
    then you might imagine caching that，part of the template so the next time。that
    django tries to load that entire，template it doesn't need to recalculate。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 可能第二天会改变，但如果你预期页面的侧边栏在同一分钟或同一小时内不会频繁更改，那么你可以考虑缓存模板的这一部分，这样当django尝试加载整个模板时，就不需要重新计算。
- en: how to generate the sidebar for your，website it just knows that we can use。the
    saved version of the sidebar from，the last time that we loaded this。website instead
    and jingle also gives，you access to a lower level cache API。where for any information
    that you might，want to cache and store for use later。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如何为你的网站生成侧边栏，它只需知道我们可以使用上次加载该网站时保存的侧边栏版本，jingle还提供了访问较低级缓存API的能力，方便你缓存和存储任何信息以供后用。
- en: you can save that information inside of，the API you make an expensive database。query
    that takes a couple of，milliseconds or a couple of seconds to。process you can
    save those results，inside of a cache to make it easier to。access that same data
    if ever you tried，to get access to that again so caching。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将信息保存在API中，进行一次耗时几毫秒或几秒钟的数据库查询，你可以将这些结果保存在缓存中，以便下次访问同样的数据时更容易获取。
- en: allows us to be able to deal with these，issues of scale by reducing load on
    our。servers but also on our databases that，rather than need to talk to the database。every
    single time we make a new request，for a particular web application we can。just
    reuse information that happens to，be in the cache to allow our web。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们能够通过减少服务器和数据库的负载来处理这些规模问题，而不是每次对特定网页应用程序发出新请求时都与数据库进行交互，我们可以重用缓存中已有的信息，从而提升我们的网页应用。
- en: applications to become even more，scalable so that then was a look at some。issues
    concerning scalability and will，next turn our attention to。security trying to
    make sure that as we，build our web applications as we deploy。our web applications
    and more users，start to use them we want to make sure。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序可以变得更加可扩展，因此我们会看一些与可扩展性相关的问题，然后将注意力转向安全，确保在构建和部署我们的网络应用程序时，随着更多用户的使用，我们要确保安全。
- en: that they're secure and there are a，whole bunch of security considerations。to
    take into account across all of the，topics we've looked at in the course。we've
    looked at a number of different，topics and with each of them there are。security
    vulnerabilities there are ideas，to be mindful of when it comes towards。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 他们确保安全，还有一大堆安全考虑因素需要在我们所研究的所有主题中加以考虑。我们已经看过多个不同的主题，每个主题都有安全漏洞，需要注意相关的想法。
- en: making sure that our applications are，secure and we can begin our story in。fact
    by talking about git and version，control git is all about trying to make。sure
    we're able to keep track of，different versions of our code and one。thing that
    goes hand-in-hand with git is，this idea of open source software that。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们的应用程序是安全的，我们的故事实际上可以从git和版本控制开始，git的核心在于帮助我们跟踪代码的不同版本，而与git密切相关的是开源软件的概念。
- en: on websites like github and other，services that hosts get repositories。increasingly
    a lot of software is，becoming open source where anyone can。see and contribute
    to the source code of，an application and this is great in the。sense that it allows
    for many people to，be able to collaborate work together in。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在像GitHub和其他托管git存储库的服务的网站上，越来越多的软件正变成开源，任何人都可以查看并贡献应用程序的源代码，这在某种意义上是很棒的，因为它允许很多人能够合作共同工作。
- en: order to try to find bugs that might，exist inside of a web application but it。also
    comes with drawbacks drawbacks，where if there is a bug in the。application now
    someone who's looking，through the source code of our program。might be able to
    spot that bug or you，might imagine that because gate keeps。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了尝试发现可能存在于网络应用中的错误，但这也带来了缺点，如果应用程序中有一个错误，现在查看我们程序源代码的人可能会发现这个错误，或者你可能会想象，因为
    gate keeps。
- en: track of different versions of our code，every time we make a commit to our。repository
    you have to be very careful，when it comes towards credentials or。things that might
    leak inside of the，source code you generally never want to。put passwords or any
    secure information，inside of the git repository because the。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪我们代码的不同版本，每次我们向存储库提交时，你必须非常小心关于凭证或可能泄漏到源代码中的东西。通常情况下，你绝对不想把密码或任何安全信息放入git存储库中，因为。
- en: git repository could be shared with，other people it might be open to anyone。to
    look at and so those are security，considerations to be mindful there as。well that
    if you make a commit and，accidently make a commit to your code。![](img/cdd7efd64de809f73ede64b817f02ea2_1.png)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: git存储库可能会与其他人共享，可能向任何人开放以供查看，因此这些都是需要注意的安全考虑因素，如果你进行提交并意外地提交了你的代码。![](img/cdd7efd64de809f73ede64b817f02ea2_1.png)
- en: where you expose those credentials you，might remove those credentials and。commit
    again so the latest version of，your program doesn't have those。credentials in
    it but someone who has，access to the gate repository has access。not just to the
    latest version of your，code but to every version of your code。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你暴露了这些凭证，你可以删除这些凭证并再次提交，因此你程序的最新版本不包含这些凭证，但拥有访问git存储库的人可以访问的不仅是你代码的最新版本，还有你代码的每个版本。
- en: and that person could theoretically go，back through the history of the。repository
    and find the commit where the，credentials were exposed and see those。credentials
    as well so while get is a，very powerful tool it's also one to be。mindful of that
    any change you make，could potentially get saved inside of a。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 而那个人理论上可以回顾存储库的历史记录，找到凭证暴露的提交，并查看那些凭证。因此，虽然git是一个非常强大的工具，但这也是需要注意的，任何你所做的更改可能会被保存在一个。
- en: commit could potentially therefore be，accessed later on and so if ever。credentials
    that are exposed inside，the repository you want to make sure to。wipe out all those
    previous commits and，not just make some new commits in order。to try and hide the
    previous credentials，that can be exposed because they can。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 提交因此可能会在稍后被访问，所以如果存储库中暴露了凭证，你要确保删除所有之前的提交，而不仅仅是进行一些新的提交来试图隐藏之前可能暴露的凭证，因为它们可以。
- en: still be retrieved as someone goes back，through the history of any particular。repository
    and so that then was a look，at some issues that might get we also。talked to the
    beginning of the course，about HTML and about what it is that we。can use with HTML
    and how we can use，this language in order to design the。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然可以在任何特定存储库的历史记录中检索到，因此那时我们查看了一些可能出现的问题，我们还在课程开始时讨论了HTML，以及我们可以用HTML做什么，以及我们如何使用这种语言来设计。
- en: structure of a web page in order to，decide where all of the paragraphs are。going
    to be what tables are going to be，on the page we talked about links and。how we
    can use anchor tags to link one，page to another page now one concern and。is this
    type of attack known as a，phishing attack with HTML and a phishing。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 网页的结构，以决定所有段落将放在哪里，页面上将包含哪些表格，我们讨论了链接以及如何使用锚标签将一个页面链接到另一个页面。现在一个关注点是这种攻击类型，称为网络钓鱼攻击，与HTML有关，网络钓鱼。
- en: attack really just comes down to a，little bit of HTML that looks like this。very
    easy to write where I have an，anchor tag that is going to direct the。user to URL
    1 but it looks like it，directs the user to URL 2 so what might。an example of this
    be all right so we'll，take a look I'll go ahead and open up。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击实际上只涉及一小段HTML，像这样非常简单的代码，我有一个锚标签，它将用户引导到URL 1，但看起来是引导用户到URL 2。这种情况的例子是什么呢？
- en: link dot HTML and in linked out HTML I，have a website that I've written that。appears
    to have a link to Google but if，I click on that link I'm suddenly。directed to
    this courses web site for，example so how did that happen why did。![](img/cdd7efd64de809f73ede64b817f02ea2_3.png)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: link.html，在linked out HTML中，我写了一个网站，看起来有一个指向谷歌的链接，但如果我点击那个链接，我突然被引导到了这个课程网站。那是怎么发生的，为什么会这样？
- en: that happen it seems like it's linking，to Google well if you look at the code。if
    I go ahead and open up linked on HTML，we'll see that here I have an anchor tag。that
    actually links to the course，website but appears to be linking the。text that the
    user sees it appears that，it is linking instead to Google and so。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来它在链接谷歌，如果你查看代码，打开linked on HTML，你会看到这里有一个锚标签，它实际上链接到课程网站，但看起来是链接到谷歌。
- en: this is a very common attack vector。![](img/cdd7efd64de809f73ede64b817f02ea2_5.png)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常常见的攻击向量。
- en: especially in emails for example you，might see an email that tells you to。click
    on a particular link but that link，takes you to somewhere else entirely。instead
    and as a result someone might，inadvertently share their bank account。credentials
    or other sensitive，information and so here too，something to be mindful of if you。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在电子邮件中，例如，你可能会看到一封电子邮件告诉你点击某个链接，但那个链接实际上会把你带到完全不同的地方，因此有人可能会不小心分享他们的银行账户凭证或其他敏感信息，这里也要引起注意。
- en: interact with the web maybe not，necessarily on your own website but in。other
    websites you might interact with，just to be mindful about where links are。actually
    taking you and most web，browsers if you hover over a link will。show you where
    that link might actually，be directing you to because it might be。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 互动网络时，可能并不一定在你自己的网站上，但在其他网站上你可能会互动，务必注意链接实际上将你带到哪里。大多数网页浏览器在你悬停在链接上时会显示该链接可能实际指向的地方，因为它可能是。
- en: different than what the text of that，particular anchor tag might appear to，link
    you to instead。and so HTML has all these various，different vulnerabilities where
    because。you can just decide what you want the，structure of the page to be it leaves。open
    the possibility that someone might，try to trick you into thinking that。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 与文本中该特定锚标签所显示的内容不同，它可能链接到其他地方。因此，HTML存在各种不同的漏洞，因为你可以决定页面的结构，这就留下了有人试图欺骗你的可能性。
- en: you're going to a page that you're not，actually on and this problem is more。widespread
    because anyone can look at，the HTML for any page HTML comes back。from the server
    and therefore the web，browser has access to all of that HTML。and can use that
    HTML in order to render，a page for example and this leaves open。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你正在访问一个实际上并不在的页面，这个问题更为普遍，因为任何人都可以查看任何页面的HTML。HTML来自服务器，因此网页浏览器可以访问所有这些HTML，并可以使用这些HTML来渲染页面，这留下了开放的可能性。
- en: other vulnerabilities too so for example，let me go ahead and go to Bank of。America
    calm just Bank of America's，website you go to any other website。instead if I wanted
    to create a fake，version of Bank of America's website for。example to trick people
    into thinking，they're going to Bank of America's。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 其他漏洞也是如此，例如，让我去美国银行（Bank of America）的官网，如果我想创建一个假冒的美国银行网站，以欺骗他人认为他们正在访问美国银行。
- en: website when really they're going to my，website well then what I can do is just。go
    ahead and view the source of this。![](img/cdd7efd64de809f73ede64b817f02ea2_7.png)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，他们将访问我的网站。那么我可以查看这个网页的源代码。
- en: page I'll go ahead and view page source，and here is all of the HTML for Bank
    of。America's website and nothing then stops，me from copying all this content going。into
    an HTML file and creating a new，file then I'll just call like Bank HTML。then I'll
    go ahead and paste in the。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我将查看页面源代码，这里是美国银行网站的所有HTML，没有什么可以阻止我复制所有这些内容，放入HTML文件中，创建一个新文件，然后我将其命名为Bank
    HTML，然后我会粘贴进去。
- en: '![](img/cdd7efd64de809f73ede64b817f02ea2_9.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cdd7efd64de809f73ede64b817f02ea2_9.png)'
- en: contents of that HTML file so here then，is all of Bank of America's HTML and
    now。if I open up Bank HTML that HTML file，that I have now written but really just。![](img/cdd7efd64de809f73ede64b817f02ea2_11.png)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 那个 HTML 文件的内容在这里，那么这是全部的美国银行的 HTML，现在如果我打开 Bank HTML，这个我现在写的 HTML 文件其实只是。![](img/cdd7efd64de809f73ede64b817f02ea2_11.png)
- en: copied from Bank of America I open it up，and now here on my page is a web page。that
    appears to look like Bank of，America it's using all of Bank of。America's HTML
    but instead it is my HTML，page and not actually Bank of America。and so you might
    imagine combining these，to create an even more concerning attack。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 从美国银行复制的，我打开它，现在我的页面上是一个看起来像美国银行的网页，它使用了美国银行的所有 HTML，但实际上是我的 HTML 页面，而不是美国银行。因此，你可能想象将这些结合在一起，创建一个更加令人担忧的攻击。
- en: vector where instead of linking to，Google com let me try and link to Bank。of
    America com but where I'm actually。![](img/cdd7efd64de809f73ede64b817f02ea2_13.png)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 向 Google com 链接的方式，试试链接到美国银行 com，但实际上我。![](img/cdd7efd64de809f73ede64b817f02ea2_13.png)
- en: going to link to is Bank dot HTML my，version of Bank of America's website。![](img/cdd7efd64de809f73ede64b817f02ea2_15.png)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我将链接到的是 Bank dot HTML，我的美国银行网站版本。![](img/cdd7efd64de809f73ede64b817f02ea2_15.png)
- en: where now if I open up link HTML here，appears to be a link that links me to。Bank
    of America com if I click on that，link I get to a page that looks like。Bank of
    America's website but it's not。![](img/cdd7efd64de809f73ede64b817f02ea2_17.png)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我打开链接 HTML，这里似乎有一个链接指向美国银行的网站。如果我点击那个链接，我会进入一个看起来像美国银行网站的页面，但它并不是！[](img/cdd7efd64de809f73ede64b817f02ea2_17.png)
- en: Bank of America's website it's my bank，HTML file that I have written the。so
    happens to look like Bank of，America's website because I copied all。of that underlying
    HTML so HTML has the，ability to describe the structure of our。webpage but anytime
    you're writing this，HTML it's good to be mindful of the fact。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 美国银行的网站是我的银行，我写的 HTML 文件正好看起来像美国银行的网站，因为我复制了所有的底层 HTML。因此，HTML 能够描述我们网页的结构，但每当你写这
    HTML 时，记得这一点是很重要的。
- en: that anyone can copy your HTML could，theoretically pretend to be Yumi's are。security
    vulnerabilities that are worth，bearing in mind as we start to develop。web applications
    and interacting with，web applications as well so ultimately。we used HTML in the
    context of designing，web applications using Django a。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 任何人都可以复制你的 HTML，从理论上讲，可以假装成 Yumi 的网站，这些安全漏洞值得我们在开始开发网络应用程序和与网络应用程序互动时注意。因此，最终我们在设计使用
    Django 的网络应用程序时使用了 HTML。
- en: framework and how exactly then did these，web frameworks work in terms of creating。these
    web servers that are listening for，requests and that are responding to。those requests
    well ultimately much of，the internet is based around this idea。of a client communicating
    with a server，or more generally any one computer。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 框架到底是如何工作的，这些网络框架如何创建监听请求并响应这些请求的网络服务器？最终，互联网的许多内容都是围绕客户端与服务器之间的通信这个理念构建的，或者更一般来说，是任一台计算机之间的通信。
- en: communicating with another computer，using HTTP and in particular HTTP a more。secure
    version of the HTTP protocol and，so you might imagine that what these。protocols
    are really about is how，information gets from one person to。another and what we're
    storing with that，information that we have one computer。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 正在使用 HTTP 与另一台计算机通信，尤其是 HTTP 的更安全版本。因此，你可能想象这些协议实际上是关于如何将信息从一个人传递到另一个人，以及我们与这些信息一起存储的内容。
- en: trying to communicate with some other，computer and in order to do so。information
    is generally going to flow，through these routers that you might。imagine information
    going back and forth，between one computer and another。computer going through these，intermediate
    routers along the way and。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 试图与另一台计算机通信，为此信息通常会通过这些路由器流动，你可以想象信息在一台计算机和另一台计算机之间来回传递，通过这些中间路由器沿途。
- en: as a result one thing to be cautious，about is how do you know that this。information
    that's getting passed back，and forth is getting passed back and。forth securely
    then ideally when I send，a message to another computer I'm。sending an email to
    someone else I'm，sending a message I'm making a request。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 因此需要谨慎的一件事是，你如何知道这信息在来回传递时是安全的？理想情况下，当我向另一台计算机发送消息时，我就是在给其他人发送电子邮件，发送消息，或者发出请求。
- en: to a website that might contain，sensitive information like my bank。account for
    example I don't want it so，that any intercepting router that is。taking my requests
    and passing it along，I don't want those routers to be able to。look at that request
    and see the，contents of my email or the contents of。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，我不希望任何拦截请求的路由器能查看我的银行账户等敏感信息。我希望确保这些路由器无法看到我的请求及其内容。
- en: what password I happen to be sending，across the web or not ideally I'd like。for
    this information to be encrypted and，so here we'll talk a little bit about。cryptography
    this process of trying to，make sure that I am able to communicate。with some other
    person without some，eavesdropper in the middle being able to。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望在网上发送的密码信息能够被加密，因此我们将讨论**密码学**，即确保能够与他人沟通而不被中间窃听者监听的过程。
- en: intercept that message obviously if I，just take a plain，next version of the
    message I'm trying。to send and just literally take the text，of the message I'm
    trying to send and，Internet。well then anyone who is able to see that，message is
    going to know what the text。of that message is and so I want to do，some kind of
    encryption some way of。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，如果我直接发送未加密的消息文本，那么任何看到该消息的人都会知道内容，因此我需要某种加密方式。
- en: encrypting that message so that someone，along the way won't be able to do that。decryption
    if a router in the middle or，someone in the middle is able to。intercept that message
    and so the first，approach we'll look at is what's known。as secret key cryptography
    in secret key，cryptography I have not just the。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对消息进行加密，以防有人在传输过程中能够解密。如果中间的路由器或其他人能够拦截消息，那么我们首先要考虑的是所谓的**对称密钥密码学**。
- en: plaintext but some key some secret piece，of information that can be used in
    order。to encrypt or decrypt information and so，I'll use both the key and the plaintext。to
    generate what's known as the cipher，text the encrypted version of the。message
    I'm trying to send and then，incentives instead of sending the。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这里涉及的不是明文，而是某个密钥，一个用于加密或解密信息的秘密信息。我将使用密钥和明文生成称为**密文**的加密版本。
- en: plaintext across the Internet to the，other person I might instead want to。just
    send the ciphertext across the，internet to the other person so that I'm。not sending
    the plain version of the，message across the internet so the。ciphertext goes across
    and the other，person will also need the key and now if。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我可能想要通过互联网发送密文，而不是明文，以防发送明文导致内容泄露。因此，密文被传送，另一方也需要密钥。
- en: the other person has both the ciphertext，and the key well then using that。information
    the other person can use the，key to decrypt the ciphertext and obtain。the original
    plaintext this key is what，we might call a symmetric key encryption。and decryption
    key you use the key in，order to encrypt messages and you use。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果其他人拥有密文和密钥，那么他们就可以利用这些信息使用密钥解密密文，得到原始明文。这个密钥可以称为**对称密钥加密和解密密钥**，用来加密和解密消息。
- en: the same key in order to do the，decryption process and as long as both I。and
    the person I'm communicating with，both have access to that key well then。we'll
    be able to encrypt messages and，decrypt messages and someone who just。has the
    ciphertext but not the key，likely won't be able to figure out what。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成解密过程，我和交流对象都需要同样的密钥，只要我们都能访问这个密钥，就可以加密和解密消息，而仅拥有密文但没有密钥的人则不太可能解读出内容。
- en: that original message was but there's a，problem here especially in the context。of
    the Internet and that is that both I，and the other person need to have access。to
    this key the key is what I use to do，the encryption and the decryption and I。can't
    just send the key across the，internet to the other person because if。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 但在互联网环境中存在一个问题，即我和另一方都需要访问这个密钥。密钥用于加密和解密，但我不能直接将密钥通过互联网发送给他人。
- en: I do that well then someone in the，middle who's intercepting all of my。requests
    could intercept both the，ciphertext and the key and therefore，they would be able。to
    decrypt the message because they have，both the ciphertext and the key now if I。were
    able to go to another person in，person and exchange the secret key in。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我做得很好，那么中间的某个人拦截了我的请求，他们就可以同时获取密文和密钥，因此他们能够解密消息，因为他们同时拥有密文和密钥。如果我能够与另一个人当面交换密钥。
- en: secret well then this scheme might work，because we both have the key and I。didn't
    share the key publicly with，anyone who might intercept the message。only I and
    the other person have the key，but in general when communicating on the。internet
    you're not communicating with，servers you've necessarily communicated。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 只要我们都有密钥，而且我没有将密钥公开分享给可能拦截消息的任何人，这个方案就能奏效。只有我和另一个人拥有密钥，但通常在互联网上交流时，你并不是在与你已经通信的服务器沟通。
- en: with before I might be trying to make a，request to a new website and we somehow。still
    need to agree on a system where I，can encrypt messages but only the other。person
    on the other side is able to，decrypt those messages instead so this。kind of cryptography
    probably not great，for trying to initially try and create a。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在我尝试向一个新网站发起请求时，我们需要达成一个协议，让我可以加密消息，而只有对方能够解密这些消息，因此这种加密方式可能并不适合初步创建。
- en: secure connection on the Internet and，for that reason a major advancement in。cryptography
    that allows for the，internet to work is this notion of。public key cryptography
    in secret key，cryptography it's important the key is。secret because if the key
    were known by，everyone well then anyone would be able。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网的安全连接，对于密码学的一项重大进展是公共密钥加密的概念，而在秘密密钥加密中，密钥必须是秘密的，因为如果每个人都知道密钥，那么任何人都能够。
- en: to decrypt messages in public key，cryptography were able to create a。secure
    encryption system where the key，is allowed to be public or one of the。keys as
    well soon see and the idea here，is that we're using two keys instead of。just one
    that we have both a public key，and what's known as a private key the。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在公钥密码学中，我们能够创建一个安全的加密系统，其中密钥是公开的，或者至少是其中一个密钥。如你所见，这里的想法是我们使用两个密钥而不是一个，我们同时拥有一个公钥和一个称为私钥的密钥。
- en: private key your private key is，something you should not share with。other people
    to keep the encryption，scheme secure but the public key is one。that is okay to
    share with other people，and the distinction between the two is。that the public
    key will be used in，order to encrypt information and the。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥是你应该绝对不与他人分享的东西，以保持加密方案的安全，而公钥则可以与他人分享，二者的区别在于公钥用于加密信息。
- en: private key will be used to decrypt，information that was encrypted。by the public
    key and the public key and，the private key are mathematically。related there are
    a couple of ways that，we might imagine doing that but the idea。now is that if
    I want to communicate，with another person that person sends me。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥将用于解密由公钥加密的信息，公钥与私钥在数学上是相关的，我们可以想象几种方法来实现这一点，但现在的想法是，如果我想与另一个人交流，那个人会把。
- en: their public key and it's okay for the，public key to travel across the internet。anyone
    is allowed to see the public key，because the public key is only used for。encrypting
    that data so I can then take，the plaintext and the public key and use。that to
    generate the ciphertext the，am trying to，and across the Internet and then I send。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的公钥发送给我，公钥可以在互联网中传输。任何人都可以看到公钥，因为公钥仅用于加密数据，因此我可以使用明文和公钥生成密文。
- en: the ciphertext to the other person with，whom I'm trying to communicate and the。other
    person now using the ciphertext，then uses the private key the private。key that
    they did not share in the，private key that has the ability to。decrypt information
    that was encrypted，using the public key so using a。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我将密文发送给我想要沟通的另一方，而另一方现在使用密文，再用他们没有分享的私钥，私钥能够解密使用公钥加密的信息，因此使用这种方式。
- en: combination of the ciphertext and the，private key the person I'm communicating。with
    can decrypt that information and，get back whatever the original plaintext。of that
    information happened to be and，so this then is how we can do a lot of。this communication
    on the Internet by，using this public private key pair we。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 密文与私钥的组合，使得我所沟通的那个人能够解密信息，恢复出原始的明文内容，因此这就是我们如何通过使用公钥和私钥对在互联网上进行大量通信的方式。
- en: can say use the public key to do the，encryption use the private key to do the。decrypting
    and now two computers that，have never interacted with each other。before without
    having the opportunity to，meet to exchange some secret information。can use a technique
    like this in order，to securely communicate with each other。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用公钥进行加密，使用私钥进行解密，而现在两个之前从未互动过的计算机，无需见面以交换某些秘密信息，可以使用这种技术安全地互相沟通。
- en: to send a message back and forth without，anyone in the middle being able to。intercept
    the message and identify what，the message is about and once you have。this ability
    the ability to communicate，with another secretly well then you。could imagine agreeing
    on some secret，key and then using secret key encryption。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以来回发送消息，而中间没有人能够拦截消息并识别消息的内容。一旦你具备这种能力，能够与他人秘密交流，那么你可以想象达成某种秘密密钥的共识，然后使用对称密钥加密。
- en: to be able to encrypt and decrypt，messages as well and so that's an。approach
    that you can also take when，trying to communicate with other people，across the
    Internet。this idea of encryption is what allows，for HTTPS a secure version of
    the HTTP。protocol to actually work to make sure，that when you are communicating
    with。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以便能够加密和解密消息，因此这是你在尝试与他人通过互联网沟通时可以采取的一种方法。加密的理念使得HTTPS得以实现，这是HTTP协议的安全版本，以确保你在沟通时。
- en: your bank's website for example someone，along the way won't be able to intercept。that
    information and identify what it is，that you're communicating about and。instead
    only has the encrypted version，of the information and a plant in a。public key
    with which they can encrypt，information but not a private key that。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你银行的网站上，途中不会有人能够拦截信息并识别你在沟通的内容，而只能得到加密版本的信息，以及一个公钥，用于加密信息，但没有可以解密信息的私钥。
- en: can ultimately be used in order to，decrypt information as well and so that。then
    is how we might allow for this kind，of secure communication on the Internet。and
    allow our web applications to be，secure but in addition to our web。applications
    just listening for requests，and then providing some sort of response。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，这种方法使我们能够在互联网上实现这种安全通信，并使我们的网络应用程序变得安全。此外，我们的网络应用程序不仅是监听请求，并提供某种响应。
- en: our web applications we're also dealing，with data we introduced the idea of。sequel
    data tables where we had tables，of data with rows and columns that are。representing
    information and we've also，created web application。![](img/cdd7efd64de809f73ede64b817f02ea2_19.png)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本课程中，我们引入了SQL数据表的概念，表中有代表信息的行和列，我们还创建了网络应用程序。![](img/cdd7efd64de809f73ede64b817f02ea2_19.png)
- en: in this course where we've had，applications that have users uses sign。![](img/cdd7efd64de809f73ede64b817f02ea2_21.png)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在本课程中，我们有用户使用的应用程序。![](img/cdd7efd64de809f73ede64b817f02ea2_21.png)
